# coding: utf-8

"""
    Unified Access Gateway REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.2
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class PasswordPolicySettings(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            passwordPolicyMinLen = schemas.Int32Schema
            passwordPolicyMinClass = schemas.Int32Schema
            passwordPolicyDifok = schemas.Int32Schema
            passwordPolicyUnlockTime = schemas.Int64Schema
            passwordPolicyFailedLockout = schemas.Int32Schema
            __annotations__ = {
                "passwordPolicyMinLen": passwordPolicyMinLen,
                "passwordPolicyMinClass": passwordPolicyMinClass,
                "passwordPolicyDifok": passwordPolicyDifok,
                "passwordPolicyUnlockTime": passwordPolicyUnlockTime,
                "passwordPolicyFailedLockout": passwordPolicyFailedLockout,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordPolicyMinLen"]) -> MetaOapg.properties.passwordPolicyMinLen: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordPolicyMinClass"]) -> MetaOapg.properties.passwordPolicyMinClass: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordPolicyDifok"]) -> MetaOapg.properties.passwordPolicyDifok: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordPolicyUnlockTime"]) -> MetaOapg.properties.passwordPolicyUnlockTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordPolicyFailedLockout"]) -> MetaOapg.properties.passwordPolicyFailedLockout: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["passwordPolicyMinLen", "passwordPolicyMinClass", "passwordPolicyDifok", "passwordPolicyUnlockTime", "passwordPolicyFailedLockout", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordPolicyMinLen"]) -> typing.Union[MetaOapg.properties.passwordPolicyMinLen, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordPolicyMinClass"]) -> typing.Union[MetaOapg.properties.passwordPolicyMinClass, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordPolicyDifok"]) -> typing.Union[MetaOapg.properties.passwordPolicyDifok, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordPolicyUnlockTime"]) -> typing.Union[MetaOapg.properties.passwordPolicyUnlockTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordPolicyFailedLockout"]) -> typing.Union[MetaOapg.properties.passwordPolicyFailedLockout, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["passwordPolicyMinLen", "passwordPolicyMinClass", "passwordPolicyDifok", "passwordPolicyUnlockTime", "passwordPolicyFailedLockout", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        passwordPolicyMinLen: typing.Union[MetaOapg.properties.passwordPolicyMinLen, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        passwordPolicyMinClass: typing.Union[MetaOapg.properties.passwordPolicyMinClass, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        passwordPolicyDifok: typing.Union[MetaOapg.properties.passwordPolicyDifok, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        passwordPolicyUnlockTime: typing.Union[MetaOapg.properties.passwordPolicyUnlockTime, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        passwordPolicyFailedLockout: typing.Union[MetaOapg.properties.passwordPolicyFailedLockout, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PasswordPolicySettings':
        return super().__new__(
            cls,
            *_args,
            passwordPolicyMinLen=passwordPolicyMinLen,
            passwordPolicyMinClass=passwordPolicyMinClass,
            passwordPolicyDifok=passwordPolicyDifok,
            passwordPolicyUnlockTime=passwordPolicyUnlockTime,
            passwordPolicyFailedLockout=passwordPolicyFailedLockout,
            _configuration=_configuration,
            **kwargs,
        )
