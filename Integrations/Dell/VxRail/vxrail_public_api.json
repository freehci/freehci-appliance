{
	"openapi": "3.0.0",
	"info": {
		"description": "The VxRail REST API provides a programmatic interface for performing VxRail administrative tasks. Data is available in JSON format.",
		"title": "VxRail REST API",
		"version": "8.0.020",
		"contact": {
			"name": "The VxRail Team"
		}
	},
	"tags": [
		{
			"name": "Pre-installation static IP",
			"description": "Pre-installation static IP"
		},
		{
			"name": "ESXi hostname or management IP address change",
			"description": "ESXi hostname or management IP address change"
		},
		{
			"name": "VxRail installation",
			"description": "VxRail installation"
		},
		{
			"name": "LCM pre-check",
			"description": "LCM pre-check"
		},
		{
			"name": "LCM upgrade",
			"description": "LCM upgrade"
		},
		{
			"name": "Bandwidth throttling information",
			"description": "Bandwidth throttling information"
		},
		{
			"name": "Call home mode",
			"description": "Call home mode"
		},
		{
			"name": "Call home operations",
			"description": "Call home operations"
		},
		{
			"name": "Certificates",
			"description": "Certificates"
		},
		{
			"name": "Chassis information",
			"description": "Chassis information"
		},
		{
			"name": "Cluster information",
			"description": "Cluster information"
		},
		{
			"name": "Cluster shutdown",
			"description": "Cluster shutdown"
		},
		{
			"name": "Cluster expansion",
			"description": "Cluster expansion"
		},
		{
			"name": "CVS public",
			"description": "CVS public"
		},
		{
			"name": "Disk information",
			"description": "Disk information"
		},
		{
			"name": "Disk slot mapping",
			"description": "Disk slot mapping"
		},
		{
			"name": "Host folder LCM",
			"description": "Host folder LCM"
		},
		{
			"name": "Host information",
			"description": "Host information"
		},
		{
			"name": "Host iDRAC configuration",
			"description": "Host iDRAC configuration"
		},
		{
			"name": "Host removal",
			"description": "Host removal"
		},
		{
			"name": "Management account",
			"description": "vCenter management account and ESXi host management accounts"
		},
		{
			"name": "Network segment management",
			"description": "Network segment management"
		},
		{
			"name": "Request status",
			"description": "Request status"
		},
		{
			"name": "Satellite node expansion",
			"description": "Satellite node expansion"
		},
		{
			"name": "Support account",
			"description": "Support account"
		},
		{
			"name": "Support chat",
			"description": "Support chat"
		},
		{
			"name": "Support community forum",
			"description": "Support community forum"
		},
		{
			"name": "Support contact",
			"description": "Support contact"
		},
		{
			"name": "Support heartbeat information",
			"description": "Support heartbeat information"
		},
		{
			"name": "Support knowledge base",
			"description": "Support knowledge base"
		},
		{
			"name": "Support logs",
			"description": "Support logs"
		},
		{
			"name": "Support service request",
			"description": "Support service request"
		},
		{
			"name": "System credentials",
			"description": "System credentials"
		},
		{
			"name": "System information",
			"description": "System information"
		},
		{
			"name": "System network",
			"description": "System network"
		},
		{
			"name": "System pre-check",
			"description": "System pre-check"
		},
		{
			"name": "System proxy settings",
			"description": "System proxy settings"
		},
		{
			"name": "Telemetry reporting",
			"description": "Telemetry reporting"
		},
		{
			"name": "vCenter Server mode",
			"description": "vCenter Server mode"
		},
		{
			"name": "Virtual machine information",
			"description": "Virtual machine information"
		}
	],
	"servers": [
		{
			"description": "VxRail Manager Server",
			"url": "/rest/vxm"
		}
	],
	"security": [
		{
			"basicAuth": []
		}
	],
	"paths": {
		"/v1/callhome/mode": {
			"get": {
				"tags": [
					"Call home mode"
				],
				"summary": "Get call home mode",
				"description": "Retrieve the call home mode.",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CallhomeSettingsInfo"
								},
								"example": {
									"is_muted": true
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_callhome_mode_get"
			},
			"put": {
				"tags": [
					"Call home mode"
				],
				"summary": "Change call home mode",
				"description": "Change the call home mode.",
				"requestBody": {
					"description": "Sets whether call home mode is muted or unmuted.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CallhomeSettingsSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"is_muted": false
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_callhome_mode_put"
			}
		},
		"/v1/callhome/info": {
			"get": {
				"deprecated": true,
				"tags": [
					"Call home operations"
				],
				"summary": "Get call home server information (v1)",
				"description": "Retrieve information about the call home servers. This API has been deprecated and only response with status code 410 will be returned.",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CallhomeInfo"
								},
								"examples": {
									"esrsRegistered": {
										"value": {
											"status": "registered",
											"integrated": true,
											"site_id": "string",
											"ip_list": [
												{
													"ip": "192.168.106.121",
													"primary": true,
													"version": "string"
												}
											]
										}
									},
									"esrsRegistering": {
										"value": {
											"status": "deploying",
											"integrated": true,
											"site_id": "string"
										}
									},
									"Example": {
										"value": {
											"status": "string",
											"integrated": true,
											"ip_list": [
												{
													"ip": "192.168.106.121",
													"primary": true,
													"version": "string",
													"upgradeRequestId": "string"
												}
											],
											"site_id": "string"
										}
									}
								}
							}
						}
					},
					"410": {
						"description": "This API is deprecated.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"example": {
									"message": "This API has been deprecated. Please use /v1/callhome/enable instead."
								}
							}
						}
					}
				},
				"operationId": "callhome_info_get_v1"
			}
		},
		"/v2/callhome/info": {
			"get": {
				"tags": [
					"Call home operations"
				],
				"summary": "Get call home server information (v2)",
				"description": "Retrieve information about the call home servers.",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CallhomeInfoV2"
								},
								"examples": {
									"esrsRegistered": {
										"value": {
											"status": "registered",
											"integrated": true,
											"site_id": "11145366",
											"address_list": [
												{
													"address": "esrs.testdomain",
													"primary": true,
													"version": "3.36.00.10"
												}
											]
										}
									},
									"esrsRegistering": {
										"value": {
											"status": "deploying",
											"integrated": true,
											"site_id": "11145366"
										}
									},
									"Example": {
										"value": {
											"status": "string",
											"integrated": true,
											"address_list": [
												{
													"address": "esrs.testdomain",
													"primary": true,
													"version": "string",
													"upgradeRequestId": "string"
												}
											],
											"site_id": "string"
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"description": "The server has not found anything matching the Request-URI.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/404-Nocontent"
								},
								"example": {
									"error_code": 4,
									"message": "No callhome information found. Callhome may not be registered."
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_callhome_info"
			}
		},
		"/v1/callhome/deployment": {
			"post": {
				"deprecated": true,
				"tags": [
					"Call home operations"
				],
				"summary": "Deploy internal call home server (v1)",
				"description": "Deploy an internal call home server. This API has been deprecated and only response with status code 410 will be returned.",
				"requestBody": {
					"description": "Information about the SRS server to be deployed.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CallhomeDeploySpec"
							},
							"examples": {
								"Example": {
									"value": {
										"ip": "10.62.83.114",
										"site_id": "11145366",
										"first_name": "VxRail",
										"last_name": "emc",
										"email": "vxrail.test@emconlinesupport.com",
										"phone": "1508435-1000",
										"company": "EMC CORP-PARTNER",
										"root_pwd": "password123!",
										"admin_pwd": "Testvxrail123!"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/200"
								}
							}
						}
					},
					"410": {
						"description": "This API is deprecated.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"example": {
									"message": "This API has been deprecated. Please use /v1/callhome/enable instead."
								}
							}
						}
					}
				},
				"operationId": "v1_callhome_deployment_post"
			}
		},
		"/v2/callhome/deployment": {
			"post": {
				"deprecated": true,
				"tags": [
					"Call home operations"
				],
				"summary": "Deploy internal call home server (v2)",
				"description": "Deploy an internal call home server. This API has been deprecated and only response with status code 410 will be returned.",
				"requestBody": {
					"description": "Details for SRS to be deployed.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CallhomeDeploySpecV2"
							},
							"examples": {
								"IP": {
									"value": {
										"address": "192.168.100.100",
										"site_id": "123456789",
										"first_name": "VxRail",
										"last_name": "emc",
										"email": "vxrail.test@emconlinesupport.com",
										"phone": "123456789",
										"company": "EMC",
										"root_pwd": "testpassword",
										"admin_pwd": "testpassword"
									}
								},
								"FQDN": {
									"value": {
										"address": "esrs.testdomain",
										"site_id": "123456789",
										"first_name": "VxRail",
										"last_name": "emc",
										"email": "vxrail.test@emconlinesupport.com",
										"phone": "123456789",
										"company": "EMC",
										"root_pwd": "testpassword",
										"admin_pwd": "testpassword"
									}
								},
								"Example": {
									"value": {
										"address": "esrs.testdomain",
										"site_id": "11145366",
										"first_name": "VxRail",
										"last_name": "emc",
										"email": "vxrail.test@emconlinesupport.com",
										"phone": "1508435-1000",
										"company": "EMC CORP-PARTNER",
										"root_pwd": "password123!",
										"admin_pwd": "Testvxrail123!"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/200"
								}
							}
						}
					},
					"410": {
						"description": "This API is deprecated.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"example": {
									"message": "This API has been deprecated. Please use /v1/callhome/enable instead."
								}
							}
						}
					}
				},
				"operationId": "v2_callhome_deployment_post"
			}
		},
		"/v1/callhome/internal/register": {
			"post": {
				"deprecated": true,
				"tags": [
					"Call home operations"
				],
				"summary": "Activate and register internal call home server",
				"description": "Activate and register an internal call home server. This API has been deprecated and only response with status code 410 will be returned.",
				"requestBody": {
					"description": "Access code for activating an internal call home server.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AccessCodeSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"access_code": "11145366"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/200"
								}
							}
						}
					},
					"410": {
						"description": "This API is deprecated.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"example": {
									"message": "This API has been deprecated. Please use /v1/callhome/enable instead."
								}
							}
						}
					}
				},
				"operationId": "v1_callhome_internal_register_post"
			}
		},
		"/v1/callhome/external/register": {
			"post": {
				"operationId": "v1_callhome_external_register_post",
				"deprecated": true,
				"tags": [
					"Call home operations"
				],
				"summary": "Register external call home servers (v1)",
				"description": "Register external call home servers. This API has been deprecated and only response with status code 410 will be returned.",
				"requestBody": {
					"description": "Information about each of the external SRS servers to be registered.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalCallhomeRegisterSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"site_id": "11145366",
										"ip_list": [
											"192.168.106.121",
											"192.168.106.122"
										],
										"support_username": "vxrail.test@emconlinesupport.com",
										"support_pwd": "password"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/200"
								}
							}
						}
					},
					"410": {
						"description": "This API is deprecated.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"example": {
									"message": "This API has been deprecated. Please use /v1/callhome/enable instead."
								}
							}
						}
					}
				}
			}
		},
		"/v2/callhome/external/register": {
			"post": {
				"deprecated": true,
				"tags": [
					"Call home operations"
				],
				"summary": "Register external call home servers (v2)",
				"description": "Register external call home servers. This API has been deprecated and only response with status code 410 will be returned.",
				"requestBody": {
					"description": "Information about each of the external SRS servers to be registered.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalCallhomeRegisterSpecV2"
							},
							"examples": {
								"Example": {
									"value": {
										"site_id": "11145366",
										"address_list": [
											"192.168.106.121",
											"esrs.testdomain"
										],
										"support_username": "vxrail.test@emconlinesupport.com",
										"support_pwd": "password"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/200"
								}
							}
						}
					},
					"410": {
						"description": "This API is deprecated.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"example": {
									"message": "This API has been deprecated. Please use /v1/callhome/enable instead."
								}
							}
						}
					}
				},
				"operationId": "v2_callhome_external_register_post"
			}
		},
		"/v1/callhome/access-code": {
			"post": {
				"deprecated": true,
				"tags": [
					"Call home operations"
				],
				"summary": "Generate access code to activate internal call home server",
				"description": "Generate an access code to activate the internal call home server. This API has been deprecated and only response with status code 410 will be returned.",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/200"
								}
							}
						}
					},
					"410": {
						"description": "This API is deprecated.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"example": {
									"message": "This API has been deprecated. Please use /v1/callhome/enable instead."
								}
							}
						}
					}
				},
				"operationId": "v1_callhome_access-code_post"
			}
		},
		"/v1/callhome/enable": {
			"post": {
				"tags": [
					"Call home operations"
				],
				"summary": "Enable call home functionality",
				"description": "Enable call home functionality by enabing remote connectivity service.<br/>\nif remote connector type is ESE <br/>\n    1) update ESE state to configuring <br/>\n    2) Initialize ESE lockbox<br/>\n    3) Update ESE configuation (product/gateway/proxy )<br/>\n    4) Generate universal key by PIN/access key or upload pre-installed universal key to ESE <br/>\n    5) Enable ESE connection<br/>\n    6) update ESE state to configured<br/>",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EnableCallhomeSpec"
							},
							"examples": {
								"enable-with-universal-key-via-proxy": {
									"value": {
										"serial_number": "11Y40S20000000",
										"proxy_type": "USER",
										"proxy": {
											"protocol": "HTTP",
											"address": "20.1.1.7",
											"port": 8080,
											"user": "vxrail",
											"password": "Testvxrail123!"
										},
										"customer_contact_infos": [
											{
												"contact_order": 1,
												"first_name": "Rob",
												"last_name": "Gordon",
												"phone_number": "+1 (312) 555-7746",
												"email_address": "rob@championshipvinyl.biz",
												"pref_language": "en-US"
											}
										],
										"connection_type": "DIRECT"
									}
								},
								"enable-with-pin-accesskey": {
									"value": {
										"serial_number": "11Y40S20000000",
										"pin": "1234",
										"access_key": "7F953DD9",
										"customer_contact_infos": [
											{
												"contact_order": 1,
												"first_name": "Rob",
												"last_name": "Gordon",
												"phone_number": "+1 (312) 555-7746",
												"email_address": "rob@championshipvinyl.biz",
												"pref_language": "en-US"
											}
										],
										"connection_type": "DIRECT"
									}
								},
								"enable-with-pin-accesskey-via-proxy": {
									"value": {
										"serial_number": "11Y40S20000000",
										"pin": "1234",
										"access_key": "7F953DD9",
										"proxy_type": "SYSTEM",
										"proxy": {
											"protocol": "HTTP",
											"address": "20.1.1.7",
											"port": 8080,
											"user": "vxrail",
											"password": "Testvxrail123!"
										},
										"customer_contact_infos": [
											{
												"contact_order": 1,
												"first_name": "Rob",
												"last_name": "Gordon",
												"phone_number": "+1 (312) 555-7746",
												"email_address": "rob@championshipvinyl.biz",
												"pref_language": "en-US"
											}
										],
										"connection_type": "DIRECT"
									}
								},
								"enable-with-pin-accesskey-via-gateway": {
									"value": {
										"serial_number": "11Y40S20000000",
										"pin": "1234",
										"access_key": "7F953DD9",
										"gateways": [
											{
												"host": "20.11.73.109",
												"port": 9443
											},
											{
												"host": "20.11.73.110",
												"port": 9443
											}
										],
										"customer_contact_infos": [
											{
												"contact_order": 1,
												"first_name": "Rob",
												"last_name": "Gordon",
												"phone_number": "+1 (312) 555-7746",
												"email_address": "rob@championshipvinyl.biz",
												"pref_language": "en-US"
											}
										],
										"connection_type": "GATEWAY"
									}
								},
								"enable-with-universal-key-via-gateway": {
									"value": {
										"serial_number": "11Y40S20000000",
										"gateways": [
											{
												"host": "20.11.73.109",
												"port": 9443
											},
											{
												"host": "20.11.73.110",
												"port": 9443
											}
										],
										"customer_contact_infos": [
											{
												"contact_order": 1,
												"first_name": "Rob",
												"last_name": "Gordon",
												"phone_number": "+1 (312) 555-7746",
												"email_address": "rob@championshipvinyl.biz",
												"pref_language": "en-US"
											}
										],
										"connection_type": "GATEWAY"
									}
								},
								"enable-with-universal-key-direct-connect": {
									"value": {
										"serial_number": "11Y40S20000000",
										"customer_contact_infos": [
											{
												"contact_order": 1,
												"first_name": "Rob",
												"last_name": "Gordon",
												"phone_number": "+1 (312) 555-7746",
												"email_address": "rob@championshipvinyl.biz",
												"pref_language": "en-US"
											}
										],
										"connection_type": "DIRECT"
									}
								},
								"Example": {
									"value": {
										"serial_number": "11Y40S20000000",
										"pin": "1234",
										"access_key": "7F953DD9",
										"proxy_type": "USER",
										"proxy": {
											"protocol": "HTTP",
											"address": "20.1.1.7",
											"port": 8080,
											"user": "vxrail",
											"password": "Testvxrail123!"
										},
										"gateways": [
											{
												"host": "20.11.73.109",
												"address": "20.1.1.7",
												"port": 9443
											}
										],
										"customer_contact_infos": [
											{
												"contact_order": 1,
												"first_name": "Rob",
												"last_name": "Gordon",
												"phone_number": "+1 (312) 555-7746",
												"email_address": "rob@championshipvinyl.biz",
												"pref_language": "en-US"
											}
										],
										"connection_type": "DIRECT"
									}
								}
							}
						}
					},
					"description": ""
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_callhome_enable_post"
			}
		},
		"/v1/callhome/disable": {
			"delete": {
				"tags": [
					"Call home operations"
				],
				"summary": "Unregister call home servers",
				"description": "Unregister call home servers and delete the SRS VE virtual machine if it exists.",
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_callhome_disable_delete"
			}
		},
		"/v1/callhome/internal/upgrade": {
			"post": {
				"deprecated": true,
				"tags": [
					"Call home operations"
				],
				"summary": "Upgrade internal SRS software",
				"description": "Upgrade the internal SRS software. This API has been deprecated and only response with status code 410 will be returned.",
				"requestBody": {
					"description": "Parameters for activating a software upgrade on the internal SRS server.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SRSUpgradeSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"admin_pwd": "TestSrs123!",
										"root_pwd": "TestSrs123!"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/200"
								}
							}
						}
					},
					"410": {
						"description": "This API is deprecated.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"example": {
									"message": "This API has been deprecated. Please use /v1/callhome/enable instead."
								}
							}
						}
					}
				},
				"operationId": "v1_callhome_internal_upgrade_post"
			}
		},
		"/v1/certificates/import-vxm": {
			"post": {
				"tags": [
					"Certificates"
				],
				"summary": "Update the VxRail Manager certificate(Version 1)",
				"deprecated": true,
				"description": "Update the VxRail Manager certificate.",
				"requestBody": {
					"description": "Parameters of the VxRail Manager certificate to update",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VxMCertificateSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"cert": "-----BEGIN CERTIFICATE-----...",
										"primary_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----...",
										"root_cert_chain": "-----BEGIN CERTIFICATE-----...",
										"password": "testPassword"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Update operation is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VxMCertificateResponse"
								},
								"example": {
									"message": "The certification file updated successfully, wait approximately 5 minutes for the service to reboot"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_certificates_import-vxm_post"
			}
		},
		"/v2/certificates/import-vxm": {
			"post": {
				"tags": [
					"Certificates"
				],
				"summary": "Update the VxRail Manager certificate(Version 2)",
				"description": "Async api to update the VxRail Manager certificate.",
				"requestBody": {
					"description": "Parameters of the VxRail Manager certificate to update",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VxMCertificateSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"cert": "-----BEGIN CERTIFICATE-----...",
										"primary_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----...",
										"root_cert_chain": "-----BEGIN CERTIFICATE-----...",
										"password": "testPassword"
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "Update operation is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VxMCertificateV2Info"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "88c72018-7198-4c47-9699-045f82c20ec3"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_certificates_import_vxm_post"
			}
		},
		"/v1/trust-store/certificates/fingerprints": {
			"get": {
				"tags": [
					"Certificates"
				],
				"summary": "Get a list of fingerprints retrieved from the certificates in the VxRail Manager trust store used by the HTTP client.",
				"description": "API to retrieve a fingerprint list (using the open SSL command to get the certificate fingerprints in VxRail Manager trust store).",
				"responses": {
					"200": {
						"description": "Get operation is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrustStoreFingerprintsInfo"
								},
								"examples": {
									"Example": {
										"value": {
											"fingerprint": [
												"3F:57:91:F5:04:9A:9E:17:07:72:91:11:A1:61:4C:2A:A8:A0:44:87",
												"98:99:C0:58:9B:9D:45:7E:D0:30:2A:09:EF:75:52:F6:87:D9:22:72"
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_trust_store_certificates_get"
			}
		},
		"/v1/trust-store/certificates/{fingerprint}": {
			"get": {
				"tags": [
					"Certificates"
				],
				"summary": "Search the VxRail Manager trust store and get the certificate content information (PEM form) according to fingerprint parameter.",
				"description": "API to search and get the certificate content from the VxRail Manager trust store according to the fingerprint parameter.",
				"parameters": [
					{
						"name": "fingerprint",
						"description": "The fingerprint certificate you want to query.",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Search operation is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CertificateContentInfo"
								},
								"examples": {
									"Example": {
										"value": {
											"certs": "-----BEGIN CERTIFICATE-----\nMIIEMTCCAxmgAwIBAgIJAPK/2rz8EB+sMA...\n-----END CERTIFICATE-----"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_trust_store_certificates_fingerprint_get"
			},
			"delete": {
				"tags": [
					"Certificates"
				],
				"summary": "Delete the certificate file from the VxRail Manager trust store according to the fingerprint.",
				"description": "API to delete certificate file from the VxRail Manager trust store according to fingerprint.",
				"parameters": [
					{
						"name": "fingerprint",
						"description": "The fingerprint certificate to delete.",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_trust_store_certificates_fingerprint_delete"
			}
		},
		"/v1/trust-store/certificates": {
			"post": {
				"tags": [
					"Certificates"
				],
				"summary": "Import certificates into the VxRail Manager trust store.",
				"description": "API to import certificates into the VxRail Manager trust store according to the certificates content list.",
				"requestBody": {
					"description": "Provide the content of the certificate to be imported (PEM form).",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CertificateContentSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"certs": [
											"-----BEGIN CERTIFICATE-----\nMIIEMTCCAxmgAwIBAgIJAPK/2rz8EB+sMA...\n-----END CERTIFICATE-----"
										]
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_trust_store_certificates__post"
			}
		},
		"/v3/certificates/import-vxm": {
			"post": {
				"tags": [
					"Certificates"
				],
				"summary": "Update the VxRail Manager certificate(Version 3)",
				"description": "Asynchronous API to update the VxRail Manager certificate.",
				"requestBody": {
					"description": "The VxRail Manager certificate parameters for update.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VxMCertificateV3Spec"
							},
							"examples": {
								"Example": {
									"value": {
										"vc_admin_account": "administrator@vsphere.local",
										"vc_admin_password": "testPassword",
										"cert": "-----BEGIN CERTIFICATE-----...",
										"root_cert_chain": [
											"-----BEGIN CERTIFICATE-----...",
											"-----BEGIN CERTIFICATE-----..."
										],
										"private_key": "-----BEGIN *** KEY-----...",
										"password": "testPassword"
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "Update operation is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VxMCertificateV2Info"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "88c72018-7198-4c47-9699-045f82c20ec3"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400-InvalidCertificate"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v3_certificates_import_vxm_post"
			}
		},
		"/v1/certificates/csr": {
			"post": {
				"tags": [
					"Certificates"
				],
				"summary": "Generate a Certificate Signing Request.",
				"description": "Generate a CSR with the given parameters. ",
				"requestBody": {
					"description": "The VxRail Manager parameters to generate a CSR.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VxMCsrSpec"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "CSR generation is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VxMCsrResponse"
								},
								"example": {
									"csr": "-----BEGIN CERTIFICATE REQUEST-----..."
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400-InvalidCsr"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_certificates_csr_post"
			}
		},
		"/v1/certificates/validate": {
			"post": {
				"tags": [
					"Certificates"
				],
				"summary": "Verify the certificate",
				"description": "Verify the VxRail Manager certificate.",
				"requestBody": {
					"description": "Certificate to be validated.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VxMCertificateValidateSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"cert": "-----BEGIN CERTIFICATE-----...",
										"root_cert_chain": [
											"-----BEGIN CERTIFICATE-----...",
											"-----BEGIN CERTIFICATE-----..."
										],
										"private_key": "-----BEGIN *** KEY-----...",
										"password": "testPassword"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Succcessful Operation. Certificate is valid."
					},
					"400": {
						"$ref": "#/components/responses/400-InvalidCertificate"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_certificates_validate_post"
			}
		},
		"/v1/cluster/certificates/scep/config": {
			"post": {
				"tags": [
					"Certificates"
				],
				"summary": "Update automated renewal configurations of certificate through SCEP",
				"description": "Udpate automated renewal configurations of the VxRail Manager TLS certificate through SCEP",
				"requestBody": {
					"description": "Automated renewal configurations of the VxRail Manager TLS certificate",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ScepConfigPostSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"caserver_url": "http://<server IP>/certsrv/mscep/mscep.dll/pkiclient.exe",
										"challenge_password": "46AFFB8552BE8205",
										"scep_on": true,
										"scep_renewal_interval_in_minutes": 180,
										"scep_days_before_expire": 30
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ScepConfigResponse"
								},
								"examples": {
									"Example": {
										"value": {
											"scep_enabled": true,
											"error_code": null,
											"error_message": null,
											"caserver_url": "http://<server IP>/certsrv/mscep/mscep.dll/pkiclient.exe",
											"scep_on": true,
											"scep_renewal_interval_in_minutes": 180,
											"scep_days_before_expire": 30
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_certificates_scep_config_post"
			},
			"get": {
				"tags": [
					"Certificates"
				],
				"summary": "Get automated renewal configurations of the certificate",
				"description": "Automated renewal configurations of the VxRail Manager TLS certificate",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ScepConfigResponse"
								},
								"examples": {
									"Example": {
										"value": {
											"scep_enabled": true,
											"error_code": null,
											"error_message": null,
											"caserver_url": "http://<server IP>/certsrv/mscep/mscep.dll/pkiclient.exe",
											"scep_on": true,
											"scep_renewal_interval_in_minutes": 180,
											"scep_days_before_expire": 30
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_certificates_scep_config_get"
			}
		},
		"/v1/cluster/certificates/scep/status": {
			"get": {
				"tags": [
					"Certificates"
				],
				"summary": "Get automated renewal status of the certificate",
				"description": "Automated renewal status of the VxRail Manager TLS certificate",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ScepStatusGetResponse"
								},
								"examples": {
									"Example": {
										"value": {
											"vxm_cert_expire_time": "2023-08-13 02:42:23 UTC",
											"last_failure_time": "2022-05-24 03:49:35 UTC",
											"last_error_msg": "b'{\\n  \"errorCode\" : 652,\\n  \"message\" : \"The same operation CERTIFICATE_UPDATE is running, try again later.\"\\n}'",
											"last_result": "VXM_CERT_IS_YOUNG",
											"last_run_time": "2022-05-24 03:49:35 UTC",
											"last_success_time": "2022-05-24 02:49:36 UTC",
											"scep_enabled": true
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_certificates_scep_status_get"
			}
		},
		"/v1/chassis": {
			"get": {
				"deprecated": true,
				"tags": [
					"Chassis information"
				],
				"summary": "Get a list of VxRail chassis (v1)",
				"description": "Retrieve a list of VxRail chassis and information about the nodes in each chassis.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ChassisInfo"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "string",
												"part_number": "string",
												"description": "string",
												"service_tag": "string",
												"psnt": "string",
												"model": "string",
												"render_category": "string",
												"generation": 0,
												"health": "Critical",
												"missing": true,
												"hosts": [
													{
														"id": "string",
														"sn": "string",
														"slot": 0,
														"hostname": "string",
														"name": "string",
														"manufacturer": "string",
														"psnt": "string",
														"led_status": "string",
														"health": "string",
														"missing": true,
														"tpm_present": true,
														"operational_status": "string",
														"power_status": "string"
													}
												],
												"power_supplies": [
													{
														"sn": "string",
														"part_number": "string",
														"revision_number": "string",
														"name": "string",
														"manufacturer": "string",
														"slot": 0,
														"health": "string",
														"missing": true
													}
												]
											}
										]
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_chassis_get"
			}
		},
		"/v2/chassis": {
			"get": {
				"deprecated": true,
				"tags": [
					"Chassis information"
				],
				"summary": "Get a list of VxRail chassis (v2)",
				"description": "Retrieve a list of VxRail chassis and information about the nodes in each chassis. Version v2 contains the same attributes as the v1 version plus a geo-location attribute in HostBasicInfoV2.",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ChassisInfoV2"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "string",
												"part_number": "string",
												"description": "string",
												"service_tag": "string",
												"psnt": "string",
												"model": "string",
												"render_category": "string",
												"generation": 0,
												"health": "Critical",
												"missing": true,
												"hosts": [
													{
														"id": "string",
														"sn": "string",
														"slot": 0,
														"hostname": "string",
														"name": "string",
														"manufacturer": "string",
														"psnt": "string",
														"led_status": "string",
														"health": "string",
														"missing": true,
														"tpm_present": true,
														"operational_status": "string",
														"power_status": "string",
														"geo_location": {
															"rack_name": "rack1",
															"order_number": 1
														}
													}
												],
												"power_supplies": [
													{
														"sn": "string",
														"part_number": "string",
														"revision_number": "string",
														"name": "string",
														"manufacturer": "string",
														"slot": 0,
														"health": "string",
														"missing": true
													}
												],
												"bay": true
											}
										]
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_chassis_get"
			}
		},
		"/v3/chassis": {
			"get": {
				"tags": [
					"Chassis information"
				],
				"summary": "Get a list of VxRail chassis (v3)",
				"description": "Retrieve a list of VxRail chassis and information about the nodes in each chassis.",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ChassisInfoV3"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "string",
												"part_number": "string",
												"description": "string",
												"service_tag": "string",
												"psnt": "string",
												"model": "string",
												"render_category": "string",
												"generation": 0,
												"health": "Critical",
												"missing": true,
												"hosts": [
													{
														"id": "string",
														"sn": "string",
														"slot": 0,
														"hostname": "string",
														"name": "string",
														"manufacturer": "string",
														"psnt": "string",
														"led_status": "string",
														"health": "string",
														"missing": true,
														"tpm_present": true,
														"operational_status": "string",
														"power_status": "string",
														"firmwareInfo": {
															"bios_revision": "string",
															"bmc_revision": "string",
															"hba_version": "string",
															"expander_bpf_version": "string",
															"nonexpander_bpf_version": "string",
															"boss_version": "string",
															"cpld_version": "string"
														},
														"geo_location": {
															"rack_name": "rack1",
															"order_number": 1
														}
													}
												],
												"power_supplies": [
													{
														"sn": "string",
														"part_number": "string",
														"revision_number": "string",
														"name": "string",
														"manufacturer": "string",
														"slot": 0,
														"health": "string",
														"missing": true
													}
												]
											}
										]
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v3_chassis_get"
			}
		},
		"/v4/chassis": {
			"get": {
				"tags": [
					"Chassis information"
				],
				"summary": "Get a list of VxRail chassis (v4)",
				"description": "Retrieve a list of VxRail chassis and information about the nodes in each chassis. The v4 version adds support for satellite nodes.",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ChassisInfoV4"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "string",
												"part_number": "string",
												"description": "string",
												"service_tag": "string",
												"psnt": "string",
												"model": "string",
												"render_category": "string",
												"generation": 0,
												"health": "Critical",
												"missing": true,
												"hosts": [
													{
														"id": "string",
														"sn": "string",
														"type": "CLUSTER",
														"slot": 0,
														"hostname": "string",
														"name": "string",
														"manufacturer": "string",
														"psnt": "string",
														"led_status": "string",
														"health": "string",
														"missing": true,
														"tpm_present": true,
														"operational_status": "string",
														"power_status": "string",
														"firmwareInfo": {
															"bios_revision": "string",
															"bmc_revision": "string",
															"hba_version": "string",
															"expander_bpf_version": "string",
															"nonexpander_bpf_version": "string",
															"boss_version": "string",
															"cpld_version": "string",
															"idsdm_version": "string",
															"dcpm_version": "string",
															"perc_version": "string"
														},
														"geo_location": {
															"rack_name": "rack1",
															"order_number": 1
														}
													}
												],
												"power_supplies": [
													{
														"sn": "string",
														"part_number": "string",
														"revision_number": "string",
														"name": "string",
														"manufacturer": "string",
														"slot": 0,
														"health": "string",
														"missing": true
													}
												],
												"bay": false
											}
										]
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v4_chassis_get"
			}
		},
		"/v5/chassis": {
			"get": {
				"tags": [
					"Chassis information"
				],
				"summary": "Get a list of VxRail chassis (v5)",
				"description": "Retrieve a list of VxRail chassis and information about the nodes in each chassis. The v5 version adds support for the witness node.",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ChassisInfoV5"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "string",
												"part_number": "CLUSTER",
												"description": "string",
												"service_tag": "string",
												"psnt": "string",
												"model": "string",
												"render_category": "string",
												"generation": 0,
												"health": "Critical",
												"missing": true,
												"hosts": [
													{
														"id": "string",
														"sn": "string",
														"type": "CLUSTER",
														"slot": 0,
														"hostname": "string",
														"name": "string",
														"manufacturer": "string",
														"psnt": "string",
														"led_status": "string",
														"health": "string",
														"missing": true,
														"tpm_present": true,
														"operational_status": "string",
														"power_status": "string",
														"firmwareInfo": {
															"bios_revision": "string",
															"bmc_revision": "string",
															"hba_version": "string",
															"expander_bpf_version": "string",
															"nonexpander_bpf_version": "string",
															"boss_version": "string",
															"cpld_version": "string",
															"idsdm_version": "string",
															"dcpm_version": "string",
															"perc_version": "string"
														},
														"geo_location": {
															"rack_name": "rack1",
															"order_number": 1
														}
													}
												],
												"witness": {
													"sn": "V010104",
													"psnt": "string",
													"moid": "string",
													"hostname": "vcluster101-esx04.vv009.local",
													"os_version": "string",
													"bios_version": "string",
													"cpu": "string",
													"power_status": "on",
													"memory": "string",
													"witness_management": "string",
													"boot_devices": [
														{
															"id": "string",
															"sn": "PHYH013201XX480K",
															"device_model": "SSDSCJJB480G8R",
															"sata_type": "string",
															"power_on_hours": 1,
															"power_cycle_count": 1,
															"max_erase_count": 1,
															"avr_erase_count": 1,
															"capacity": "480103981056",
															"health": "string",
															"firmware_version": "2.5.13.4008",
															"bootdevice_type": "string",
															"block_size": "512",
															"slot": 1,
															"status": "NORMAL",
															"part_number": "TW07FXC3PIHiT0440",
															"manufacturer": "INTEL",
															"controller_firmware": "2.5.13.4008",
															"controller_model": "BOSS-S2",
															"controller_status": "NORMAL"
														}
													],
													"nics": [
														{
															"id": "string",
															"type": "string",
															"mac": "string",
															"link_status": "string",
															"link_speed": "string",
															"slot": 0,
															"port": 0,
															"firmware_family_version": "string",
															"drivers": [
																{
																	"driver_name": "string",
																	"driver_version": "string"
																}
															]
														}
													],
													"disks": [
														{
															"id": "string",
															"sn": "string",
															"guid": "string",
															"manufacturer": "string",
															"model": "string",
															"disk_type": "string",
															"protocol": "string",
															"max_capable_speed": "string",
															"enclosure": 0,
															"bay": 0,
															"slot": 0,
															"disk_state": "string",
															"led_status": "string",
															"missing": true,
															"capacity": "string",
															"write_endurance": "string",
															"write_endurance_status": "string",
															"remaining_write_endurance_rate": "string",
															"firmware_revision": "string",
															"disk_claim_type": "non-vSAN",
															"encryption_ability": {
																"key": "SELF_ENCRYPTING_DRIVE",
																"value": "SelfEncryptingDrive"
															},
															"encryption_status": {
																"key": "UNLOCKED",
																"value": "Unlocked"
															}
														}
													]
												},
												"power_supplies": [
													{
														"sn": "string",
														"part_number": "string",
														"revision_number": "string",
														"name": "string",
														"manufacturer": "string",
														"slot": 0,
														"health": "string",
														"missing": true
													}
												],
												"chassis_manager_fw_version": "string",
												"bay": false
											}
										]
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v5_chassis_get"
			}
		},
		"/v1/chassis/{chassis_id}": {
			"get": {
				"deprecated": true,
				"tags": [
					"Chassis information"
				],
				"summary": "Get information about a user-specified chassis (v1)",
				"description": "Get information about a user-specified VxRail chassis.",
				"parameters": [
					{
						"name": "chassis_id",
						"description": "The chassis ID for the VxRail chassis you want to query.",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChassisInfo"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "string",
											"part_number": "string",
											"description": "string",
											"service_tag": "string",
											"psnt": "string",
											"model": "string",
											"render_category": "string",
											"generation": 0,
											"health": "Critical",
											"missing": true,
											"hosts": [
												{
													"id": "string",
													"sn": "string",
													"slot": 0,
													"hostname": "string",
													"name": "string",
													"manufacturer": "string",
													"psnt": "string",
													"led_status": "string",
													"health": "string",
													"missing": true,
													"tpm_present": true,
													"operational_status": "string",
													"power_status": "string"
												}
											],
											"power_supplies": [
												{
													"sn": "string",
													"part_number": "string",
													"revision_number": "string",
													"name": "string",
													"manufacturer": "string",
													"slot": 0,
													"health": "string",
													"missing": true
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_chassis_id_get"
			}
		},
		"/v2/chassis/{chassis_id}": {
			"get": {
				"deprecated": true,
				"tags": [
					"Chassis information"
				],
				"summary": "Get information about a user-specified chassis (v2)",
				"description": "Get information about the user-specified VxRail chassis. Version v2 contains the same attributes as the v1 version plus a geo-location attribute in HostBasicInfoV2.",
				"parameters": [
					{
						"name": "chassis_id",
						"description": "The chassis ID for the VxRail chassis you want to query.",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChassisInfoV2"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "string",
											"part_number": "string",
											"description": "string",
											"service_tag": "string",
											"psnt": "string",
											"model": "string",
											"render_category": "string",
											"generation": 0,
											"health": "Critical",
											"missing": true,
											"hosts": [
												{
													"id": "string",
													"sn": "string",
													"slot": 0,
													"hostname": "string",
													"name": "string",
													"manufacturer": "string",
													"psnt": "string",
													"led_status": "string",
													"health": "string",
													"missing": true,
													"tpm_present": true,
													"operational_status": "string",
													"power_status": "string",
													"geo_location": {
														"rack_name": "rack1",
														"order_number": 1
													}
												}
											],
											"power_supplies": [
												{
													"sn": "string",
													"part_number": "string",
													"revision_number": "string",
													"name": "string",
													"manufacturer": "string",
													"slot": 0,
													"health": "string",
													"missing": true
												}
											],
											"bay": true
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_chassis_id_get"
			}
		},
		"/v3/chassis/{chassis_id}": {
			"get": {
				"tags": [
					"Chassis information"
				],
				"summary": "Get information about a user-specified chassis (v3)",
				"description": "Get information about the user-specified VxRail chassis.",
				"parameters": [
					{
						"name": "chassis_id",
						"description": "Chassis ID",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChassisInfoV3"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "string",
											"part_number": "string",
											"description": "string",
											"service_tag": "string",
											"psnt": "string",
											"model": "string",
											"render_category": "string",
											"generation": 0,
											"health": "Critical",
											"missing": true,
											"hosts": [
												{
													"id": "string",
													"sn": "string",
													"slot": 0,
													"hostname": "string",
													"name": "string",
													"manufacturer": "string",
													"psnt": "string",
													"led_status": "string",
													"health": "string",
													"missing": true,
													"tpm_present": true,
													"operational_status": "string",
													"power_status": "string",
													"firmwareInfo": {
														"bios_revision": "string",
														"bmc_revision": "string",
														"hba_version": "string",
														"expander_bpf_version": "string",
														"nonexpander_bpf_version": "string",
														"boss_version": "string",
														"cpld_version": "string"
													},
													"geo_location": {
														"rack_name": "rack1",
														"order_number": 1
													}
												}
											],
											"power_supplies": [
												{
													"sn": "string",
													"part_number": "string",
													"revision_number": "string",
													"name": "string",
													"manufacturer": "string",
													"slot": 0,
													"health": "string",
													"missing": true
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v3_chassis_id_get"
			}
		},
		"/v4/chassis/{chassis_id}": {
			"get": {
				"tags": [
					"Chassis information"
				],
				"summary": "Get information about a user-specified chassis (v4)",
				"description": "Get information about the user-specified VxRail chassis. The v4 version adds support for satellite nodes.",
				"parameters": [
					{
						"name": "chassis_id",
						"description": "Chassis ID",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChassisInfoV4"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "string",
											"part_number": "string",
											"description": "string",
											"service_tag": "string",
											"psnt": "string",
											"model": "string",
											"render_category": "string",
											"generation": 0,
											"health": "Critical",
											"missing": true,
											"hosts": [
												{
													"id": "string",
													"sn": "string",
													"type": "CLUSTER",
													"slot": 0,
													"hostname": "string",
													"name": "string",
													"manufacturer": "string",
													"psnt": "string",
													"led_status": "string",
													"health": "string",
													"missing": true,
													"tpm_present": true,
													"operational_status": "string",
													"power_status": "string",
													"firmwareInfo": {
														"bios_revision": "string",
														"bmc_revision": "string",
														"hba_version": "string",
														"expander_bpf_version": "string",
														"nonexpander_bpf_version": "string",
														"boss_version": "string",
														"cpld_version": "string",
														"idsdm_version": "string",
														"dcpm_version": "string",
														"perc_version": "string"
													},
													"geo_location": {
														"rack_name": "rack1",
														"order_number": 1
													}
												}
											],
											"power_supplies": [
												{
													"sn": "string",
													"part_number": "string",
													"revision_number": "string",
													"name": "string",
													"manufacturer": "string",
													"slot": 0,
													"health": "string",
													"missing": true
												}
											],
											"bay": false
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v4_chassis_id_get"
			}
		},
		"/v5/chassis/{chassis_id}": {
			"get": {
				"tags": [
					"Chassis information"
				],
				"summary": "Retrieves information about a user-specified chassis (v5)",
				"description": "Retrieves information about the user-specified VxRail chassis. The v5 version adds support for satellite nodes.",
				"parameters": [
					{
						"name": "chassis_id",
						"description": "Chassis ID",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChassisInfoV5"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "string",
											"part_number": "CLUSTER",
											"description": "string",
											"service_tag": "string",
											"psnt": "string",
											"model": "string",
											"render_category": "string",
											"generation": 0,
											"health": "Critical",
											"missing": true,
											"hosts": [
												{
													"id": "string",
													"sn": "string",
													"type": "CLUSTER",
													"slot": 0,
													"hostname": "string",
													"name": "string",
													"manufacturer": "string",
													"psnt": "string",
													"led_status": "string",
													"health": "string",
													"missing": true,
													"tpm_present": true,
													"operational_status": "string",
													"power_status": "string",
													"firmwareInfo": {
														"bios_revision": "string",
														"bmc_revision": "string",
														"hba_version": "string",
														"expander_bpf_version": "string",
														"nonexpander_bpf_version": "string",
														"boss_version": "string",
														"cpld_version": "string",
														"idsdm_version": "string",
														"dcpm_version": "string",
														"perc_version": "string"
													},
													"geo_location": {
														"rack_name": "rack1",
														"order_number": 1
													}
												}
											],
											"witness": {
												"service_tag": "string",
												"psnt": "string",
												"moid": "string",
												"os_version": "string",
												"bios_version": "string",
												"cpu": "string",
												"cpu_health": "string",
												"memory": "string",
												"witness_management": "string",
												"boot_devices": [
													{
														"id": "string",
														"sn": "PHYH013201XX480K",
														"device_model": "SSDSCJJB480G8R",
														"sata_type": "string",
														"power_on_hours": 1,
														"power_cycle_count": 1,
														"max_erase_count": 1,
														"avr_erase_count": 1,
														"capacity": "480103981056",
														"health": "string",
														"firmware_version": "2.5.13.4008",
														"bootdevice_type": "string",
														"block_size": "512",
														"slot": 1,
														"status": "NORMAL",
														"part_number": "TW07FXC3PIHiT0440",
														"manufacturer": "INTEL",
														"controller_firmware": "2.5.13.4008",
														"controller_model": "BOSS-S2",
														"controller_status": "NORMAL"
													}
												],
												"nics": [
													{
														"id": "string",
														"type": "string",
														"mac": "string",
														"link_status": "string",
														"link_speed": "string",
														"slot": 0,
														"port": 0,
														"firmware_family_version": "string",
														"drivers": [
															{
																"driver_name": "string",
																"driver_version": "string"
															}
														]
													}
												],
												"disks": [
													{
														"id": "string",
														"sn": "string",
														"guid": "string",
														"manufacturer": "string",
														"model": "string",
														"disk_type": "string",
														"protocol": "string",
														"max_capable_speed": "string",
														"enclosure": 0,
														"bay": 0,
														"slot": 0,
														"disk_state": "string",
														"led_status": "string",
														"missing": true,
														"capacity": "string",
														"write_endurance": "string",
														"write_endurance_status": "string",
														"remaining_write_endurance_rate": "string",
														"firmware_revision": "string",
														"disk_claim_type": "non-vSAN",
														"encryption_ability": {
															"key": "SELF_ENCRYPTING_DRIVE",
															"value": "SelfEncryptingDrive"
														},
														"encryption_status": {
															"key": "UNLOCKED",
															"value": "Unlocked"
														}
													}
												]
											},
											"power_supplies": [
												{
													"sn": "string",
													"part_number": "string",
													"revision_number": "string",
													"name": "string",
													"manufacturer": "string",
													"slot": 0,
													"health": "string",
													"missing": true
												}
											],
											"bay": false
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v5_chassis_id_get"
			}
		},
		"/v1/cluster": {
			"get": {
				"tags": [
					"Cluster information"
				],
				"summary": "Get VxRail cluster information",
				"deprecated": true,
				"description": "Get VxRail cluster information and basic information about the appliances in the cluster.",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClusterInfo"
								},
								"examples": {
									"Example": {
										"value": {
											"cluster_id": "string",
											"product_type": "string",
											"device_type": "string",
											"vc_connected": true,
											"health": "string",
											"operational_status": "string",
											"chassises": [
												{
													"id": "string",
													"psnt": "string",
													"model": "string",
													"render_category": "string",
													"generation": 0,
													"health": "string",
													"missing": true
												}
											],
											"suppressed": true,
											"last_time": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_cluster_get"
			}
		},
		"/v2/cluster": {
			"get": {
				"tags": [
					"Cluster information"
				],
				"summary": "Get VxRail cluster information",
				"description": "Get VxRail cluster information and basic information about the appliances in the cluster.",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClusterInfoV2"
								},
								"examples": {
									"Example": {
										"value": {
											"cluster_id": "string",
											"product_type": "string",
											"device_type": "string",
											"vc_connected": true,
											"health": "string",
											"operational_status": "string",
											"chassis": [
												{
													"id": "string",
													"psnt": "string",
													"model": "string",
													"render_category": "string",
													"generation": 0,
													"health": "string",
													"missing": true
												}
											],
											"suppressed": true,
											"last_time": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_cluster_get"
			}
		},
		"/v1/cluster/system-virtual-machines": {
			"get": {
				"tags": [
					"Virtual machine information"
				],
				"summary": "Get information about system virtual machines",
				"description": "Get the name, status, and host information for system virtual machines in the VxRail cluster (Witness VM which is deployed in the witness sled in VxRail VD-4000r or VD-4000z platforms is not included).",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SystemVMInfo"
									}
								},
								"examples": {
									"Normal": {
										"value": [
											{
												"name": "VxRail Manager",
												"status": "POWERED_ON",
												"host": "dell194-02.localdomain.local"
											},
											{
												"name": "VMware vCenter Server Platform Services Controller",
												"status": "POWERED_OFF",
												"host": "dell194-01.localdomain.local"
											},
											{
												"name": "VMware vCenter Server Appliance",
												"status": "POWERED_ON",
												"host": "dell194-01.localdomain.local"
											}
										]
									},
									"Example": {
										"value": [
											{
												"name": "string",
												"status": "POWERED_ON",
												"host": "string"
											}
										]
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_cluster_system-virtual-machines_get"
			}
		},
		"/v1/cluster/remove-host": {
			"post": {
				"tags": [
					"Host removal"
				],
				"summary": "Remove a host from the cluster",
				"description": "Remove a host from the cluster.",
				"requestBody": {
					"description": "The user-specified host to be removed",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RemoveHostSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"serial_number": "8xxxxx3",
										"vc_admin_user": {
											"username": "administrator",
											"password": "password"
										},
										"vcsa_root_user": {
											"username": "administrator",
											"password": "password"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"$ref": "#/components/responses/202"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"409": {
						"$ref": "#/components/responses/409"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_cluster_remove-host_post"
			}
		},
		"/v1/cluster/shutdown": {
			"post": {
				"tags": [
					"Cluster shutdown"
				],
				"summary": "Shut down a cluster or perform a shutdown dry run",
				"description": "Shut down a cluster or perform a shutdown dry run.",
				"requestBody": {
					"description": "Perform an optional dry run to check whether it is safe to shut down. The default value is false.",
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"dryrun": {
										"type": "boolean",
										"example": false,
										"default": false,
										"description": "Whether it is safe to shut down"
									}
								}
							},
							"examples": {
								"Example": {
									"value": {
										"dryrun": false
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"$ref": "#/components/responses/202"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					}
				},
				"operationId": "v1_cluster_shutdown_post"
			}
		},
		"/v1/cluster/expansion/validate": {
			"post": {
				"tags": [
					"Cluster expansion"
				],
				"summary": "Validate a cluster expansion",
				"description": "Validate a cluster expansion (layer 2 or layer 3) based on the provided expansion specification.",
				"requestBody": {
					"description": "Parameters to validate the cluster expansion.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExpansionRequest"
							},
							"examples": {
								"IPv4example": {
									"value": {
										"version": "8.0.000",
										"hosts": [
											{
												"customer_supplied": {
													"management_ip": "10.62.81.11",
													"current_root_password": "Passw0rd!"
												},
												"hostname": "dellb05-01.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ip": "10.62.81.11"
													},
													{
														"type": "vsan",
														"ip": "10.62.81.11"
													},
													{
														"type": "vmotion",
														"ip": "10.62.81.11"
													}
												],
												"geo_location": {
													"rack_name": "r1",
													"order_number": 1
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												],
												"storage": {
													"disk_group_type": "2403"
												}
											},
											{
												"customer_supplied": {
													"management_ip": "10.62.81.12",
													"current_root_password": "Passw0rd!"
												},
												"hostname": "dellb05-02.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ip": "10.62.81.12"
													},
													{
														"type": "vsan",
														"ip": "10.62.81.12"
													},
													{
														"type": "vmotion",
														"ip": "10.62.81.12"
													}
												],
												"geo_location": {
													"rack_name": "r1",
													"order_number": 2
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												],
												"storage": {
													"slot_claims": [
														{
															"usage": "non-vSAN",
															"values": [
																{
																	"slots": "0-3,9"
																}
															]
														}
													]
												}
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "Testvxrail123!"
										}
									}
								},
								"IPv6example": {
									"value": {
										"version": "8.0.000",
										"hosts": [
											{
												"customer_supplied": {
													"management_ip": "2001:db8:1ab:16:104",
													"current_root_password": "Passw0rd!"
												},
												"hostname": "dellb05-01.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ip": "2001:db8:1ab:16::104"
													},
													{
														"type": "vsan",
														"ip": "2001:db8:1ab:17::104"
													},
													{
														"type": "vmotion",
														"ip": "2001:db8:1ab:18::104"
													}
												],
												"geo_location": {
													"rack_name": "r1",
													"order_number": 1
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												],
												"storage": {
													"disk_group_type": "2403"
												}
											},
											{
												"customer_supplied": {
													"management_ip": "2001:db8:1ab:16:105",
													"current_root_password": "Passw0rd!"
												},
												"hostname": "dellb05-02.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ip": "2001:db8:1ab:16::105"
													},
													{
														"type": "vsan",
														"ip": "2001:db8:1ab:17::105"
													},
													{
														"type": "vmotion",
														"ip": "2001:db8:1ab:18::105"
													}
												],
												"geo_location": {
													"rack_name": "r1",
													"order_number": 2
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												],
												"storage": {
													"slot_claims": [
														{
															"usage": "non-vSAN",
															"values": [
																{
																	"slots": "0-3,9"
																}
															]
														}
													]
												}
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "Testvxrail123!"
										}
									}
								},
								"Example": {
									"value": {
										"version": "string",
										"hosts": [
											{
												"customer_supplied": {
													"management_ip": "192.168.100.1",
													"current_root_password": "Passw0rd!"
												},
												"host_psnt": "string",
												"hostname": "string",
												"accounts": {
													"root": {
														"username": "string",
														"password": "string"
													},
													"management": {
														"username": "string",
														"password": "string"
													}
												},
												"network": [
													{
														"type": "string",
														"ip": "string",
														"ipv6": "string"
													}
												],
												"maintenance_mode": true,
												"geo_location": {
													"rack_name": "rack1",
													"order_number": 1
												},
												"nic_mappings": [
													{
														"vds_name": "string",
														"name": "string",
														"physical_nic": "string"
													}
												],
												"storage": {
													"disk_group_type": "2403",
													"slot_claims": [
														{
															"usage": "non-vSAN",
															"values": [
																{
																	"slots": "3,6,7-8"
																}
															]
														}
													]
												}
											}
										],
										"vcenter": {
											"username": "string",
											"password": "string"
										},
										"segment_label": "string"
									}
								},
								"Layer 2 Auto discovered nodes Dualstack": {
									"value": {
										"version": "8.0.000",
										"hosts": [
											{
												"hostname": "c3-esx04",
												"host_psnt": "B3XMG030000000",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "password"
													}
												},
												"network": [
													{
														"type": "MANAGEMENT",
														"ip": "20.13.6.104",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VSAN",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VMOTION",
														"ipv6": "2001:db8:1ab:16:104"
													}
												],
												"nic_mappings": [
													{
														"vds_name": "cvds",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "cvds",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												]
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "password"
										},
										"skipped_validators": []
									}
								},
								"Layer 2 Customer supplied nodes Dualstack": {
									"value": {
										"version": "8.0.000",
										"hosts": [
											{
												"hostname": "c3-esx04",
												"customer_supplied": {
													"management_ip": "2001:db8:1ab:16:104",
													"current_root_password": "password"
												},
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "password"
													}
												},
												"network": [
													{
														"type": "MANAGEMENT",
														"ip": "20.13.6.104",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VSAN",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VMOTION",
														"ipv6": "2001:db8:1ab:16:104"
													}
												],
												"nic_mappings": [
													{
														"vds_name": "cvds",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "cvds",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												]
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "password"
										},
										"skipped_validators": []
									}
								},
								"Layer 3 Auto discovered nodes Dualstack": {
									"value": {
										"version": "8.0.000",
										"segment_label": "rack-1",
										"hosts": [
											{
												"hostname": "c3-esx04.rackh02.local",
												"host_psnt": "B3XMG030000000",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "password"
													}
												},
												"network": [
													{
														"type": "MANAGEMENT",
														"ip": "20.13.6.104",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VSAN",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VMOTION",
														"ipv6": "2001:db8:1ab:16:104"
													}
												],
												"nic_mappings": [
													{
														"vds_name": "cvds",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "cvds",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												]
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "password"
										},
										"skipped_validators": []
									}
								},
								"Layer 3 Customer supplied nodes Dualstack": {
									"value": {
										"version": "8.0.000",
										"segment_label": "rack-1",
										"hosts": [
											{
												"hostname": "c3-esx04.rackh02.local",
												"customer_supplied": {
													"management_ip": "2001:db8:1ab:16:104",
													"current_root_password": "password"
												},
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "password"
													}
												},
												"network": [
													{
														"type": "MANAGEMENT",
														"ip": "20.13.6.104",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VSAN",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VMOTION",
														"ipv6": "2001:db8:1ab:16:104"
													}
												],
												"nic_mappings": [
													{
														"vds_name": "cvds",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "cvds",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												]
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "password"
										},
										"skipped_validators": []
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "The request has been accepted for processing. A request_id will be returned and can be used to check the status of the processing.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExpansionNodeInfo"
								},
								"example": {
									"request_id": "5ffe7062-a590-45b8-a172-8d2cf119562e"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_cluster_expansion_validate_post"
			}
		},
		"/v1/cluster/expansion/cancel": {
			"post": {
				"tags": [
					"Cluster expansion"
				],
				"summary": "Cancel a failed cluster expansion",
				"description": "Cancel a failed cluster expansion.",
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_cluster_expansion_cancel_post"
			}
		},
		"/v1/cluster/expansion": {
			"post": {
				"tags": [
					"Cluster expansion"
				],
				"summary": "Perform a cluster expansion",
				"description": "Perform a cluster expansion (layer 2 or layer 3) based on the provided expansion specification.",
				"requestBody": {
					"description": "Parameters to perform the cluster expansion.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExpansionRequest"
							},
							"examples": {
								"Auto discovered nodes": {
									"value": {
										"version": "8.0.000",
										"hosts": [
											{
												"host_psnt": "JBMX5V20000000",
												"hostname": "dellb05-01.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ip": "10.62.81.11"
													},
													{
														"type": "vsan",
														"ip": "10.62.81.11"
													},
													{
														"type": "vmotion",
														"ip": "10.62.81.11"
													}
												],
												"storage": {
													"slot_claims": [
														{
															"usage": "non-vSAN",
															"values": [
																{
																	"slots": "3,6,7-8"
																}
															]
														}
													]
												},
												"geo_location": {
													"rack_name": "r1",
													"order_number": 1
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												]
											},
											{
												"host_psnt": "JHN04D20000000",
												"hostname": "dellb05-02.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ip": "10.62.81.12"
													},
													{
														"type": "vsan",
														"ip": "10.62.81.12"
													},
													{
														"type": "vmotion",
														"ip": "10.62.81.12"
													}
												],
												"geo_location": {
													"rack_name": "r1",
													"order_number": 2
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												],
												"storage": {
													"disk_group_type": "2403"
												}
											}
										],
										"vcenter": {
											"username": "administrator@vsphereAA.local",
											"password": "Testvxrail123!"
										}
									}
								},
								"Customer supplied nodes": {
									"value": {
										"version": "7.0.240",
										"hosts": [
											{
												"customer_supplied": {
													"management_ip": "10.62.81.11",
													"current_root_password": "Passw0rd!"
												},
												"hostname": "dellb05-01.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ip": "10.62.81.11"
													},
													{
														"type": "vsan",
														"ip": "10.62.81.11"
													},
													{
														"type": "vmotion",
														"ip": "10.62.81.11"
													}
												],
												"geo_location": {
													"rack_name": "r1",
													"order_number": 1
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												],
												"storage": {
													"disk_group_type": "2403"
												}
											},
											{
												"customer_supplied": {
													"management_ip": "10.62.81.12",
													"current_root_password": "Passw0rd!"
												},
												"hostname": "dellb05-02.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ip": "10.62.81.12"
													},
													{
														"type": "vsan",
														"ip": "10.62.81.12"
													},
													{
														"type": "vmotion",
														"ip": "10.62.81.12"
													}
												],
												"geo_location": {
													"rack_name": "r1",
													"order_number": 2
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												],
												"storage": {
													"slot_claims": [
														{
															"usage": "non-vSAN",
															"values": [
																{
																	"slots": "3,6,7-8"
																}
															]
														}
													]
												}
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "Testvxrail123!"
										}
									}
								},
								"Auto discovered nodes IPV6": {
									"value": {
										"version": "8.0.000",
										"hosts": [
											{
												"host_psnt": "JBMX5V20000000",
												"hostname": "dellb05-01.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ipv6": "2001:db8:1ab:16::104"
													},
													{
														"type": "vsan",
														"ipv6": "2001:db8:1ab:17::104"
													},
													{
														"type": "vmotion",
														"ipv6": "2001:db8:1ab:18::104"
													}
												],
												"storage": {
													"slot_claims": [
														{
															"usage": "non-vSAN",
															"values": [
																{
																	"slots": "3,6,7-8"
																}
															]
														}
													]
												},
												"geo_location": {
													"rack_name": "r1",
													"order_number": 1
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												]
											},
											{
												"host_psnt": "JHN04D20000000",
												"hostname": "dellb05-02.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ipv6": "2001:db8:1ab:16::105"
													},
													{
														"type": "vsan",
														"ipv6": "2001:db8:1ab:17::105"
													},
													{
														"type": "vmotion",
														"ipv6": "2001:db8:1ab:18::105"
													}
												],
												"geo_location": {
													"rack_name": "r1",
													"order_number": 2
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												],
												"storage": {
													"disk_group_type": "2403"
												}
											}
										],
										"vcenter": {
											"username": "administrator@vsphereAA.local",
											"password": "Testvxrail123!"
										}
									}
								},
								"Customer supplied nodes IPV6": {
									"value": {
										"version": "8.0.000",
										"hosts": [
											{
												"customer_supplied": {
													"management_ip": "2001:db8:1ab:16::104",
													"current_root_password": "Passw0rd!"
												},
												"hostname": "dellb05-01.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ipv6": "2001:db8:1ab:16::105"
													},
													{
														"type": "vsan",
														"ipv6": "2001:db8:1ab:17::105"
													},
													{
														"type": "vmotion",
														"ipv6": "2001:db8:1ab:18::105"
													}
												],
												"geo_location": {
													"rack_name": "r1",
													"order_number": 1
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												],
												"storage": {
													"disk_group_type": "2403"
												}
											},
											{
												"customer_supplied": {
													"management_ip": "2001:db8:1ab:16::105",
													"current_root_password": "Passw0rd!"
												},
												"hostname": "dellb05-02.localdomain.local",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "Testesx123!"
													}
												},
												"network": [
													{
														"type": "management",
														"ipv6": "2001:db8:1ab:16::106"
													},
													{
														"type": "vsan",
														"ipv6": "2001:db8:1ab:17::106"
													},
													{
														"type": "vmotion",
														"ipv6": "2001:db8:1ab:18::106"
													}
												],
												"geo_location": {
													"rack_name": "r1",
													"order_number": 2
												},
												"maintenance_mode": false,
												"nic_mappings": [
													{
														"vds_name": "vds1",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "vds1",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												],
												"storage": {
													"slot_claims": [
														{
															"usage": "non-vSAN",
															"values": [
																{
																	"slots": "3,6,7-8"
																}
															]
														}
													]
												}
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "Testvxrail123!"
										}
									}
								},
								"Example": {
									"value": {
										"version": "string",
										"hosts": [
											{
												"customer_supplied": {
													"management_ip": "192.168.100.1",
													"current_root_password": "Passw0rd!"
												},
												"host_psnt": "string",
												"hostname": "string",
												"accounts": {
													"root": {
														"username": "string",
														"password": "string"
													},
													"management": {
														"username": "string",
														"password": "string"
													}
												},
												"network": [
													{
														"type": "string",
														"ip": "string",
														"ipv6": "string"
													}
												],
												"maintenance_mode": true,
												"geo_location": {
													"rack_name": "rack1",
													"order_number": 1
												},
												"nic_mappings": [
													{
														"vds_name": "string",
														"name": "string",
														"physical_nic": "string"
													}
												],
												"storage": {
													"disk_group_type": "2403",
													"slot_claims": [
														{
															"usage": "non-vSAN",
															"values": [
																{
																	"slots": "3,6,7-8"
																}
															]
														}
													]
												}
											}
										],
										"vcenter": {
											"username": "string",
											"password": "string"
										},
										"segment_label": "string"
									}
								},
								"Layer 2 Auto discovered nodes Dualstack": {
									"value": {
										"version": "8.0.000",
										"hosts": [
											{
												"hostname": "c3-esx04",
												"host_psnt": "B3XMG030000000",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "password"
													}
												},
												"network": [
													{
														"type": "MANAGEMENT",
														"ip": "20.13.6.104",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VSAN",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VMOTION",
														"ipv6": "2001:db8:1ab:16:104"
													}
												],
												"nic_mappings": [
													{
														"vds_name": "cvds",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "cvds",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												]
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "password"
										},
										"skipped_validators": []
									}
								},
								"Layer 2 Customer supplied nodes Dualstack": {
									"value": {
										"version": "8.0.000",
										"hosts": [
											{
												"hostname": "c3-esx04",
												"customer_supplied": {
													"management_ip": "2001:db8:1ab:16:104",
													"current_root_password": "password"
												},
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "password"
													}
												},
												"network": [
													{
														"type": "MANAGEMENT",
														"ip": "20.13.6.104",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VSAN",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VMOTION",
														"ipv6": "2001:db8:1ab:16:104"
													}
												],
												"nic_mappings": [
													{
														"vds_name": "cvds",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "cvds",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												]
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "password"
										},
										"skipped_validators": []
									}
								},
								"Layer 3 Auto discovered nodes Dualstack": {
									"value": {
										"version": "8.0.000",
										"segment_label": "rack-1",
										"hosts": [
											{
												"hostname": "c3-esx04.rackh02.local",
												"host_psnt": "B3XMG030000000",
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "password"
													}
												},
												"network": [
													{
														"type": "MANAGEMENT",
														"ip": "20.13.6.104",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VSAN",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VMOTION",
														"ipv6": "2001:db8:1ab:16:104"
													}
												],
												"nic_mappings": [
													{
														"vds_name": "cvds",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "cvds",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												]
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "password"
										},
										"skipped_validators": []
									}
								},
								"Layer 3 Customer supplied nodes Dualstack": {
									"value": {
										"version": "8.0.000",
										"segment_label": "rack-1",
										"hosts": [
											{
												"hostname": "c3-esx04.rackh02.local",
												"customer_supplied": {
													"management_ip": "2001:db8:1ab:16:104",
													"current_root_password": "password"
												},
												"accounts": {
													"root": {
														"username": "root",
														"password": "password"
													},
													"management": {
														"username": "management",
														"password": "password"
													}
												},
												"network": [
													{
														"type": "MANAGEMENT",
														"ip": "20.13.6.104",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VSAN",
														"ipv6": "2001:db8:1ab:16:104"
													},
													{
														"type": "VMOTION",
														"ipv6": "2001:db8:1ab:16:104"
													}
												],
												"nic_mappings": [
													{
														"vds_name": "cvds",
														"name": "uplink1",
														"physical_nic": "vmnic0"
													},
													{
														"vds_name": "cvds",
														"name": "uplink2",
														"physical_nic": "vmnic1"
													}
												]
											}
										],
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "password"
										},
										"skipped_validators": []
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExpansionNodeInfo"
								},
								"example": {
									"request_id": "5ffe7062-a590-45b8-a172-8d2cf119562e"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_cluster_expansion_post"
			}
		},
		"/v1/cluster/layer3/segments": {
			"get": {
				"tags": [
					"Network segment management"
				],
				"summary": "Get a list of layer 3 segments",
				"description": "Get a list of layer 3 segments that are recognized by VxRail Manager.",
				"responses": {
					"200": {
						"description": "Successful operation. Returns a list of segment names.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"example": [
									"VxRail-initial",
									"rack-temp-1"
								]
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_cluster_layer3_segments_get"
			}
		},
		"/v1/cluster/layer3/segment": {
			"post": {
				"tags": [
					"Network segment management"
				],
				"summary": "Create a new segment",
				"description": "Create a new segment.",
				"requestBody": {
					"description": "Information about the segment configuration, including the proxy IP, gateway, netmask, VLAN, and topology.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Layer3SegmentStartSpec"
							},
							"example": {
								"segment": {
									"segment_label": "rack-temp-1",
									"proxy_ip": "192.168.10.251",
									"management_gateway": "192.168.10.1",
									"management_netmask": "255.255.255.0",
									"management_vlan": 20,
									"management_topology": "DIFF_SUBNET",
									"vsan_gateway": "172.18.33.1",
									"vsan_netmask": "255.255.255.0",
									"vsan_vlan": 30,
									"vsan_topology": "DIFF_SUBNET",
									"vsan_init_gateway": "172.18.3.1",
									"vmotion_gateway": "172.18.43.1",
									"vmotion_netmask": "255.255.255.0",
									"vmotion_vlan": 40,
									"vmotion_topology": "DIFF_SUBNET",
									"vmotion_init_gateway": "172.18.4.1"
								},
								"vcenter": {
									"username": "administrator@vsphere.local",
									"password": "Testvxrail123!"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"examples": {
									"example": {
										"value": {
											"code": "10000002",
											"message": "Segment rack-temp-1 is successfully created."
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Layer3SegmentInputErrorResponse"
								},
								"example": {
									"message": [
										{
											"id": "segment_label",
											"errors": [
												"segment label occupied",
												"reserved segment label cannot be used",
												"there exists other segment without configured node"
											]
										},
										{
											"id": "<management/vsan/vmotion>_topology",
											"errors": [
												"topology not specified",
												"invalid topology format",
												"topology different from the current configuration and cannot be changed"
											]
										},
										{
											"id": "proxy_ip",
											"errors": [
												"invalid ip format",
												"proxy ip already used by configured host",
												"proxy ip already used in other segments",
												"proxy ip not accessible",
												"proxy service not enabled",
												"proxy service version incompatible",
												"missing proxy ip in DIFF_SUBNET topology"
											]
										},
										{
											"id": "<management/vsan/motion>_gateway",
											"errors": [
												"invalid ip format",
												"missing gateway while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "<management/vsan/motion>_netmask",
											"errors": [
												"invalid netmask format",
												"missing netmask while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "<management/vsan/motion>_vlan",
											"errors": [
												"invalid vlan format"
											]
										},
										{
											"id": "<vsan/motion>_init_gateway",
											"errors": [
												"invalid ip format",
												"missing initial gateway while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "general_error",
											"errors": [
												"Segment creation/update is not allowed for this type of cluster",
												"Segment is currently under expansion and update is not allowed in this status"
											]
										}
									]
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"50005": {
										"value": {
											"error_code": 50005,
											"message": "Failed to create portgroup for vsan traffic."
										}
									},
									"50006": {
										"value": {
											"error_code": 50006,
											"message": "Failed to configure vsan route on initial segment node."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v1_cluster_layer3_segment_post"
			}
		},
		"/v2/cluster/layer3/segment": {
			"post": {
				"tags": [
					"Network segment management"
				],
				"summary": "Create a new segment",
				"description": "Create a new segment.",
				"requestBody": {
					"description": "Information about the segment configuration, including the proxy, management vsan vmotion IP VLAN, and topology.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Layer3SegmentStartSpecV2"
							},
							"examples": {
								"IPV4Segment": {
									"value": {
										"version": "8.0.000",
										"segment": {
											"segment_label": "rack-temp-1",
											"proxy_ip": "192.168.10.251",
											"management_gateway": "192.168.10.1",
											"management_netmask": "255.255.255.0",
											"management_vlan": 20,
											"management_topology": "DIFF_SUBNET",
											"vsan_gateway": "172.18.33.1",
											"vsan_netmask": "255.255.255.0",
											"vsan_vlan": 30,
											"vsan_topology": "DIFF_SUBNET",
											"vsan_init_gateway": "172.18.3.1",
											"vmotion_gateway": "172.18.43.1",
											"vmotion_netmask": "255.255.255.0",
											"vmotion_vlan": 40,
											"vmotion_topology": "DIFF_SUBNET",
											"vmotion_init_gateway": "172.18.4.1"
										},
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "Testvxrail123!"
										}
									}
								},
								"IPV6Segment": {
									"value": {
										"version": "8.0.000",
										"segment": {
											"segment_label": "rack-temp-1",
											"proxy_ip": "2001:db8:1ab:19::101",
											"management_gateway_ipv6": "2001:db8:1ab:19::101",
											"management_prefix_length_ipv6": 64,
											"management_vlan": 20,
											"management_topology": "DIFF_SUBNET",
											"vsan_gateway_ipv6": "2001:db8:1ab:20::101",
											"vsan_prefix_legnth_ipv6": 64,
											"vsan_vlan": 30,
											"vsan_topology": "DIFF_SUBNET",
											"vsan_init_gateway_ipv6": "2001:db8:1ab:17::1",
											"vmotion_gateway": "2001:db8:1ab:21::101",
											"vmotion_prefix_length_ipv6": 64,
											"vmotion_vlan": 40,
											"vmotion_topology": "DIFF_SUBNET",
											"vmotion_init_gateway_ipv6": "2001:db8:1ab:18::1"
										},
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "Testvxrail123!"
										}
									}
								},
								"Example": {
									"value": {
										"version": "string",
										"segment": {
											"segment_info_version": "string",
											"segment_label": "string",
											"proxy_ip": "string",
											"management_gateway": "string",
											"management_netmask": "string",
											"management_gateway_ipv6": "string",
											"management_prefix_length_ipv6": 0,
											"management_vlan": 0,
											"vsan_gateway": "string",
											"vsan_gateway_ipv6": "string",
											"management_topology": "DIFF_SUBNET",
											"vsan_netmask": "string",
											"vsan_prefix_legnth_ipv6": 0,
											"vsan_vlan": 0,
											"vsan_init_gateway": "string",
											"vsan_init_gateway_ipv6": "string",
											"vsan_topology": "DIFF_SUBNET",
											"vmotion_gateway": "string",
											"vmotion_gateway_ipv6": "string",
											"vmotion_netmask": "string",
											"vmotion_prefix_length_ipv6": 0,
											"vmotion_vlan": 0,
											"vmotion_init_gateway": "string",
											"vmotion_init_gateway_ipv6": "string",
											"vmotion_topology": "DIFF_SUBNET"
										},
										"vcenter": {
											"username": "string",
											"password": "string"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"examples": {
									"example": {
										"value": {
											"code": "10000002",
											"message": "Segment rack-temp-1 is successfully created."
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Layer3SegmentInputErrorResponse"
								},
								"example": {
									"message": [
										{
											"id": "segment_label",
											"errors": [
												"segment label occupied",
												"reserved segment label cannot be used",
												"there exists other segment without configured node"
											]
										},
										{
											"id": "<management/vsan/vmotion>_topology",
											"errors": [
												"topology not specified",
												"invalid topology format",
												"topology different from the current configuration and cannot be changed"
											]
										},
										{
											"id": "proxy_ip",
											"errors": [
												"invalid ip format",
												"proxy ip already used by configured host",
												"proxy ip already used in other segments",
												"proxy ip not accessible",
												"proxy service not enabled",
												"proxy service version incompatible",
												"missing proxy ip in DIFF_SUBNET topology"
											]
										},
										{
											"id": "<management/vsan/motion>_gateway",
											"errors": [
												"invalid ip format",
												"missing gateway while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "<management/vsan/motion>_netmask",
											"errors": [
												"invalid netmask format",
												"missing netmask while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "<management/vsan/motion>_vlan",
											"errors": [
												"invalid vlan format"
											]
										},
										{
											"id": "<vsan/motion>_init_gateway",
											"errors": [
												"invalid ip format",
												"missing initial gateway while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "general_error",
											"errors": [
												"Segment creation/update is not allowed for this type of cluster",
												"Segment is currently under expansion and update is not allowed in this status"
											]
										}
									]
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"50005": {
										"value": {
											"error_code": 50005,
											"message": "Failed to create portgroup for vsan traffic."
										}
									},
									"50006": {
										"value": {
											"error_code": 50006,
											"message": "Failed to configure vsan route on initial segment node."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v2_cluster_layer3_segment_post"
			}
		},
		"/v1/cluster/layer3/segment/{segment-label}/health": {
			"parameters": [
				{
					"name": "segment-label",
					"description": "The label of the segment that you want to query.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "rack-temp-1"
					}
				}
			],
			"get": {
				"tags": [
					"Network segment management"
				],
				"summary": "Get the health status for a segment",
				"description": "Get the health status for a specific segment.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SegmentStatusInfo"
									}
								},
								"example": [
									{
										"type": "proxy",
										"status": "HEALTHY",
										"errors": []
									},
									{
										"type": "proxy",
										"status": "SKIP",
										"errors": []
									},
									{
										"type": "proxy",
										"status": "UNHEALTHY",
										"errors": [
											{
												"level": "ERROR",
												"field": "ip",
												"message": "proxy ip conflict with configured node"
											},
											{
												"level": "ERROR",
												"field": "ip",
												"message": "proxy ip unaccessible"
											},
											{
												"level": "WARNING",
												"field": "service",
												"message": "proxy service not enabled"
											},
											{
												"level": "ERROR",
												"field": "service",
												"message": "proxy service version incompatible"
											}
										]
									},
									{
										"type": "network",
										"status": "UNHEALTHY",
										"errors": [
											{
												"level": "ERROR",
												"field": "vsan",
												"message": "vds saved in database can not be found in vCenter"
											},
											{
												"level": "ERROR",
												"field": "vsan",
												"message": "vds saved in database mismatch with desired cluster"
											},
											{
												"level": "ERROR",
												"field": "management",
												"message": "portgroup saved in database can not be found in vCenter"
											},
											{
												"level": "ERROR",
												"field": "vsan",
												"message": "portgroup saved in database mismatch vds"
											},
											{
												"level": "ERROR",
												"field": "vmotion",
												"message": "portgroup vlan saved in database mismatch the value in vCenter"
											}
										]
									}
								]
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_cluster_layer3_segment_health_post"
			}
		},
		"/v1/cluster/layer3/segment/{segment-label}": {
			"parameters": [
				{
					"name": "segment-label",
					"description": "The label of the current segment to be acted upon.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "rack-temp-1"
					}
				}
			],
			"post": {
				"tags": [
					"Network segment management"
				],
				"summary": "Update the segment configuration for a segment",
				"description": "Update the segment configuration for a specific segment.",
				"requestBody": {
					"description": "Information about the segment configuration, including the proxy IP, gateway, netmask, VLAN, and topology.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Layer3SegmentStartSpec"
							},
							"example": {
								"segment": {
									"segment_label": "rack-temp-1",
									"proxy_ip": "192.168.10.251",
									"management_gateway": "192.168.10.1",
									"management_netmask": "255.255.255.0",
									"management_vlan": 20,
									"management_topology": "DIFF_SUBNET",
									"vsan_gateway": "172.18.33.1",
									"vsan_netmask": "255.255.255.0",
									"vsan_vlan": 30,
									"vsan_topology": "DIFF_SUBNET",
									"vsan_init_gateway": "172.18.3.1",
									"vmotion_gateway": "172.18.43.1",
									"vmotion_netmask": "255.255.255.0",
									"vmotion_vlan": 40,
									"vmotion_topology": "DIFF_SUBNET",
									"vmotion_init_gateway": "172.18.4.1"
								},
								"vcenter": {
									"username": "administrator@vsphere.local",
									"password": "Testvxrail123!"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"examples": {
									"example": {
										"value": {
											"code": "10000005",
											"message": "Segment rack-temp-1 is successfully updated."
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Layer3SegmentInputErrorResponse"
								},
								"example": {
									"message": [
										{
											"id": "segment_label",
											"errors": [
												"segment label not exist",
												"reserved segment label cannot be updated",
												"configured node exist in this segment label"
											]
										},
										{
											"id": "<management/vsan/vmotion>_topology",
											"errors": [
												"topology not specified",
												"invalid topology format",
												"topology different from the current configuration and cannot be changed"
											]
										},
										{
											"id": "proxy_ip",
											"errors": [
												"invalid ip format",
												"proxy ip already used by configured host",
												"proxy ip already used in other segments",
												"proxy ip not accessible",
												"proxy service not enabled",
												"proxy service version incompatible",
												"missing proxy ip in DIFF_SUBNET topology"
											]
										},
										{
											"id": "<management/vsan/motion>_gateway",
											"errors": [
												"invalid ip format",
												"missing gateway while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "<management/vsan/motion>_netmask",
											"errors": [
												"invalid netmask format",
												"missing netmask while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "<management/vsan/motion>_vlan",
											"errors": [
												"invalid vlan format"
											]
										},
										{
											"id": "<vsan/motion>_init_gateway",
											"errors": [
												"invalid ip format",
												"missing initial gateway while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "vc_username",
											"errors": [
												"invalid vcenter credential"
											]
										},
										{
											"id": "vc_password",
											"errors": [
												"invalid vcenter credential"
											]
										}
									]
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"50006": {
										"value": {
											"error_code": 50006,
											"message": "Failed to configure vsan route on initial segment node."
										}
									},
									"50007": {
										"value": {
											"error_code": 50007,
											"message": "Failed to update portgroup configuration for vsan traffic."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v1_cluster_layer3_segment_label_post"
			},
			"delete": {
				"tags": [
					"Network segment management"
				],
				"summary": "Delete a segment",
				"description": "Delete a segment.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"examples": {
									"example": {
										"value": {
											"code": "10000001",
											"message": "Segment rack-temp-1 is successfully deleted."
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/400-Nocontent"
								},
								"examples": {
									"10001001": {
										"value": {
											"error_code": 10001001,
											"message": "Cannot delete segment because segment label does not exist"
										}
									},
									"10001002": {
										"value": {
											"error_code": 10001002,
											"message": "Cannot delete segment because there exists configured nodes"
										}
									}
								}
							}
						}
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_cluster_layer3_segment_label_delete"
			},
			"get": {
				"tags": [
					"Network segment management"
				],
				"summary": "Get the segment configuration for a segment",
				"description": "Get the segment configuration for a specified segment.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Layer3SegmentSpec"
								},
								"example": {
									"segment_label": "rack-temp-1",
									"management_gateway": "192.168.10.1",
									"management_netmask": "255.255.255.0",
									"management_vlan": 20,
									"vsan_gateway": "172.18.33.1",
									"vsan_netmask": "255.255.255.0",
									"vsan_vlan\\\"": 30,
									"vmotion_gateway": "172.18.43.1",
									"vmotion_netmask": "255.255.255.0",
									"vmotion_vlan": 40,
									"proxy_ip": "192.168.10.251"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_cluster_layer3_segment_label_get"
			},
			"patch": {
				"tags": [
					"Network segment management"
				],
				"summary": "Change the segment label for the current segment",
				"description": "Change the segment label for the current segment.",
				"requestBody": {
					"description": "The new label that you want the segment to be changed to.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"segment_label": {
										"type": "string",
										"description": "The new segment label",
										"example": "rack-1"
									}
								}
							},
							"examples": {
								"Example": {
									"value": {
										"segment_label": "rack-1"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"examples": {
									"example": {
										"value": {
											"code": "10000003",
											"message": "The label of the rack is successfully changed from rack-temp-1 to rack-1."
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"items": {
										"$ref": "#/components/schemas/400-Nocontent"
									}
								},
								"examples": {
									"60006": {
										"value": {
											"error_code": 60006,
											"message": "The segment label to be updated does not exist."
										}
									},
									"60007": {
										"value": {
											"error_code": 60007,
											"message": "Cannot update reserved segment label."
										}
									},
									"60008": {
										"value": {
											"error_code": 60008,
											"message": "The segment label to be updated is reserved."
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_cluster_layer3_segment_label_patch"
			}
		},
		"/v2/cluster/layer3/segment/{segment-label}": {
			"parameters": [
				{
					"name": "segment-label",
					"description": "The label of the current segment.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "rack-temp-1"
					}
				}
			],
			"post": {
				"tags": [
					"Network segment management"
				],
				"summary": "Update the segment configuration for a segment",
				"description": "Update the segment configuration for a specific segment.",
				"requestBody": {
					"description": "Information about the segment configuration, including the proxy IP, gateway, netmask, VLAN, and topology.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Layer3SegmentStartSpecV2"
							},
							"examples": {
								"IPV4Example": {
									"value": {
										"version": "8.0.000",
										"segment": {
											"segment_label": "rack-temp-1",
											"proxy_ip": "192.168.10.251",
											"management_gateway": "192.168.10.1",
											"management_netmask": "255.255.255.0",
											"management_vlan": 20,
											"management_topology": "DIFF_SUBNET",
											"vsan_gateway": "172.18.33.1",
											"vsan_netmask": "255.255.255.0",
											"vsan_vlan": 30,
											"vsan_topology": "DIFF_SUBNET",
											"vsan_init_gateway": "172.18.3.1",
											"vmotion_gateway": "172.18.43.1",
											"vmotion_netmask": "255.255.255.0",
											"vmotion_vlan": 40,
											"vmotion_topology": "DIFF_SUBNET",
											"vmotion_init_gateway": "172.18.4.1"
										},
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "Testvxrail123!"
										}
									}
								},
								"IPV6Example": {
									"value": {
										"version": "8.0.000",
										"segment": {
											"segment_label": "rack-temp-1",
											"proxy_ip": "2001:db8:1ab:16::101",
											"management_gateway_ipv6": "2001:db8:1ab:16::1",
											"management_prefix_length_ipv6": 64,
											"management_vlan": 20,
											"management_topology": "DIFF_SUBNET",
											"vsan_gateway_ipv6": "2001:db8:1ab:17::1",
											"vsan_prefix_length_ipv6": 64,
											"vsan_vlan": 30,
											"vsan_topology": "DIFF_SUBNET",
											"vsan_init_gateway_ipv6": "2001:db8:1ab:19::1",
											"vmotion_gateway_ipv6": "2001:db8:1ab:20::1",
											"vmotion_prefix_length_ipv6": 64,
											"vmotion_vlan": 40,
											"vmotion_topology": "DIFF_SUBNET",
											"vmotion_init_gateway_ipv6": "2001:db8:1ab:20::1"
										},
										"vcenter": {
											"username": "administrator@vsphere.local",
											"password": "Testvxrail123!"
										}
									}
								},
								"Example": {
									"value": {
										"version": "string",
										"segment": {
											"segment_info_version": "string",
											"segment_label": "string",
											"proxy_ip": "string",
											"management_gateway": "string",
											"management_netmask": "string",
											"management_gateway_ipv6": "string",
											"management_prefix_length_ipv6": 0,
											"management_vlan": 0,
											"vsan_gateway": "string",
											"vsan_gateway_ipv6": "string",
											"management_topology": "DIFF_SUBNET",
											"vsan_netmask": "string",
											"vsan_prefix_legnth_ipv6": 0,
											"vsan_vlan": 0,
											"vsan_init_gateway": "string",
											"vsan_init_gateway_ipv6": "string",
											"vsan_topology": "DIFF_SUBNET",
											"vmotion_gateway": "string",
											"vmotion_gateway_ipv6": "string",
											"vmotion_netmask": "string",
											"vmotion_prefix_length_ipv6": 0,
											"vmotion_vlan": 0,
											"vmotion_init_gateway": "string",
											"vmotion_init_gateway_ipv6": "string",
											"vmotion_topology": "DIFF_SUBNET"
										},
										"vcenter": {
											"username": "string",
											"password": "string"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"examples": {
									"example": {
										"value": {
											"code": "10000005",
											"message": "Segment rack-temp-1 is successfully updated."
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Layer3SegmentInputErrorResponse"
								},
								"example": {
									"message": [
										{
											"id": "segment_label",
											"errors": [
												"segment label not exist",
												"reserved segment label cannot be updated",
												"configured node exist in this segment label"
											]
										},
										{
											"id": "<management/vsan/vmotion>_topology",
											"errors": [
												"topology not specified",
												"invalid topology format",
												"topology different from the current configuration and cannot be changed"
											]
										},
										{
											"id": "proxy_ip",
											"errors": [
												"invalid ip format",
												"proxy ip already used by configured host",
												"proxy ip already used in other segments",
												"proxy ip not accessible",
												"proxy service not enabled",
												"proxy service version incompatible",
												"missing proxy ip in DIFF_SUBNET topology"
											]
										},
										{
											"id": "<management/vsan/motion>_gateway",
											"errors": [
												"invalid ip format",
												"missing gateway while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "<management/vsan/motion>_netmask",
											"errors": [
												"invalid netmask format",
												"missing netmask while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "<management/vsan/motion>_vlan",
											"errors": [
												"invalid vlan format"
											]
										},
										{
											"id": "<vsan/motion>_init_gateway",
											"errors": [
												"invalid ip format",
												"missing initial gateway while topology is DIFF_SUBNET",
												"in the same subnet with initial segment while topology is DIFF_SUBNET"
											]
										},
										{
											"id": "vc_username",
											"errors": [
												"invalid vcenter credential"
											]
										},
										{
											"id": "vc_password",
											"errors": [
												"invalid vcenter credential"
											]
										}
									]
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"50006": {
										"value": {
											"error_code": 50006,
											"message": "Failed to configure vsan route on initial segment node."
										}
									},
									"50007": {
										"value": {
											"error_code": 50007,
											"message": "Failed to update portgroup configuration for vsan traffic."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v2_cluster_layer3_segment_label_post"
			},
			"delete": {
				"tags": [
					"Network segment management"
				],
				"summary": "Delete a segment",
				"description": "Delete a segment.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"examples": {
									"example": {
										"value": {
											"code": "10000001",
											"message": "Segment rack-temp-1 is successfully deleted."
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/400-Nocontent"
								},
								"examples": {
									"10001001": {
										"value": {
											"error_code": 10001001,
											"message": "Cannot delete segment because segment label does not exist"
										}
									},
									"10001002": {
										"value": {
											"error_code": 10001002,
											"message": "Cannot delete segment because there exists configured nodes"
										}
									}
								}
							}
						}
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_cluster_layer3_segment_label_delete"
			},
			"get": {
				"tags": [
					"Network segment management"
				],
				"summary": "Get the segment configuration for a segment",
				"description": "Get the segment configuration for a specified segment.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Layer3SegmentSpecV2"
								},
								"examples": {
									"ipv4sample": {
										"value": {
											"segment_info_version": "2.0",
											"segment_label": "rack-temp-1",
											"management_gateway": "192.168.10.1",
											"management_netmask": "255.255.255.0",
											"management_vlan": 20,
											"vsan_gateway": "172.18.33.1",
											"vsan_netmask": "255.255.255.0",
											"vsan_vlan": 30,
											"vmotion_gateway": "172.18.43.1",
											"vmotion_netmask": "255.255.255.0",
											"vmotion_vlan": 40,
											"proxy_ip": "192.168.10.251",
											"management_gateway_ipv6": "",
											"management_prefix_length_ipv6": null,
											"vsan_gateway_ipv6": "",
											"vsan_prefix_length_ipv6": null,
											"vmotion_gateway_ipv6": "",
											"vmotion_prefix_length_ipv6": null
										}
									},
									"ipv6sample": {
										"value": {
											"segment_info_version": "2.0",
											"segment_label": "rack-temp-1",
											"management_gateway_ipv6": "2001:db8:1ab:16::1",
											"management_prefix_length_ipv6": 64,
											"management_vlan": 20,
											"vsan_gateway_ipv6": "2001:db8:1ab:17::1",
											"vsan_prefix_length_ipv6": 64,
											"vsan_vlan": 30,
											"vmotion_gateway_ipv6": "2001:db8:1ab:18::1",
											"vmotion_prefix_length_ipv6": 64,
											"vmotion_vlan": 40,
											"proxy_ip": "2001:db8:1ab:16::101",
											"management_gateway": "",
											"management_netmask": "",
											"vsan_gateway": "",
											"vsan_netmask": "",
											"vmotion_gateway": "",
											"vmotion_netmask": ""
										}
									},
									"Example": {
										"value": {
											"segment_info_version": "string",
											"segment_label": "string",
											"proxy_ip": "string",
											"management_gateway": "string",
											"management_netmask": "string",
											"management_gateway_ipv6": "string",
											"management_prefix_length_ipv6": 0,
											"management_vlan": 0,
											"vsan_gateway": "string",
											"vsan_gateway_ipv6": "string",
											"management_topology": "DIFF_SUBNET",
											"vsan_netmask": "string",
											"vsan_prefix_legnth_ipv6": 0,
											"vsan_vlan": 0,
											"vsan_init_gateway": "string",
											"vsan_init_gateway_ipv6": "string",
											"vsan_topology": "DIFF_SUBNET",
											"vmotion_gateway": "string",
											"vmotion_gateway_ipv6": "string",
											"vmotion_netmask": "string",
											"vmotion_prefix_length_ipv6": 0,
											"vmotion_vlan": 0,
											"vmotion_init_gateway": "string",
											"vmotion_init_gateway_ipv6": "string",
											"vmotion_topology": "DIFF_SUBNET"
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_cluster_layer3_segment_label_get"
			},
			"patch": {
				"tags": [
					"Network segment management"
				],
				"summary": "Change the segment label for the current segment",
				"description": "Change the segment label for the current segment.",
				"requestBody": {
					"description": "The new label that you want the segment to be changed to.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"segment_label": {
										"type": "string",
										"description": "The new segment label",
										"example": "rack-1"
									}
								}
							},
							"examples": {
								"Example": {
									"value": {
										"segment_label": "rack-1"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"examples": {
									"example": {
										"value": {
											"code": "10000003",
											"message": "The label of the rack is successfully changed from rack-temp-1 to rack-1."
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"items": {
										"$ref": "#/components/schemas/400-Nocontent"
									}
								},
								"examples": {
									"60006": {
										"value": {
											"error_code": 60006,
											"message": "The segment label to be updated does not exist."
										}
									},
									"60007": {
										"value": {
											"error_code": 60007,
											"message": "Cannot update reserved segment label."
										}
									},
									"60008": {
										"value": {
											"error_code": 60008,
											"message": "The segment label to be updated is reserved."
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_cluster_layer3_segment_label_patch"
			}
		},
		"/v1/system/initialize/status": {
			"get": {
				"tags": [
					"VxRail installation"
				],
				"summary": "Get VxRail cluster configuration and deployment status",
				"description": "Retrieve VxRail cluster configuration and deployment status information.",
				"responses": {
					"200": {
						"description": "Successful operation. Returns the installation status result.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Day1RequestInfo"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "47a45dac-67b8-4932-8703-960c5df8e494",
											"state": "STARTED",
											"step": "VxM populate configuration data",
											"owner": "Day1BringUp",
											"progress": 0,
											"start_time": 1584679007,
											"end_time": 1584699007,
											"extension": {
												"guidelines": [
													{
														"message": "Please reference KB001 to address this problem",
														"kb": "kbid001"
													}
												],
												"validation": {
													"cursory": {
														"errors": {
															"fields": [
																{
																	"path": "vcenter.accounts.administrator.password",
																	"messages": [
																		"password too short"
																	]
																}
															],
															"generals": [
																{
																	"title": "General Error",
																	"messages": [
																		"unknown error"
																	]
																}
															]
														},
														"warnings": {
															"fields": [
																{
																	"path": "vcenter.accounts.administrator.password",
																	"messages": [
																		"password too short"
																	]
																}
															],
															"generals": [
																{
																	"title": "General Error",
																	"messages": [
																		"unknown error"
																	]
																}
															]
														}
													},
													"thorough": {
														"errors": {
															"fields": [
																{
																	"path": "vcenter.accounts.administrator.password",
																	"messages": [
																		"password too short"
																	]
																}
															],
															"generals": [
																{
																	"title": "General Error",
																	"messages": [
																		"unknown error"
																	]
																}
															]
														},
														"warnings": {
															"fields": [
																{
																	"path": "vcenter.accounts.administrator.password",
																	"messages": [
																		"password too short"
																	]
																}
															],
															"generals": [
																{
																	"title": "General Error",
																	"messages": [
																		"unknown error"
																	]
																}
															]
														}
													}
												},
												"steps": [
													{
														"id": "vxm_set_dns",
														"name": "VxM set DNS server",
														"path": "sub_workflow1.sub_workflow2.vxm_config_dns.external.vxm_set_dns",
														"state": "STARTED",
														"steps": [
															{}
														],
														"start_time": 0,
														"end_time": 0
													}
												]
											},
											"detail": "",
											"error": ""
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "No installation workflow instance found or upgraded from earlier version",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"example": "No instance found."
										},
										"error_code": {
											"type": "number",
											"example": 20103001
										},
										"message_code": {
											"type": "string",
											"description": "Reserved key. Returns an empty string always"
										}
									}
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_initialize_status_get"
			}
		},
		"/v1/system/initialize": {
			"post": {
				"tags": [
					"VxRail installation"
				],
				"summary": "Configure and deploy a new VxRail cluster",
				"description": "Configure and deploy a new VxRail cluster.",
				"parameters": [
					{
						"name": "dryrun",
						"in": "query",
						"description": "Performs a validation of the initial input configuration. Set true to cause a dry run and false to configure and deploy a new cluster. The default value is false.",
						"schema": {
							"type": "boolean",
							"example": true
						},
						"required": false
					}
				],
				"requestBody": {
					"description": "JSON configuration parameters to initialize the VxRail system",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SystemInitSpecV5"
							},
							"examples": {
								"SystemInitializationAutoDiscovery": {
									"$ref": "#/components/examples/SystemInitialization"
								},
								"SystemInitializationCustomerSuppliedHosts": {
									"$ref": "#/components/examples/SystemInitializationCustomerSuppliedHosts"
								},
								"SystemInitializationAutoDiscovery_IPv6": {
									"$ref": "#/components/examples/SystemInitializationV6"
								},
								"SystemInitializationCustomerSuppliedHosts_IPv6": {
									"$ref": "#/components/examples/SystemInitializationCustomerSuppliedHostsV6"
								},
								"SystemInitializationAutoDiscovery_DAULSTACK": {
									"$ref": "#/components/examples/SystemInitializationDualstack"
								},
								"SystemInitializationAutoDiscoveryWithSsoDomain_DUALSTACK": {
									"$ref": "#/components/examples/SystemInitializationWithSsoDomainDualstack"
								},
								"SystemInitializationCustomerSuppliedHosts_DUALSTACK": {
									"$ref": "#/components/examples/SystemInitializationCustomerSuppliedHostsDualstack"
								},
								"SystemInitializationVsan2NodeWithVxRailManagedWitness": {
									"$ref": "#/components/examples/SystemInitializationVsan2NodeWithVxRailManagedWitness"
								},
								"Example": {
									"value": {
										"version": "8.0.000",
										"global": {
											"ip_version": "IPV4",
											"ntp_servers": [
												"string"
											],
											"is_internal_dns": true,
											"dns_servers": [
												"string"
											],
											"syslog_servers": [
												"string"
											],
											"cluster_type": "STANDARD",
											"cluster_vsan_prefix_length_ipv6": 64,
											"cluster_vmotion_prefix_length_ipv6": 64,
											"cluster_management_prefix_length_ipv6": 64,
											"cluster_management_gateway_ipv6": "2001:db8:1ab:16::1",
											"cluster_systemvm_netmask": "255.255.0.0",
											"cluster_systemvm_gateway": "172.18.1.167",
											"cluster_systemvm_prefix_length_ipv6": 64,
											"cluster_systemvm_gateway_ipv6": "2001:db8:1ab:16::1",
											"cluster_management_netmask": "255.255.0.0",
											"cluster_management_gateway": "172.18.1.167",
											"cluster_vsan_netmask": "255.255.0.0",
											"cluster_vmotion_netmask": "255.255.0.0",
											"cluster_witness_netmask": "255.255.0.0",
											"cluster_witness_gateway": "255.255.0.0",
											"top_level_domain": "string",
											"ha_isolation_addresses": [
												"string"
											],
											"is_vlcm_cluster": false,
											"is_vlcm_force_remediate": false
										},
										"hosts": [
											{
												"host_psnt": "CX7VJ130000000",
												"hostname": "vcluster301-esx01",
												"customer_supplied": {
													"management_ip": "192.168.1.1"
												},
												"accounts": {
													"root": {
														"username": "string"
													},
													"management": {
														"username": "string"
													}
												},
												"network": [
													{
														"type": "MANAGEMENT",
														"ip": "172.18.10.101",
														"ipv6": "2001:db8:1ab:16::201"
													}
												],
												"storage": {
													"slot_claims": [
														{
															"usage": "non-vSAN",
															"values": [
																{
																	"slots": "3,6,7-8"
																}
															]
														}
													]
												},
												"geo_location": {
													"rack_name": "string",
													"position": 0
												}
											}
										],
										"vcenter": {
											"customer_supplied": true,
											"customer_supplied_vc_name": "string",
											"vxrail_supplied_vc_ip": "string",
											"vxrail_supplied_vc_ipv6": "string",
											"vxrail_supplied_vc_name": "string",
											"datacenter_name": "string",
											"cluster_name": "string",
											"auto_accept_vc_cert": true,
											"accounts": {
												"root": {
													"username": "string"
												},
												"administrator": {
													"username": "string"
												},
												"management": {
													"username": "string"
												}
											},
											"sso_domain": {
												"server": "string",
												"port": 0,
												"username": "string",
												"auto_accept_sso_vc_cert": true
											}
										},
										"witness_node": {
											"management_ip": "string",
											"witness_ip": "string",
											"gateway": "string",
											"netmask": "string",
											"username": "string"
										},
										"vxrail_manager": {
											"name": "string",
											"ip": "string",
											"ipv6": "string",
											"accounts": {
												"root": {
													"username": "string"
												},
												"service": {
													"username": "string"
												},
												"support": {
													"username": "string"
												}
											}
										},
										"network": {
											"sfs": {
												"sfs_disabled": true
											},
											"nic_profile": "FOUR_HIGH_SPEED",
											"systemvm_portgroup_binding_type": "STATIC_BINDING",
											"management_portgroup_binding_type": "STATIC_BINDING",
											"vds": [
												{
													"name": "VMware HCI Distributed Switch 1",
													"mtu": 1500,
													"nic_mappings": [
														{
															"uplinks": [
																{
																	"name": "string",
																	"physical_nic": "string"
																}
															],
															"lags": [
																{
																	"name": "string",
																	"physical_nics": [
																		"string"
																	]
																}
															]
														}
													],
													"portgroups": [
														{
															"name": "VSANPG",
															"type": "VSAN",
															"vlan_id": 0,
															"vmk_mtu": 1500,
															"uplinks": [
																"uplink1"
															],
															"lags": [
																"lag1"
															],
															"failover_order": {
																"active": [
																	"uplink1"
																],
																"standby": [
																	"uplink2"
																]
															},
															"load_balance_policy": "LOADBALANCE_SRCID"
														}
													]
												}
											]
										},
										"storage": {
											"disk_group_type": "2403",
											"primary_storage_type": "VMFS_ON_FC"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"$ref": "#/components/responses/202"
					},
					"400": {
						"description": "Invalid client call. Cannot call the API during installation or after installation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"examples": {
									"InstallingErrorExample": {
										"value": {
											"error_code": 20102001,
											"message": "Please wait for the previous instance to complete."
										}
									},
									"InstallCompletedErrorExample": {
										"$ref": "#/components/examples/Day1CompletedErrorExample"
									}
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_initialize_post"
			}
		},
		"/v1/system/initialize/disk-slot-mappings": {
			"get": {
				"tags": [
					"VxRail installation"
				],
				"summary": "Get disk slot mappings for hosts",
				"description": "Retrieve disk slots and usage mappings from the initial configuration for a set of hosts.",
				"requestBody": {
					"description": "Information needed to retrieve disk slot usage for a host",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"hosts": {
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/HostSlotMappingRequest"
										}
									}
								}
							},
							"examples": {
								"HostSlotMappingReqSamples": {
									"$ref": "#/components/examples/HostDiskSlotMappingReqSamples"
								},
								"HostSlotMappingReqSamplesV6": {
									"$ref": "#/components/examples/HostDiskSlotMappingReqSamplesV6"
								},
								"Example": {
									"value": {
										"hosts": [
											{
												"host_serial_number": "string",
												"diskgroup_type": "string",
												"customer_supplied": {
													"management_ip": "string",
													"current_root_password": "string",
													"diskgroup_type": "string"
												}
											}
										]
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully retrieved all slot mappings for the specified hosts.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/HostDiskSlotMappingsResponse"
									}
								},
								"examples": {
									"HostSlotMappings": {
										"$ref": "#/components/examples/HostDiskSlotMappings"
									},
									"Example": {
										"value": [
											{
												"host": "969WVL2 or 10.12.103.102 or 2001:db8:1ab:16::101",
												"all_slots": [
													{
														"bay_id": {
															"slots": [
																0
															]
														}
													}
												],
												"vsan_slots": {
													"capacity": [
														{
															"bay_id": {
																"slots": [
																	{
																		"slot": 0,
																		"diskgroup": 0
																	}
																]
															}
														}
													],
													"cache": [
														{
															"bay_id": {
																"slots": [
																	{
																		"slot": 0,
																		"diskgroup": 0
																	}
																]
															}
														}
													]
												},
												"non_vsan_slots": [
													{
														"bay_id": {
															"slots": [
																0
															]
														}
													}
												],
												"diskgroup_type": "string",
												"unmanaged_slots": [
													{
														"bay_id": {
															"slots": [
																0
															]
														}
													}
												]
											}
										]
									}
								}
							}
						}
					},
					"207": {
						"description": "Retrieved a partial list of slot mappings for the specified hosts.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/HostDiskSlotMappingsResponse"
									}
								},
								"examples": {
									"HostSlotMappings": {
										"$ref": "#/components/examples/HostDiskSlotMappingswitherror"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid client call. Cannot call the API after installation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"examples": {
									"InstallCompletedErrorExample": {
										"$ref": "#/components/examples/Day1CompletedErrorExample"
									}
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_initialize_disk-slot-mappings_get"
			}
		},
		"/v1/system/initialize/nodes": {
			"get": {
				"tags": [
					"VxRail installation"
				],
				"summary": "Return nodes by auto discovery",
				"description": "Return nodes discovered by auto discovery.",
				"responses": {
					"200": {
						"description": "Array of the discovered nodes.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/DiscoveredNodeInfoV2"
									}
								},
								"examples": {
									"NodesInfo": {
										"$ref": "#/components/examples/NodesInfo"
									},
									"Example": {
										"value": [
											{
												"id": {
													"appliance_id": "string",
													"position": 0,
													"total_supported_nodes": 0
												},
												"esxi_version": "string",
												"vxm_system_version": "7.0.200-26924297",
												"evo_uuid": "564d04e4-bd1f-6d09-d30b-d202ec8f5446",
												"primary_ip": "string",
												"fallback_ip": "string",
												"idrac_ip": "string",
												"prerecoded_ip": "string",
												"ip": "string",
												"asset_tag": "string",
												"serial_number": "string",
												"primary": true,
												"cluster_affinity": "NONE",
												"ssl_thumbprint": "string",
												"ssh_thumbprint": "string",
												"uuid": {
													"host": "a3890c73-c1b7-488f-b530-c94131ae202d"
												},
												"hardware_profile": {
													"cpu": {
														"cores": 0,
														"speed": 0
													},
													"memory": {
														"size": 0
													},
													"nics": [
														{
															"name": "string",
															"speed": 0,
															"port_info": "string",
															"product_name": "string"
														}
													],
													"disks": [
														{
															"ssd": true,
															"blocks": 0,
															"block_size": 0
														}
													]
												},
												"discovered_date": 0,
												"configuration_state": "UNCONFIGURED",
												"model": "string",
												"ip_set": {},
												"node_version_info": {
													"version": "string",
													"build": 0
												},
												"violations": [
													"string"
												]
											}
										]
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid client call. Cannot call the API during installation or after installation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"examples": {
									"InstallCompletedErrorExample": {
										"$ref": "#/components/examples/Day1CompletedErrorExample"
									}
								}
							}
						}
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_initialize_nodes_get"
			}
		},
		"/v1/system/initialize/customer-supplied-hosts": {
			"post": {
				"tags": [
					"VxRail installation"
				],
				"summary": "Return nodes by customer supplied management IP",
				"description": "Return nodes by the customer supplied node management IP address and ESXi root password.",
				"requestBody": {
					"description": "Management IP and password for all customer supplied hosts",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/CustomerSuppliedHostInfo"
								}
							},
							"examples": {
								"Example": {
									"value": [
										{
											"management_ip": "192.168.1.1"
										}
									]
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Array of host information for supplied hosts",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/DiscoveredNodeInfoV2"
									}
								},
								"examples": {
									"NodesInfo": {
										"$ref": "#/components/examples/NodesInfo"
									},
									"Example": {
										"value": [
											{
												"id": {
													"appliance_id": "string",
													"position": 0,
													"total_supported_nodes": 0
												},
												"esxi_version": "string",
												"vxm_system_version": "7.0.200-26924297",
												"evo_uuid": "564d04e4-bd1f-6d09-d30b-d202ec8f5446",
												"primary_ip": "string",
												"fallback_ip": "string",
												"idrac_ip": "string",
												"prerecoded_ip": "string",
												"ip": "string",
												"asset_tag": "string",
												"serial_number": "string",
												"primary": true,
												"cluster_affinity": "NONE",
												"ssl_thumbprint": "string",
												"ssh_thumbprint": "string",
												"uuid": {
													"host": "a3890c73-c1b7-488f-b530-c94131ae202d"
												},
												"hardware_profile": {
													"cpu": {
														"cores": 0,
														"speed": 0
													},
													"memory": {
														"size": 0
													},
													"nics": [
														{
															"name": "string",
															"speed": 0,
															"port_info": "string",
															"product_name": "string"
														}
													],
													"disks": [
														{
															"ssd": true,
															"blocks": 0,
															"block_size": 0
														}
													]
												},
												"discovered_date": 0,
												"configuration_state": "UNCONFIGURED",
												"model": "string",
												"ip_set": {},
												"node_version_info": {
													"version": "string",
													"build": 0
												},
												"violations": [
													"string"
												]
											}
										]
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid client call. Cannot call the API during installation or after installation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"examples": {
									"InstallCompletedErrorExample": {
										"$ref": "#/components/examples/Day1CompletedErrorExample"
									}
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_initialize_customer-supplied-hosts_post"
			}
		},
		"/v2/system/initialize/nodes": {
			"get": {
				"tags": [
					"VxRail installation"
				],
				"summary": "Return nodes by auto discovery",
				"description": "Return nodes discovered by auto discovery.",
				"responses": {
					"200": {
						"description": "Successful operation. Returns a list of the discovered nodes.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DiscoveredNodesInfoV4"
								},
								"examples": {
									"NodesInfo": {
										"$ref": "#/components/examples/DiscoveredNodesInfoExample2"
									},
									"NodesInfoV6": {
										"$ref": "#/components/examples/DiscoveredNodesInfoExample3"
									},
									"Example": {
										"value": {
											"version": "3.0",
											"nodes": [
												{
													"id": {
														"appliance_id": "string",
														"position": 0,
														"total_supported_nodes": 0
													},
													"esxi_version": "string",
													"vxm_system_version": "7.0.200-26924297",
													"evo_uuid": "564d04e4-bd1f-6d09-d30b-d202ec8f5446",
													"primary_ip": "string",
													"idrac_ip": "string",
													"idrac_ipv6": "string",
													"ip": "string",
													"ipv6": "string",
													"asset_tag": "string",
													"serial_number": "string",
													"primary": true,
													"ssl_thumbprint": "string",
													"ssh_thumbprint": "string",
													"uuid": {
														"host": "a3890c73-c1b7-488f-b530-c94131ae202d"
													},
													"hardware_profile": {
														"cpu": {
															"cores": 0,
															"speed": 0
														},
														"memory": {
															"size": 0
														},
														"nics": [
															{
																"name": "string",
																"speed": 0,
																"port_info": "string",
																"product_name": "string"
															}
														],
														"disks": [
															{
																"ssd": true,
																"blocks": 0,
																"block_size": 0
															}
														]
													},
													"disk_group_config": {
														"recommendation": {
															"type": "2403",
															"description": "string"
														},
														"options": [
															{
																"type": "2403",
																"description": "string"
															}
														]
													},
													"storage_types": [
														"LOCAL"
													],
													"configuration_state": "UNCONFIGURED",
													"model": "string",
													"violations": [
														"string"
													],
													"vlcm_software_spec": {
														"base_image": {
															"version": "7.0.3-0.50.19580434"
														},
														"components": {
															"Intel-i40en": "2.1.5.0-1OEM.700.1.0.15843807",
															"Intel-icen": "1.6.2.0-1OEM.700.1.0.15843807"
														},
														"hardware_support": {
															"packages": {
																"com.vxrail.hsm": {
																	"version": "8.0.000-27506022",
																	"pkg": "vxrail-hsp"
																}
															}
														}
													}
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid client call. Cannot call the API during installation or after installation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"examples": {
									"InstallCompletedErrorExample": {
										"$ref": "#/components/examples/Day1CompletedErrorExample"
									}
								}
							}
						}
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_system_initialize_nodes_get"
			}
		},
		"/v2/system/initialize/customer-supplied-hosts": {
			"post": {
				"tags": [
					"VxRail installation"
				],
				"summary": "Return nodes by customer supplied management IP",
				"description": "Return nodes by the customer supplied node management IP address and ESXi root password.",
				"requestBody": {
					"description": "Management IP and password for all customer supplied hosts",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/CustomerSuppliedHostInfo"
								}
							},
							"examples": {
								"Example": {
									"value": [
										{
											"management_ip": "192.168.1.1"
										}
									]
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Array of host information for supplied hosts",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DiscoveredNodesInfoV4"
								},
								"examples": {
									"NodesInfo": {
										"$ref": "#/components/examples/DiscoveredNodesInfoExample2"
									},
									"NodesInfoV6": {
										"$ref": "#/components/examples/DiscoveredNodesInfoExample3"
									},
									"Example": {
										"value": {
											"version": "3.0",
											"nodes": [
												{
													"id": {
														"appliance_id": "string",
														"position": 0,
														"total_supported_nodes": 0
													},
													"esxi_version": "string",
													"vxm_system_version": "7.0.200-26924297",
													"evo_uuid": "564d04e4-bd1f-6d09-d30b-d202ec8f5446",
													"primary_ip": "string",
													"idrac_ip": "string",
													"idrac_ipv6": "string",
													"ip": "string",
													"ipv6": "string",
													"asset_tag": "string",
													"serial_number": "string",
													"primary": true,
													"ssl_thumbprint": "string",
													"ssh_thumbprint": "string",
													"uuid": {
														"host": "a3890c73-c1b7-488f-b530-c94131ae202d"
													},
													"hardware_profile": {
														"cpu": {
															"cores": 0,
															"speed": 0
														},
														"memory": {
															"size": 0
														},
														"nics": [
															{
																"name": "string",
																"speed": 0,
																"port_info": "string",
																"product_name": "string"
															}
														],
														"disks": [
															{
																"ssd": true,
																"blocks": 0,
																"block_size": 0
															}
														]
													},
													"disk_group_config": {
														"recommendation": {
															"type": "2403",
															"description": "string"
														},
														"options": [
															{
																"type": "2403",
																"description": "string"
															}
														]
													},
													"storage_types": [
														"LOCAL"
													],
													"configuration_state": "UNCONFIGURED",
													"model": "string",
													"violations": [
														"string"
													]
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid client call. Cannot call the API during installation or after installation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"examples": {
									"InstallCompletedErrorExample": {
										"$ref": "#/components/examples/Day1CompletedErrorExample"
									}
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_system_initialize_customer-supplied-hosts_post"
			}
		},
		"/v1/disks": {
			"get": {
				"tags": [
					"Disk information"
				],
				"summary": "Get a list of disks",
				"deprecated": true,
				"description": "Retrieve a list of disk drives and their associated information.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/DiskInfo"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "string",
												"guid": "string",
												"disk_type": "string",
												"protocol": "string",
												"enclosure": 0,
												"bay": 0,
												"slot": 0,
												"missing": true,
												"capacity": "string"
											}
										]
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_disks_get"
			}
		},
		"/v1/disks/{disk_sn}": {
			"get": {
				"tags": [
					"Disk information"
				],
				"summary": "Get information about a disk",
				"deprecated": true,
				"description": "Retrieve information about a specific disk drive.",
				"parameters": [
					{
						"name": "disk_sn",
						"description": "The serial number of disk that you want to query.",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DiskInfo"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "string",
											"guid": "string",
											"disk_type": "string",
											"protocol": "string",
											"enclosure": 0,
											"bay": 0,
											"slot": 0,
											"missing": true,
											"capacity": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_disks_sn_get"
			}
		},
		"/v1/hosts": {
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get a list of VxRail hosts (v1)",
				"description": "Get a list of VxRail hosts and their associated subcomponent information.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Host"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "969WVL2",
												"slot": 0,
												"hostname": "string",
												"name": "string",
												"manufacturer": "string",
												"psnt": "string",
												"led_status": "string",
												"health": "string",
												"missing": true,
												"tpm_present": true,
												"operational_status": "string",
												"power_status": "string",
												"boot_devices": [
													{
														"id": "string",
														"sn": "string",
														"device_model": "string",
														"sata_type": "string",
														"power_on_hours": 0,
														"power_cycle_count": 0,
														"max_erase_count": 0,
														"avr_erase_count": 0,
														"capacity": "string",
														"health": "string",
														"firmware_version": "string",
														"bootdevice_type": "string",
														"block_size": "string",
														"slot": 1
													}
												],
												"nics": [
													{
														"id": "string",
														"mac": "string",
														"link_status": "string",
														"link_speed": "string",
														"slot": 0,
														"firmware_family_version": "string"
													}
												],
												"disks": [
													{
														"id": "string",
														"sn": "string",
														"guid": "string",
														"disk_type": "string",
														"protocol": "string",
														"enclosure": 0,
														"bay": 0,
														"slot": 0,
														"missing": true,
														"capacity": "string"
													}
												],
												"firmwareInfo": {
													"bios_revision": "string",
													"bmc_revision": "string",
													"hba_version": "string",
													"expander_bpf_version": "string",
													"nonexpander_bpf_version": "string",
													"boss_version": "string",
													"cpld_version": "string"
												}
											}
										]
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_hosts_get"
			}
		},
		"/v2/hosts": {
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get a list of VxRail hosts (v2)",
				"description": "Get a list of VxRail hosts and their subcomponent information. Version v2 contains the same attributes as the v1 version with the addition of a geo-location attribute in the HostV2 schema.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/HostV2"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "969WVL2",
												"slot": 0,
												"hostname": "string",
												"name": "string",
												"manufacturer": "string",
												"psnt": "string",
												"led_status": "string",
												"health": "string",
												"missing": true,
												"tpm_present": true,
												"operational_status": "string",
												"power_status": "string",
												"boot_devices": [
													{
														"id": "string",
														"sn": "string",
														"device_model": "string",
														"sata_type": "string",
														"power_on_hours": 0,
														"power_cycle_count": 0,
														"max_erase_count": 0,
														"avr_erase_count": 0,
														"capacity": "string",
														"health": "string",
														"firmware_version": "string",
														"bootdevice_type": "string",
														"block_size": "string",
														"slot": 1
													}
												],
												"nics": [
													{
														"id": "string",
														"mac": "string",
														"link_status": "string",
														"link_speed": "string",
														"slot": 0,
														"firmware_family_version": "string"
													}
												],
												"disks": [
													{
														"id": "string",
														"sn": "string",
														"guid": "string",
														"disk_type": "string",
														"protocol": "string",
														"enclosure": 0,
														"bay": 0,
														"slot": 0,
														"missing": true,
														"capacity": "string"
													}
												],
												"firmwareInfo": {
													"bios_revision": "string",
													"bmc_revision": "string",
													"hba_version": "string",
													"expander_bpf_version": "string",
													"nonexpander_bpf_version": "string",
													"boss_version": "string",
													"cpld_version": "string"
												},
												"geo_location": {
													"rack_name": "rack1",
													"order_number": 1
												}
											}
										]
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_hosts_get"
			}
		},
		"/v3/hosts": {
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get a list of VxRail hosts (v3)",
				"description": "Get a list of VxRail hosts and their associated subcomponent information. Version v3 contains the same attributes as the v2 version with the addition of a dcpm_version attribute in FirmwareInfoV2 and a disk_claim_type attribute in DiskInfoV2.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/HostV3"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "969WVL2",
												"slot": 0,
												"hostname": "string",
												"name": "string",
												"manufacturer": "string",
												"psnt": "string",
												"led_status": "string",
												"health": "string",
												"missing": true,
												"tpm_present": true,
												"operational_status": "string",
												"power_status": "string",
												"boot_devices": [
													{
														"id": "string",
														"sn": "string",
														"device_model": "string",
														"sata_type": "string",
														"power_on_hours": 0,
														"power_cycle_count": 0,
														"max_erase_count": 0,
														"avr_erase_count": 0,
														"capacity": "string",
														"health": "string",
														"firmware_version": "string",
														"bootdevice_type": "string",
														"block_size": "string",
														"slot": 1
													}
												],
												"nics": [
													{
														"id": "string",
														"mac": "string",
														"link_status": "string",
														"link_speed": "string",
														"slot": 0,
														"firmware_family_version": "string"
													}
												],
												"disks": [
													{
														"id": "string",
														"sn": "string",
														"guid": "string",
														"manufacturer": "string",
														"model": "string",
														"disk_type": "string",
														"protocol": "string",
														"max_capable_speed": "string",
														"enclosure": 0,
														"bay": 0,
														"slot": 0,
														"disk_state": "string",
														"led_status": "string",
														"missing": true,
														"capacity": "string",
														"write_endurance": "string",
														"write_endurance_status": "string",
														"remaining_write_endurance_rate": "string",
														"firmware_revision": "string",
														"disk_claim_type": "non-vSAN"
													}
												],
												"firmwareInfo": {
													"bios_revision": "string",
													"bmc_revision": "string",
													"hba_version": "string",
													"expander_bpf_version": "string",
													"nonexpander_bpf_version": "string",
													"boss_version": "string",
													"cpld_version": "string",
													"idsdm_version": "string",
													"dcpm_version": "string"
												},
												"geo_location": {
													"rack_name": "rack1",
													"order_number": 1
												}
											}
										]
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v3_hosts_get"
			}
		},
		"/v4/hosts": {
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get a list of VxRail hosts (v4)",
				"description": "Get a list of VxRail hosts and their associated subcomponent information. Version v4 contains drive configuration and BOSS card information.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/HostV4"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "969WVL2",
												"slot": 0,
												"hostname": "string",
												"name": "string",
												"manufacturer": "string",
												"psnt": "string",
												"led_status": "string",
												"health": "string",
												"missing": true,
												"tpm_present": true,
												"operational_status": "string",
												"power_status": "string",
												"boot_devices": [
													{
														"id": "string",
														"sn": "PHYH013201XX480K",
														"device_model": "SSDSCJJB480G8R",
														"sata_type": "string",
														"power_on_hours": 1,
														"power_cycle_count": 1,
														"max_erase_count": 1,
														"avr_erase_count": 1,
														"capacity": "480103981056",
														"health": "string",
														"firmware_version": "2.5.13.4008",
														"bootdevice_type": "string",
														"block_size": "512",
														"slot": 1,
														"status": "NORMAL",
														"part_number": "TW07FXC3PIHiT0440",
														"manufacturer": "INTEL",
														"controller_firmware": "2.5.13.4008",
														"controller_model": "BOSS-S2",
														"controller_status": "NORMAL"
													}
												],
												"nics": [
													{
														"id": "string",
														"mac": "string",
														"link_status": "string",
														"link_speed": "string",
														"slot": 0,
														"firmware_family_version": "string"
													}
												],
												"disks": [
													{
														"id": "string",
														"sn": "string",
														"guid": "string",
														"manufacturer": "string",
														"model": "string",
														"disk_type": "string",
														"protocol": "string",
														"max_capable_speed": "string",
														"enclosure": 0,
														"bay": 0,
														"slot": 0,
														"disk_state": "string",
														"led_status": "string",
														"missing": true,
														"capacity": "string",
														"write_endurance": "string",
														"write_endurance_status": "string",
														"remaining_write_endurance_rate": "string",
														"firmware_revision": "string",
														"disk_claim_type": "non-vSAN"
													}
												],
												"firmwareInfo": {
													"bios_revision": "string",
													"bmc_revision": "string",
													"hba_version": "string",
													"expander_bpf_version": "string",
													"nonexpander_bpf_version": "string",
													"boss_version": "string",
													"cpld_version": "string",
													"idsdm_version": "string",
													"dcpm_version": "string"
												},
												"geo_location": {
													"rack_name": "rack1",
													"order_number": 1
												},
												"drive_configuration": {
													"type": "2401"
												}
											}
										]
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v4_hosts_get"
			}
		},
		"/v5/hosts": {
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get a list of VxRail hosts (v5)",
				"description": "Get a list of VxRail hosts and their associated subcomponent information. Version v5 provides support for satellite nodes, adding a new field 'type'.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/HostV5"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "969WVL2",
												"type": "CLUSTER",
												"slot": 0,
												"hostname": "string",
												"name": "string",
												"manufacturer": "string",
												"psnt": "string",
												"led_status": "string",
												"health": "string",
												"missing": true,
												"tpm_present": true,
												"operational_status": "string",
												"power_status": "string",
												"boot_devices": [
													{
														"id": "string",
														"sn": "PHYH013201XX480K",
														"device_model": "SSDSCJJB480G8R",
														"sata_type": "string",
														"power_on_hours": 1,
														"power_cycle_count": 1,
														"max_erase_count": 1,
														"avr_erase_count": 1,
														"capacity": "480103981056",
														"health": "string",
														"firmware_version": "2.5.13.4008",
														"bootdevice_type": "string",
														"block_size": "512",
														"slot": 1,
														"status": "NORMAL",
														"part_number": "TW07FXC3PIHiT0440",
														"manufacturer": "INTEL",
														"controller_firmware": "2.5.13.4008",
														"controller_model": "BOSS-S2",
														"controller_status": "NORMAL"
													}
												],
												"nics": [
													{
														"id": "string",
														"mac": "string",
														"link_status": "string",
														"link_speed": "string",
														"slot": 0,
														"firmware_family_version": "string"
													}
												],
												"disks": [
													{
														"id": "string",
														"sn": "string",
														"guid": "string",
														"manufacturer": "string",
														"model": "string",
														"disk_type": "string",
														"protocol": "string",
														"max_capable_speed": "string",
														"enclosure": 0,
														"bay": 0,
														"slot": 0,
														"disk_state": "string",
														"led_status": "string",
														"missing": true,
														"capacity": "string",
														"write_endurance": "string",
														"write_endurance_status": "string",
														"remaining_write_endurance_rate": "string",
														"firmware_revision": "string",
														"disk_claim_type": "non-vSAN"
													}
												],
												"firmwareInfo": {
													"bios_revision": "string",
													"bmc_revision": "string",
													"hba_version": "string",
													"expander_bpf_version": "string",
													"nonexpander_bpf_version": "string",
													"boss_version": "string",
													"cpld_version": "string",
													"idsdm_version": "string",
													"dcpm_version": "string",
													"perc_version": "string"
												},
												"geo_location": {
													"rack_name": "rack1",
													"order_number": 1
												},
												"drive_configuration": {
													"type": "2401"
												}
											}
										]
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v5_hosts_get"
			}
		},
		"/v6/hosts": {
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get a list of VxRail hosts (v6)",
				"description": "Version v6 contains new nic version, which contains type, port and drivers field.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/HostV6"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"sn": "969WVL2",
												"type": "CLUSTER",
												"slot": 0,
												"hostname": "string",
												"name": "string",
												"manufacturer": "string",
												"psnt": "string",
												"led_status": "string",
												"health": "string",
												"missing": true,
												"tpm_present": true,
												"operational_status": "string",
												"power_status": "string",
												"boot_devices": [
													{
														"id": "string",
														"sn": "PHYH013201XX480K",
														"device_model": "SSDSCJJB480G8R",
														"sata_type": "string",
														"power_on_hours": 1,
														"power_cycle_count": 1,
														"max_erase_count": 1,
														"avr_erase_count": 1,
														"capacity": "480103981056",
														"health": "string",
														"firmware_version": "2.5.13.4008",
														"bootdevice_type": "string",
														"block_size": "512",
														"slot": 1,
														"status": "NORMAL",
														"part_number": "TW07FXC3PIHiT0440",
														"manufacturer": "INTEL",
														"controller_firmware": "2.5.13.4008",
														"controller_model": "BOSS-S2",
														"controller_status": "NORMAL"
													}
												],
												"nics": [
													{
														"id": "string",
														"type": "string",
														"mac": "string",
														"link_status": "string",
														"link_speed": "string",
														"slot": 0,
														"port": 0,
														"firmware_family_version": "string",
														"drivers": [
															{
																"driver_name": "string",
																"driver_version": "string"
															}
														]
													}
												],
												"disks": [
													{
														"id": "string",
														"sn": "string",
														"guid": "string",
														"manufacturer": "string",
														"model": "string",
														"disk_type": "string",
														"protocol": "string",
														"max_capable_speed": "string",
														"enclosure": 0,
														"bay": 0,
														"slot": 0,
														"disk_state": "string",
														"led_status": "string",
														"missing": true,
														"capacity": "string",
														"write_endurance": "string",
														"write_endurance_status": "string",
														"remaining_write_endurance_rate": "string",
														"firmware_revision": "string",
														"disk_claim_type": "non-vSAN"
													}
												],
												"firmwareInfo": {
													"bios_revision": "string",
													"bmc_revision": "string",
													"hba_version": "string",
													"expander_bpf_version": "string",
													"nonexpander_bpf_version": "string",
													"boss_version": "string",
													"cpld_version": "string",
													"idsdm_version": "string",
													"dcpm_version": "string",
													"perc_version": "string"
												},
												"geo_location": {
													"rack_name": "rack1",
													"order_number": 1
												},
												"drive_configuration": {
													"type": "2401"
												}
											}
										]
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v6_hosts_get"
			}
		},
		"/v7/hosts": {
			"get": {
				"tags": [
					"Host information"
				],
				"summary": "Get a list of VxRail hosts (v7)",
				"description": "Version v7 adds the new fields to support encryption.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/HostV7"
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v7_hosts_get"
			}
		},
		"/v8/hosts": {
			"get": {
				"tags": [
					"Host information"
				],
				"summary": "Get a list of VxRail hosts (v8).",
				"description": "Version v8 adds the new fields to get WWNN/WWPN of Fibre Channel cards.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/HostV8"
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v8_hosts_get"
			}
		},
		"/v10/hosts": {
			"get": {
				"tags": [
					"Host information"
				],
				"summary": "Retrieves a list of VxRail hosts (v10).",
				"description": "New fields are added to v10 to distinguish between base storage and optional storage (vSphere 7.x only).",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/HostV10"
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v10_hosts_get"
			}
		},
		"/v1/hosts/{sn}": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the node that you want to access.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get information about a host (v1)",
				"description": "Get information about a specific host and its associated subcomponents.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Host"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "969WVL2",
											"slot": 0,
											"hostname": "string",
											"name": "string",
											"manufacturer": "string",
											"psnt": "string",
											"led_status": "string",
											"health": "string",
											"missing": true,
											"tpm_present": true,
											"operational_status": "string",
											"power_status": "string",
											"boot_devices": [
												{
													"id": "string",
													"sn": "string",
													"device_model": "string",
													"sata_type": "string",
													"power_on_hours": 0,
													"power_cycle_count": 0,
													"max_erase_count": 0,
													"avr_erase_count": 0,
													"capacity": "string",
													"health": "string",
													"firmware_version": "string",
													"bootdevice_type": "string",
													"block_size": "string",
													"slot": 1
												}
											],
											"nics": [
												{
													"id": "string",
													"mac": "string",
													"link_status": "string",
													"link_speed": "string",
													"slot": 0,
													"firmware_family_version": "string"
												}
											],
											"disks": [
												{
													"id": "string",
													"sn": "string",
													"guid": "string",
													"disk_type": "string",
													"protocol": "string",
													"enclosure": 0,
													"bay": 0,
													"slot": 0,
													"missing": true,
													"capacity": "string"
												}
											],
											"firmwareInfo": {
												"bios_revision": "string",
												"bmc_revision": "string",
												"hba_version": "string",
												"expander_bpf_version": "string",
												"nonexpander_bpf_version": "string",
												"boss_version": "string",
												"cpld_version": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_hosts_sn_get"
			},
			"patch": {
				"tags": [
					"Host information"
				],
				"summary": "Update the geographical information about a host",
				"description": "Update the geographical information about a specific host.",
				"requestBody": {
					"description": "Geographical information about the host that you want to update.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/HostUpdateSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"geo_location": {
											"rack_name": "rack1",
											"order_number": 1
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"$ref": "#/components/responses/202"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_hosts_sn_patch"
			}
		},
		"/v2/hosts/{sn}": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the node that you want to update.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get information about a host (v2)",
				"description": "Get information about a specific host and its associated subcomponents. Version v2 contains the same attributes as the v1 version with the addition of a geo-location attribute in the HostV2 schema.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HostV2"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "969WVL2",
											"slot": 0,
											"hostname": "string",
											"name": "string",
											"manufacturer": "string",
											"psnt": "string",
											"led_status": "string",
											"health": "string",
											"missing": true,
											"tpm_present": true,
											"operational_status": "string",
											"power_status": "string",
											"boot_devices": [
												{
													"id": "string",
													"sn": "string",
													"device_model": "string",
													"sata_type": "string",
													"power_on_hours": 0,
													"power_cycle_count": 0,
													"max_erase_count": 0,
													"avr_erase_count": 0,
													"capacity": "string",
													"health": "string",
													"firmware_version": "string",
													"bootdevice_type": "string",
													"block_size": "string",
													"slot": 1
												}
											],
											"nics": [
												{
													"id": "string",
													"mac": "string",
													"link_status": "string",
													"link_speed": "string",
													"slot": 0,
													"firmware_family_version": "string"
												}
											],
											"disks": [
												{
													"id": "string",
													"sn": "string",
													"guid": "string",
													"disk_type": "string",
													"protocol": "string",
													"enclosure": 0,
													"bay": 0,
													"slot": 0,
													"missing": true,
													"capacity": "string"
												}
											],
											"firmwareInfo": {
												"bios_revision": "string",
												"bmc_revision": "string",
												"hba_version": "string",
												"expander_bpf_version": "string",
												"nonexpander_bpf_version": "string",
												"boss_version": "string",
												"cpld_version": "string"
											},
											"geo_location": {
												"rack_name": "rack1",
												"order_number": 1
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_hosts_sn_get"
			}
		},
		"/v3/hosts/{sn}": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the node that you want to update.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get information about a host (v3)",
				"description": "Get information about a specific host and its associated subcomponents. Version v3 contains the same attributes as the v2 version with the addition of a dcpm_version attribute in FirmwareInfoV2 and a disk_claim_type attribute in DiskInfoV2.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HostV3"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "969WVL2",
											"slot": 0,
											"hostname": "string",
											"name": "string",
											"manufacturer": "string",
											"psnt": "string",
											"led_status": "string",
											"health": "string",
											"missing": true,
											"tpm_present": true,
											"operational_status": "string",
											"power_status": "string",
											"boot_devices": [
												{
													"id": "string",
													"sn": "string",
													"device_model": "string",
													"sata_type": "string",
													"power_on_hours": 0,
													"power_cycle_count": 0,
													"max_erase_count": 0,
													"avr_erase_count": 0,
													"capacity": "string",
													"health": "string",
													"firmware_version": "string",
													"bootdevice_type": "string",
													"block_size": "string",
													"slot": 1
												}
											],
											"nics": [
												{
													"id": "string",
													"mac": "string",
													"link_status": "string",
													"link_speed": "string",
													"slot": 0,
													"firmware_family_version": "string"
												}
											],
											"disks": [
												{
													"id": "string",
													"sn": "string",
													"guid": "string",
													"manufacturer": "string",
													"model": "string",
													"disk_type": "string",
													"protocol": "string",
													"max_capable_speed": "string",
													"enclosure": 0,
													"bay": 0,
													"slot": 0,
													"disk_state": "string",
													"led_status": "string",
													"missing": true,
													"capacity": "string",
													"write_endurance": "string",
													"write_endurance_status": "string",
													"remaining_write_endurance_rate": "string",
													"firmware_revision": "string",
													"disk_claim_type": "non-vSAN"
												}
											],
											"firmwareInfo": {
												"bios_revision": "string",
												"bmc_revision": "string",
												"hba_version": "string",
												"expander_bpf_version": "string",
												"nonexpander_bpf_version": "string",
												"boss_version": "string",
												"cpld_version": "string",
												"idsdm_version": "string",
												"dcpm_version": "string"
											},
											"geo_location": {
												"rack_name": "rack1",
												"order_number": 1
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v3_hosts_sn_get"
			}
		},
		"/v4/hosts/{sn}": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the node that you want to update.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get information about a host (v4)",
				"description": "Get information about a specific host and its associated subcomponents. Version v4 contains drive configuration and BOSS card information.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HostV4"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "969WVL2",
											"slot": 0,
											"hostname": "string",
											"name": "string",
											"manufacturer": "string",
											"psnt": "string",
											"led_status": "string",
											"health": "string",
											"missing": true,
											"tpm_present": true,
											"operational_status": "string",
											"power_status": "string",
											"boot_devices": [
												{
													"id": "string",
													"sn": "PHYH013201XX480K",
													"device_model": "SSDSCJJB480G8R",
													"sata_type": "string",
													"power_on_hours": 1,
													"power_cycle_count": 1,
													"max_erase_count": 1,
													"avr_erase_count": 1,
													"capacity": "480103981056",
													"health": "string",
													"firmware_version": "2.5.13.4008",
													"bootdevice_type": "string",
													"block_size": "512",
													"slot": 1,
													"status": "NORMAL",
													"part_number": "TW07FXC3PIHiT0440",
													"manufacturer": "INTEL",
													"controller_firmware": "2.5.13.4008",
													"controller_model": "BOSS-S2",
													"controller_status": "NORMAL"
												}
											],
											"nics": [
												{
													"id": "string",
													"mac": "string",
													"link_status": "string",
													"link_speed": "string",
													"slot": 0,
													"firmware_family_version": "string"
												}
											],
											"disks": [
												{
													"id": "string",
													"sn": "string",
													"guid": "string",
													"manufacturer": "string",
													"model": "string",
													"disk_type": "string",
													"protocol": "string",
													"max_capable_speed": "string",
													"enclosure": 0,
													"bay": 0,
													"slot": 0,
													"disk_state": "string",
													"led_status": "string",
													"missing": true,
													"capacity": "string",
													"write_endurance": "string",
													"write_endurance_status": "string",
													"remaining_write_endurance_rate": "string",
													"firmware_revision": "string",
													"disk_claim_type": "non-vSAN"
												}
											],
											"firmwareInfo": {
												"bios_revision": "string",
												"bmc_revision": "string",
												"hba_version": "string",
												"expander_bpf_version": "string",
												"nonexpander_bpf_version": "string",
												"boss_version": "string",
												"cpld_version": "string",
												"idsdm_version": "string",
												"dcpm_version": "string"
											},
											"geo_location": {
												"rack_name": "rack1",
												"order_number": 1
											},
											"drive_configuration": {
												"type": "2401"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v4_hosts_sn_get"
			}
		},
		"/v5/hosts/{sn}": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the node that you want to update.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get information about a host (v5)",
				"description": "Get information about a specific host and its associated subcomponents. Version v5 provides support for satellite nodes, adding a new field 'type'.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HostV5"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "969WVL2",
											"type": "CLUSTER",
											"slot": 0,
											"hostname": "string",
											"name": "string",
											"manufacturer": "string",
											"psnt": "string",
											"led_status": "string",
											"health": "string",
											"missing": true,
											"tpm_present": true,
											"operational_status": "string",
											"power_status": "string",
											"boot_devices": [
												{
													"id": "string",
													"sn": "PHYH013201XX480K",
													"device_model": "SSDSCJJB480G8R",
													"sata_type": "string",
													"power_on_hours": 1,
													"power_cycle_count": 1,
													"max_erase_count": 1,
													"avr_erase_count": 1,
													"capacity": "480103981056",
													"health": "string",
													"firmware_version": "2.5.13.4008",
													"bootdevice_type": "string",
													"block_size": "512",
													"slot": 1,
													"status": "NORMAL",
													"part_number": "TW07FXC3PIHiT0440",
													"manufacturer": "INTEL",
													"controller_firmware": "2.5.13.4008",
													"controller_model": "BOSS-S2",
													"controller_status": "NORMAL"
												}
											],
											"nics": [
												{
													"id": "string",
													"mac": "string",
													"link_status": "string",
													"link_speed": "string",
													"slot": 0,
													"firmware_family_version": "string"
												}
											],
											"disks": [
												{
													"id": "string",
													"sn": "string",
													"guid": "string",
													"manufacturer": "string",
													"model": "string",
													"disk_type": "string",
													"protocol": "string",
													"max_capable_speed": "string",
													"enclosure": 0,
													"bay": 0,
													"slot": 0,
													"disk_state": "string",
													"led_status": "string",
													"missing": true,
													"capacity": "string",
													"write_endurance": "string",
													"write_endurance_status": "string",
													"remaining_write_endurance_rate": "string",
													"firmware_revision": "string",
													"disk_claim_type": "non-vSAN"
												}
											],
											"firmwareInfo": {
												"bios_revision": "string",
												"bmc_revision": "string",
												"hba_version": "string",
												"expander_bpf_version": "string",
												"nonexpander_bpf_version": "string",
												"boss_version": "string",
												"cpld_version": "string",
												"idsdm_version": "string",
												"dcpm_version": "string",
												"perc_version": "string"
											},
											"geo_location": {
												"rack_name": "rack1",
												"order_number": 1
											},
											"drive_configuration": {
												"type": "2401"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v5_hosts_sn_get"
			}
		},
		"/v6/hosts/{sn}": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the node that you want to update.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"deprecated": true,
				"tags": [
					"Host information"
				],
				"summary": "Get information about a host (v6)",
				"description": "Version v6 contains new nic version, which contains type, port and drivers field.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HostV6"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"sn": "969WVL2",
											"type": "CLUSTER",
											"slot": 0,
											"hostname": "string",
											"name": "string",
											"manufacturer": "string",
											"psnt": "string",
											"led_status": "string",
											"health": "string",
											"missing": true,
											"tpm_present": true,
											"operational_status": "string",
											"power_status": "string",
											"boot_devices": [
												{
													"id": "string",
													"sn": "PHYH013201XX480K",
													"device_model": "SSDSCJJB480G8R",
													"sata_type": "string",
													"power_on_hours": 1,
													"power_cycle_count": 1,
													"max_erase_count": 1,
													"avr_erase_count": 1,
													"capacity": "480103981056",
													"health": "string",
													"firmware_version": "2.5.13.4008",
													"bootdevice_type": "string",
													"block_size": "512",
													"slot": 1,
													"status": "NORMAL",
													"part_number": "TW07FXC3PIHiT0440",
													"manufacturer": "INTEL",
													"controller_firmware": "2.5.13.4008",
													"controller_model": "BOSS-S2",
													"controller_status": "NORMAL"
												}
											],
											"nics": [
												{
													"id": "string",
													"type": "string",
													"mac": "string",
													"link_status": "string",
													"link_speed": "string",
													"slot": 0,
													"port": 0,
													"firmware_family_version": "string",
													"drivers": [
														{
															"driver_name": "string",
															"driver_version": "string"
														}
													]
												}
											],
											"disks": [
												{
													"id": "string",
													"sn": "string",
													"guid": "string",
													"manufacturer": "string",
													"model": "string",
													"disk_type": "string",
													"protocol": "string",
													"max_capable_speed": "string",
													"enclosure": 0,
													"bay": 0,
													"slot": 0,
													"disk_state": "string",
													"led_status": "string",
													"missing": true,
													"capacity": "string",
													"write_endurance": "string",
													"write_endurance_status": "string",
													"remaining_write_endurance_rate": "string",
													"firmware_revision": "string",
													"disk_claim_type": "non-vSAN"
												}
											],
											"firmwareInfo": {
												"bios_revision": "string",
												"bmc_revision": "string",
												"hba_version": "string",
												"expander_bpf_version": "string",
												"nonexpander_bpf_version": "string",
												"boss_version": "string",
												"cpld_version": "string",
												"idsdm_version": "string",
												"dcpm_version": "string",
												"perc_version": "string"
											},
											"geo_location": {
												"rack_name": "rack1",
												"order_number": 1
											},
											"drive_configuration": {
												"type": "2401"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v6_hosts_sn_get"
			}
		},
		"/v7/hosts/{sn}": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the node that you want to retrieve inforamtion for.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"tags": [
					"Host information"
				],
				"summary": "Get information about a host (v7)",
				"description": "Version v7 contains new fields to support encryption.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HostV7"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v7_hosts_sn_get"
			}
		},
		"/v8/hosts/{sn}": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the node that you want to retrieve inforamtion for.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"tags": [
					"Host information"
				],
				"summary": "Get information about a host (v8).",
				"description": "Version v8 adds the new fields to get WWNN/WWPN of Fibre Channel cards.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HostV8"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v8_hosts_sn_get"
			}
		},
		"/v10/hosts/{sn}": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the node that you want to retrieve information for.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"tags": [
					"Host information"
				],
				"summary": "Get information about a host (v9).",
				"description": "Version v9 adds new fields to distinguish between base storage and optional storage.",
				"responses": {
					"200": {
						"description": "The request is successful.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HostV10"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v10_hosts_sn_get"
			}
		},
		"/v1/hosts/disk-slot-mappings": {
			"get": {
				"tags": [
					"Disk slot mapping"
				],
				"summary": "Get disk slot mappings for hosts",
				"description": "Get disk slot mappings for hosts.",
				"requestBody": {
					"description": "Information needed to retrieve slot mappings for a host.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"hosts": {
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/HostDiskSlotMappingRequest"
										}
									}
								}
							},
							"examples": {
								"HostDiskSlotMappingReqSamples": {
									"value": {
										"hosts": [
											{
												"host_serial_number": "969WVL2",
												"customer_supplied": {
													"management_ip": "10.20.201.11",
													"current_root_password": "Password"
												}
											}
										]
									}
								},
								"HostDiskSlotMappingReqSamplesV6": {
									"value": {
										"hosts": [
											{
												"host_serial_number": "serial_number_01",
												"diskgroup_type": "1001",
												"customer_supplied": {
													"management_ip": "2001:db8:1ab:16::101",
													"current_root_password": "Password",
													"diskgroup_type": "1001"
												}
											}
										]
									}
								},
								"Example": {
									"value": {
										"hosts": [
											{
												"host_serial_number": "969WVL2",
												"customer_supplied": {
													"management_ip": "string",
													"current_root_password": "string",
													"diskgroup_type": "string"
												}
											}
										]
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Retrieved all of the slot mappings for the specified hosts.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"items": {
										"$ref": "#/components/schemas/HostDiskSlotMappingsResponse"
									}
								},
								"examples": {
									"HostDiskSlotMappings": {
										"value": {
											"hosts": [
												{
													"host": "serial_number_01 or 12.128.201.100",
													"all_slots": [
														{
															"bay01": {
																"slots": [
																	1,
																	2,
																	3,
																	4
																]
															}
														}
													],
													"vsan_slots": {
														"capacity": [
															{
																"bay01": {
																	"slots": [
																		{
																			"slot": 1,
																			"diskgroup": 1
																		},
																		{
																			"slot": 2,
																			"diskgroup": 2
																		}
																	]
																}
															}
														],
														"cache": [
															{
																"bay00": {
																	"slots": [
																		{
																			"slot": 3,
																			"diskgroup": 1
																		}
																	]
																}
															}
														]
													},
													"non_vsan_slots": [
														{
															"bay00": {
																"slots": [
																	4
																]
															}
														}
													]
												}
											]
										}
									},
									"Example": {
										"value": {}
									}
								}
							}
						}
					},
					"207": {
						"description": "Retrieved a partial slot mapping for the specifed hosts.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/HostDiskSlotMappingsResponse"
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_hosts_disk_slot_mappings_get"
			}
		},
		"/v1/hosts/{sn}/shutdown": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the node that you want to shut down.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"post": {
				"tags": [
					"Host information"
				],
				"summary": "Shut down a host or perform a shutdown dry run",
				"description": "Shut down a selected host or perform a shutdown dry run.",
				"requestBody": {
					"description": "Information required to shutdown the host.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/HostShutdownSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"dryrun": true,
										"evacuate_poweredoff_vms": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"$ref": "#/components/responses/202"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_hosts_sn_shutdown_post"
			}
		},
		"/v1/hosts/{sn}/idrac/available-user-ids": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the host to be queried.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"tags": [
					"Host iDRAC configuration"
				],
				"summary": "Get a list of iDRAC user slot IDs",
				"description": "Get a list of the available iDRAC user slot IDs.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "integer"
									},
									"description": "Available iDRAC user slot IDs"
								},
								"example": [
									4,
									5,
									6,
									7,
									8,
									10,
									11,
									12,
									13,
									14
								]
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"example": {
									"message": "Internal error: Error message from PS: /usr/lib/vmware-marvin/marvind/webapps/ROOT/WEB-INF/classes/scripts/esxcli-client.py (No such file or directory)"
								}
							}
						}
					}
				},
				"operationId": "v1_hosts_sn_idrac_id_get"
			}
		},
		"/v1/hosts/{sn}/idrac/users": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the host to be queried.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"tags": [
					"Host iDRAC configuration"
				],
				"summary": "Get a list of iDRAC user accounts",
				"description": "Get a list of the iDRAC user accounts on the specified host.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/IdracUserInfo"
									}
								},
								"example": [
									{
										"id": 2,
										"name": "root",
										"privilege": "ADMIN"
									},
									{
										"id": 3,
										"name": "testuser",
										"privilege": "ADMIN"
									},
									{
										"id": 9,
										"name": "testuser3",
										"privilege": "ADMIN"
									},
									{
										"id": 15,
										"name": "vxpsvc",
										"privilege": "ADMIN"
									},
									{
										"id": 16,
										"name": "PTADMIN",
										"privilege": "ADMIN"
									}
								]
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"example": {
									"message": "Internal error: Error message from PS: /usr/lib/vmware-marvin/marvind/webapps/ROOT/WEB-INF/classes/scripts/esxcli-client.py (No such file or directory)"
								}
							}
						}
					}
				},
				"operationId": "v1_hosts_sn_idrac_user_get"
			},
			"post": {
				"tags": [
					"Host iDRAC configuration"
				],
				"summary": "Create an iDRAC user account",
				"description": "Create an iDRAC user account.",
				"requestBody": {
					"description": "The iDRAC user account information for the user to be created.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IdracUserCreateSpec"
							},
							"example": {
								"id": 5,
								"name": "testuser",
								"password": "testpwd",
								"privilege": "ADMIN"
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "The request is accepted for processing, but the processing is not completed. A requestId will be returned and can be used to check the status of the processing.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/202-Nocontent"
								},
								"example": {
									"request_id": "SBI_1333"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				},
				"operationId": "v1_hosts_sn_idrac_user_post"
			}
		},
		"/v1/hosts/{sn}/idrac/users/{userId}": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the host to be queried.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				},
				{
					"name": "userId",
					"description": "The unique identifier of the iDRAC user. The available range is between 3 and 16.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string"
					}
				}
			],
			"put": {
				"tags": [
					"Host iDRAC configuration"
				],
				"summary": "Update an iDRAC user account",
				"description": "Update an iDRAC user account.",
				"requestBody": {
					"description": "The iDRAC user account information for the user to be updated.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IdracUserUpdateSpec"
							},
							"example": {
								"name": "testuser",
								"password": "testpwd",
								"privilege": "ADMIN"
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "The request is accepted for processing, but the processing is not completed. A requestId will be returned and can be used to check the status of the processing.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/202-Nocontent"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "string",
											"error_code": 0,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				},
				"operationId": "v1_hosts_sn_idrac_user_id_put"
			}
		},
		"/v1/hosts/{sn}/idrac/network": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the host to be queried.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"tags": [
					"Host iDRAC configuration"
				],
				"summary": "Get the iDRAC network settings",
				"description": "Get the iDRAC network settings on the specified host.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IdracNetworkInfo"
								},
								"example": {
									"ip": {
										"type": "ipv4",
										"ip_address": "192.168.102.33",
										"netmask": "255.255.255.0",
										"gateway": "192.168.102.1"
									},
									"dhcp_enabled": false,
									"vlan": {
										"vlan_id": 0,
										"vlan_priority": 0
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"example": {
									"message": "Internal error: Error message from PS: /usr/lib/vmware-marvin/marvind/webapps/ROOT/WEB-INF/classes/scripts/esxcli-client.py (No such file or directory)"
								}
							}
						}
					}
				},
				"operationId": "v1_hosts_sn_idrac_network_get"
			},
			"patch": {
				"tags": [
					"Host iDRAC configuration"
				],
				"summary": "Update the iDRAC network settings",
				"description": "Update the iDRAC network settings on the specified host.",
				"requestBody": {
					"description": "The network parameters for the iDRAC network.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IdracNetworkSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"ip": {
											"type": "ipv4",
											"ip_address": "192.168.101.30",
											"netmask": "255.255.255.0",
											"gateway": "192.168.101.1"
										},
										"dhcp_enabled": false,
										"vlan": {
											"vlan_id": 0,
											"vlan_priority": 0
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "The request has been accepted for processing, but the processing has not been completed. A requestId will be returned and can be used to check the status of the processing.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/202-Nocontent"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "string",
											"error_code": 0,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				},
				"operationId": "v1_hosts_sn_idrac_network_patch"
			}
		},
		"/v2/hosts/{sn}/idrac/network": {
			"parameters": [
				{
					"name": "sn",
					"description": "The serial number of the host to be queried.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string",
						"example": "969WVL2"
					}
				}
			],
			"get": {
				"tags": [
					"Host iDRAC configuration"
				],
				"summary": "Get the iDRAC network settings",
				"description": "Get the iDRAC network settings on the specified host.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IdracNetworkInfoWithIPv6"
								},
								"example": {
									"ipv4": {
										"ip_address": "192.168.102.33",
										"netmask": "255.255.255.0",
										"gateway": "192.168.102.1",
										"dhcp_enabled": false
									},
									"ipv6": {
										"ip_address": "2001:db8:1ab:16::101",
										"prefix_length": 64,
										"gateway": "2001:db8:1ab:16::1",
										"auto_config_enabled": false
									},
									"vlan": {
										"vlan_id": 0,
										"vlan_priority": 0
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"example": {
									"message": "Internal error: Error message from PS: /usr/lib/vmware-marvin/marvind/webapps/ROOT/WEB-INF/classes/scripts/esxcli-client.py (No such file or directory)"
								}
							}
						}
					}
				},
				"operationId": "v2_hosts_sn_idrac_network_get"
			},
			"patch": {
				"tags": [
					"Host iDRAC configuration"
				],
				"summary": "Update the iDRAC network settings",
				"description": "Update the iDRAC network settings on the specified host.",
				"requestBody": {
					"description": "The network parameters for the iDRAC network.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IdracNetworkIPv6Spec"
							},
							"examples": {
								"Example": {
									"value": {
										"ipv4": {
											"ip_address": "192.168.101.30",
											"netmask": "255.255.255.0",
											"gateway": "192.168.101.1",
											"dhcp_enabled": false
										},
										"ipv6": {
											"ip_address": "2001:db8:1ab:16::102",
											"prefix_length": 64,
											"gateway": "2001:db8:1ab:16::1",
											"auto_config_enabled": false
										},
										"vlan": {
											"vlan_id": 0,
											"vlan_priority": 0
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "The request has been accepted for processing, but the processing has not been completed. A requestId will be returned and can be used to check the status of the processing.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/202-Nocontent"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "string",
											"error_code": 0,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				},
				"operationId": "v2_hosts_sn_idrac_network_patch"
			}
		},
		"/requests/{requestId_sample_reHostname}": {
			"parameters": [
				{
					"name": "requestId_sample_reHostname",
					"description": "The request ID of any long running operation.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"tags": [
					"ESXi hostname or management IP address change"
				],
				"description": "Retrieves the operation status and progress report.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RequestStatusInfo"
								},
								"examples": {
									"HostnameChangeRunning": {
										"value": {
											"id": "SBI_1333",
											"owner": "ChangeEsxiHostname",
											"state": "IN_PROGRESS",
											"progress": 10,
											"startTime": 1524215065553,
											"extension": "'{\n  \"detailedProgress\": [\n    {\n      \"step\": \"HostnameChangeConditionPrechecker\",\n      \"stepDesc\": \"To screen the hostname change conditions such as if new hostname is same as previous one.\",\n      \"exitCode\": \"COMPLETED\"\n    },\n    {\n      \"step\": \"VcAccountConnectivityPrechecker\",\n      \"stepDesc\": \"To check vCenter access with the vCenter admin account and if the account has administrator privileges.\",\n      \"exitCode\": \"COMPLETED\"\n    },\n    {\n      \"step\": \"HostAccountConnectivityPrechecker\",\n      \"stepDesc\": \"To check access to ESXi host with the root account.\",\n      \"exitCode\": \"EXECUTING\"\n    }\n  ],\n  \"requestParameters\": {\n    \"serial_number\": \"5HD7YK2\",\n    \"hostname\": \"testhost.localdomain.local\",\n    \"esxi_root_user\": {\n      \"password\": null\n    },\n    \"vc_admin_user\": {\n      \"username\": \"administrator@vsphere.local\",\n      \"password\": null\n    }\n  },\n  \"overallState\": null,\n  \"overallKb\": null\n}'\n"
										}
									},
									"HostnameChangeRunningSUCCESS": {
										"value": {
											"id": "SBI_1333",
											"owner": "ChangeEsxiHostname",
											"state": "COMPLETED",
											"progress": 100,
											"startTime": 1524215065553,
											"extension": "'{\n    \"detailedProgress\": [\n        {\n            \"step\": \"HostnameChangeConditionPrechecker\",\n            \"stepDesc\": \"To screen the hostname change conditions such as if new hostname is same as previous one.\",\n            \"exitCode\": \"COMPLETED\"\n        },\n        {\n            \"step\": \"VcAccountConnectivityPrechecker\",\n            \"stepDesc\": \"To check access to vCenter with the vCenter admin account and if the account has administrator privileges.\",\n            \"exitCode\": \"COMPLETED\"\n        },\n        {\n            \"step\": \"HostAccountConnectivityPrechecker\",\n            \"stepDesc\": \"To check access to ESXi host with the root account.\",\n            \"exitCode\": \"COMPLETED\"\n        },\n        {\n            \"step\": \"HosthostnameConfigure\",\n            \"stepDesc\": \"To change ESXi hostname\",\n            \"exitCode\": \"COMPLETED\"\n        },\n        {\n            \"step\": \"VsanHealthPostChecker\",\n            \"stepDesc\": \"To check the vSAN cluster health after host configuration.\",\n            \"exitCode\": \"COMPLETED\"\n        }\n    ],\n    \"requestParameters\": {\n        \"serial_number\": \"5HD7YK2\",\n        \"hostname\": \"testhost.localdomain.local\",\n        \"esxi_root_user\": {\n            \"password\": null\n        },\n        \"vc_admin_user\": {\n            \"username\": \"administrator@vsphere.local\",\n            \"password\": null\n        }\n    },\n    \"overallState\": \"COMPLETED\",\n    \"overallKb\": null\n}'\n"
										}
									},
									"HostnameChangeRunningERROR": {
										"value": {
											"id": "SBI_1333",
											"owner": "ChangeEsxiHostname",
											"state": "FAILED",
											"progress": 100,
											"startTime": 1524215065553,
											"extension": "'{\n    \"detailedProgress\": [\n        {\n            \"step\": \"HostnameChangeConditionPrechecker\",\n            \"stepDesc\": \"To screen the hostname change conditions such as if new hostname is same as previous one.\",\n            \"exitCode\": \"COMPLETED\"\n        },\n        {\n            \"step\": \"VcAccountConnectivityPrechecker\",\n            \"stepDesc\": \"To check access to vCenter with the vCenter admin account and if the account has administrator privileges.\",\n            \"exitCode\": \"COMPLETED\"\n        },\n        {\n            \"step\": \"HostAccountConnectivityPrechecker\",\n            \"stepDesc\": \"To check access to ESXi host with the root account.\",\n            \"exitCode\": \"COMPLETED\"\n        },\n        {\n            \"step\": \"HostHostnameResolveValidator\",\n            \"stepDesc\": \"To validate new host name testhost.localdomain.local can be resolved from DNS.\",\n            \"description\": \"The hostname supplied cannot be resolved from DNS server, please check it.\",\n            \"field\": \"hostname\",\n            \"exitCode\": \"FAILED\",\n            \"errorCode\": \"ValidationDnsRecordMissed\",\n            \"kb\": \"testKb\"\n        }\n    ],\n    \"requestParameters\": {\n        \"serial_number\": \"5HD7YK2\",\n        \"hostname\": \"testhost.localdomain.local\",\n        \"original_hostname\": \"orighost.localdomain.local\",\n        \"esxi_root_user\": {\n            \"password\": null\n        },\n        \"vc_admin_user\": {\n            \"username\": \"administrator@vsphere.local\",\n            \"password\": null\n        }\n    },\n    \"overallState\": \"VALIDATION_FAIL\",\n    \"overallKb\": \"testKb\"\n}'\n"
										}
									},
									"Example": {
										"value": {
											"id": "string",
											"owner": "string",
											"state": "IN_PROGRESS",
											"error": "string",
											"progress": 0,
											"start_time": 0,
											"end_time": 0,
											"target": "string",
											"step": "string",
											"detail": "string",
											"extension": "string"
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "request_get"
			}
		},
		"/v1/lcm/precheck": {
			"post": {
				"tags": [
					"LCM pre-check"
				],
				"summary": "Perform a health pre-check",
				"description": "Perform a separate health pre-check for the VxRail system.",
				"operationId": "precheck_v1",
				"requestBody": {
					"description": "Input parameters needed for health pre-check",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/HealthPrecheckSpec_v1"
							},
							"examples": {
								"Example": {
									"value": {
										"bundle_file_locator": "string",
										"health_precheck_type": "string",
										"vxrail": {
											"vxm_root_user": {
												"username": "administrator",
												"password": "password"
											}
										},
										"vcenter": {
											"vc_admin_user": {
												"username": "administrator",
												"password": "password"
											},
											"vcsa_root_user": {
												"username": "administrator",
												"password": "password"
											},
											"migration_spec": {
												"source_vcsa_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"target_vcsa_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"temporary_ip_setting": {
													"temporary_ip": "string",
													"gateway": "string",
													"netmask": "string"
												}
											}
										},
										"witness": {
											"witness_user": {
												"username": "administrator",
												"password": "password"
											},
											"auto_witness_upgrade": true
										},
										"upgrade_sequence": {
											"preferred_fault_domain_first": true
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "The request has been accepted for processing, but the processing has not been completed. A requestId will be returned and can be used to check the status of the processing.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsyncLcmRequestSuccessResponse"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
											"error_code": 2001,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"409": {
						"description": "The request is rejected because the resource is busy. Possible scenario include there's already an upgrade in progress, or some hardware operation is in progress.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Upgrade can be triggered when there's bundle successfully deployed."
								}
							}
						}
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Failed to start upgrade with sample error message",
									"knowledge_base": 48890
								}
							}
						}
					}
				}
			}
		},
		"/v1/lcm/upgrade/vlcm/image": {
			"post": {
				"tags": [
					"LCM upgrade"
				],
				"description": "Request to fetch the vLCM image information in the LCM bundle that is provided.",
				"operationId": "vlcm_image_query",
				"requestBody": {
					"description": "Input parameters that are required to query the vLCM image content.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VlcmUpgradeImageDepotSpec"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VlcmImageDepotInfo"
								}
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"examples": {
									"InstallCompletedErrorExample": {
										"$ref": "#/components/examples/Day1CompletedErrorExample"
									}
								}
							}
						}
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				}
			}
		},
		"/v1/lcm/upgrade": {
			"post": {
				"tags": [
					"LCM upgrade"
				],
				"summary": "Perform a full upgrade of the VxRail system (v1)",
				"description": "Perform a full upgrade for all VxRail software and hardware. Supported in VxRail versions 4.5.3xx+, 4.7.x, 7.0.x. [NOTE] When upgrading from VxRail 4.7.515 or earlier to VxRail 7.0.200 or later, you must upload the upgrade bundle to a folder that is not part of the root file system.",
				"operationId": "upgrade_v1",
				"requestBody": {
					"description": "Input parameters needed for the upgrade",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpgradeSpec_v1"
							},
							"examples": {
								"Example": {
									"value": {
										"bundle_file_locator": "string",
										"vxrail": {
											"vxm_root_user": {
												"username": "administrator",
												"password": "password"
											}
										},
										"vcenter": {
											"vc_admin_user": {
												"username": "administrator",
												"password": "password"
											},
											"vcsa_root_user": {
												"username": "administrator",
												"password": "password"
											},
											"psc_root_user": {
												"username": "administrator",
												"password": "password"
											},
											"migration_spec": {
												"source_vcsa_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"source_psc_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"target_vcsa_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"temporary_ip_setting": {
													"temporary_ip": "string",
													"gateway": "string",
													"netmask": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "The request has been accepted for processing, but the processing has not been completed. A requestId will be returned and can be used to check the status of the processing.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsyncLcmRequestSuccessResponse"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
											"error_code": 2001,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"409": {
						"description": "The request is rejected because the resource is busy. Possible scenarios include that there is already an upgrade in progress, or a hardware operation is in progress.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Upgrade can be triggered when there is a bundle successfully deployed."
								}
							}
						}
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Failed to start upgrade with sample error message",
									"knowledge_base": 48890
								}
							}
						}
					}
				}
			}
		},
		"/v2/lcm/upgrade": {
			"post": {
				"tags": [
					"LCM upgrade"
				],
				"summary": "Perform a full upgrade of the VxRail system (v2)",
				"description": "Perform a full upgrade for all VxRail software and hardware. Supported in VxRail versions 4.7.410+, 7.0.x. [NOTE] When upgrading from VxRail 4.7.515 or earlier to VxRail 7.0.200 or later, you must upload the upgrade bundle to a folder that is not part of the root file system.",
				"operationId": "upgrade_v2",
				"requestBody": {
					"description": "Input parameters needed for the upgrade",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpgradeSpec_v2"
							},
							"examples": {
								"Example": {
									"value": {
										"bundle_file_locator": "string",
										"vxrail": {
											"vxm_root_user": {
												"username": "administrator",
												"password": "password"
											}
										},
										"vcenter": {
											"vc_admin_user": {
												"username": "administrator",
												"password": "password"
											},
											"vcsa_root_user": {
												"username": "administrator",
												"password": "password"
											},
											"psc_root_user": {
												"username": "administrator",
												"password": "password"
											},
											"migration_spec": {
												"source_vcsa_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"source_psc_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"target_vcsa_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"temporary_ip_setting": {
													"temporary_ip": "string",
													"gateway": "string",
													"netmask": "string"
												}
											}
										},
										"witness": {
											"witness_user": {
												"username": "administrator",
												"password": "password"
											},
											"auto_witness_upgrade": true
										},
										"upgrade_sequence": {
											"preferred_fault_domain_first": true
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "The request has been accepted for processing, but the processing has not been completed. A requestId will be returned and can be used to check the status of the processing.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsyncLcmRequestSuccessResponse"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
											"error_code": 2001,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"409": {
						"description": "The request is rejected because the resource is busy. Possible scenarios include that there is already an upgrade in progress, or a hardware operation is in progress.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Upgrade can be triggered when there is bundle successfully deployed."
								}
							}
						}
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Failed to start upgrade with sample error message",
									"knowledge_base": 48890
								}
							}
						}
					}
				},
				"deprecated": true
			}
		},
		"/v3/lcm/upgrade": {
			"post": {
				"tags": [
					"LCM upgrade"
				],
				"summary": "Perform a full upgrade of the VxRail system (v3)",
				"description": "Perform a full upgrade for all VxRail software and hardware. Supported in VxRail versions 7.0.100+.",
				"operationId": "upgrade_v3",
				"requestBody": {
					"description": "Input parameters needed for the upgrade",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpgradeSpec_v3"
							},
							"examples": {
								"Example": {
									"value": {
										"bundle_file_locator": "string",
										"vxrail": {
											"vxm_root_user": {
												"username": "administrator",
												"password": "password"
											}
										},
										"vcenter": {
											"vc_admin_user": {
												"username": "administrator",
												"password": "password"
											},
											"vcsa_root_user": {
												"username": "administrator",
												"password": "password"
											},
											"migration_spec": {
												"source_vcsa_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"target_vcsa_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"temporary_ip_setting": {
													"temporary_ip": "string",
													"gateway": "string",
													"netmask": "string"
												}
											}
										},
										"witness": {
											"witness_user": {
												"username": "administrator",
												"password": "password"
											},
											"auto_witness_upgrade": true
										},
										"upgrade_sequence": {
											"preferred_fault_domain_first": true
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "The request has been accepted for processing, but the processing has not been completed. A requestId will be returned and can be used to check the status of the processing.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsyncLcmRequestSuccessResponse"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
											"error_code": 2001,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"409": {
						"description": "The request is rejected because the resource is busy. Possible scenario include there's already an upgrade in progress, or some hardware operation is in progress.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Upgrade can be triggered when there's bundle successfully deployed."
								}
							}
						}
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Failed to start upgrade with sample error message",
									"knowledge_base": 48890
								}
							}
						}
					}
				},
				"deprecated": true
			}
		},
		"/v4/lcm/upgrade": {
			"post": {
				"tags": [
					"LCM upgrade"
				],
				"summary": "Perform a partial upgrade of the VxRail system (v4)",
				"description": "Perform a partial upgrade for VxRail software and hardware (supported in VxRail versions 7.0.240 and later). Version 4 of this API includes an optional property called \"target_hosts\", which indicates the nodes that should be upgraded. If the property is empty, then this API upgrades all nodes in the cluster.",
				"operationId": "upgrade_v4",
				"requestBody": {
					"description": "Input parameters needed for the upgrade",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpgradeSpec_v4"
							},
							"examples": {
								"Example": {
									"value": {
										"bundle_file_locator": "string",
										"vxrail": {
											"vxm_root_user": {
												"username": "administrator",
												"password": "password"
											}
										},
										"vcenter": {
											"vc_admin_user": {
												"username": "administrator",
												"password": "password"
											},
											"vcsa_root_user": {
												"username": "administrator",
												"password": "password"
											},
											"migration_spec": {
												"source_vcsa_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"target_vcsa_host": {
													"name": "string",
													"user": {
														"username": "administrator",
														"password": "password"
													}
												},
												"temporary_ip_setting": {
													"temporary_ip": "string",
													"gateway": "string",
													"netmask": "string"
												}
											}
										},
										"witness": {
											"witness_user": {
												"username": "administrator",
												"password": "password"
											},
											"auto_witness_upgrade": true
										},
										"upgrade_sequence": {
											"preferred_fault_domain_first": true
										},
										"target_hosts": [
											{
												"name": "string"
											}
										]
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "The request has been accepted for processing, but the processing has not been completed. A requestId will be returned and can be used to check the status of the processing.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsyncLcmRequestSuccessResponse"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
											"error_code": 2001,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"409": {
						"description": "The request is rejected because the resource is busy. Possible scenario include there's already an upgrade in progress, or some hardware operation is in progress.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Upgrade can be triggered when there's bundle successfully deployed."
								}
							}
						}
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Failed to start upgrade with sample error message",
									"knowledge_base": 48890
								}
							}
						}
					}
				}
			}
		},
		"/v5/lcm/upgrade": {
			"post": {
				"tags": [
					"LCM upgrade"
				],
				"summary": "Perform an upgrade for the VxRail software and hardware with the options to either skip the failed node and ignore the missing file check (v5).",
				"description": "Perform an upgrade for the VxRail software and hardware with the options to skip the failed node, ignore the missing file check, and pre-check the rule for ecosystem components (v5).",
				"operationId": "upgrade_v5",
				"requestBody": {
					"description": "Input parameters needed for the upgrade",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpgradeSpecV5"
							},
							"examples": {
								"Example": {
									"value": {
										"bundle_file_locator": "string",
										"vxrail": {
											"vxm_root_user": {
												"username": "administrator",
												"password": "password"
											}
										},
										"vcenter": {
											"vc_admin_user": {
												"username": "administrator",
												"password": "password"
											},
											"vcsa_root_user": {
												"username": "administrator",
												"password": "password"
											},
											"migration_spec": {
												"source_vcsa_host": {
													"name": "string"
												},
												"target_vcsa_host": {
													"name": "string"
												},
												"temporary_ip_setting": {
													"temporary_ip": "string",
													"gateway": "string",
													"netmask": "string"
												}
											}
										},
										"witness": {
											"witness_user": {
												"username": "administrator",
												"password": "password"
											},
											"auto_witness_upgrade": true
										},
										"upgrade_sequence": {
											"preferred_fault_domain_first": true
										},
										"target_hosts": [
											{
												"name": "string"
											}
										],
										"update_rules": {
											"skip_failed_hosts": false,
											"missing_file_check": true,
											"ecosystem_check": {
												"continue_with_incompatible": true,
												"components": [
													"RP4VM"
												]
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "The request is accepted for processing, but the processing is not yet complete. A request ID will be returned and can be used to check the processing status.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsyncLcmRequestSuccessResponse"
								},
								"example": {
									"request_id": "1d221cf1-d337-4e36-8a69-e0701aaedca4"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"409": {
						"description": "The request is rejected as the resource is busy. Rejection reason could be either that there is an existing upgrade, or a hardware operation in progress.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"examples": {
									"Example1": {
										"value": {
											"error_code": 2106,
											"message": "Initiate operation {operation name} conflicts with another operation {operation name}."
										}
									},
									"Example2": {
										"value": {
											"error_code": 2107,
											"message": "The {operation name} operation has reached maximum instances. Try again later."
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"examples": {
									"Example1": {
										"value": {
											"error_code": 2105,
											"message": "Executor is not available for the {operation name}. Try again later."
										}
									},
									"Example2": {
										"value": {
											"error_code": 2203,
											"message": "Process has run into an error."
										}
									},
									"Example3": {
										"value": {
											"error_code": 2204,
											"message": "Invalid upgrade bundle."
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v6/lcm/upgrade": {
			"post": {
				"tags": [
					"LCM upgrade"
				],
				"summary": "Perform an upgrade for the VxRail software and hardware and allow customer updates management account during LCM(v6).",
				"description": "Perform an upgrade for the VxRail software and hardware. Version 6 of this API includes the following option -- \"vc_mgmt_user\", the new management account. The system will create the account @vsphere.local domain and assign management roles or privileges to it during LCM(v6).",
				"operationId": "upgrade_v6",
				"requestBody": {
					"description": "Input parameters needed for the upgrade",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpgradeSpecV6"
							},
							"examples": {
								"Example": {
									"value": {
										"bundle_file_locator": "string",
										"vxrail": {
											"vxm_root_user": {
												"username": "administrator",
												"password": "password"
											}
										},
										"vcenter": {
											"vc_admin_user": {
												"username": "administrator",
												"password": "password"
											},
											"vc_mgmt_user": {
												"username": "management@vsphere.local",
												"password": "password"
											},
											"vcsa_root_user": {
												"username": "administrator",
												"password": "password"
											},
											"migration_spec": {
												"source_vcsa_host": {
													"name": "string"
												},
												"target_vcsa_host": {
													"name": "string"
												},
												"temporary_ip_setting": {
													"temporary_ip": "string",
													"gateway": "string",
													"netmask": "string"
												}
											}
										},
										"witness": {
											"witness_user": {
												"username": "administrator",
												"password": "password"
											},
											"auto_witness_upgrade": true
										},
										"upgrade_sequence": {
											"preferred_fault_domain_first": true
										},
										"target_hosts": [
											{
												"name": "string"
											}
										],
										"update_rules": {
											"skip_failed_hosts": false,
											"missing_file_check": true,
											"ecosystem_check": {
												"continue_with_incompatible": true,
												"components": [
													"RP4VM"
												]
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "Accepted the request for processing, but the processing is not yet complete. A request ID will be returned and can be used to check the processing status.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsyncLcmRequestSuccessResponse"
								},
								"example": {
									"request_id": "1d221cf1-d337-4e36-8a69-e0701aaedca4"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"409": {
						"description": "The request is rejected as the resource is busy. The rejection could be either because of an existing upgrade or a hardware operation in progress.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"examples": {
									"example1": {
										"value": {
											"error_code": 2106,
											"message": "Initiate operation {operation name} conflicts with another operation {operation name}."
										}
									},
									"example2": {
										"value": {
											"error_code": 2107,
											"message": "The {operation name} operation has reached maximum instances. Try again later."
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"examples": {
									"example1": {
										"value": {
											"error_code": 2105,
											"message": "Executor is not available for the {operation name}. Try again later."
										}
									},
									"example2": {
										"value": {
											"error_code": 2203,
											"message": "Process has run into an error."
										}
									},
									"example3": {
										"value": {
											"error_code": 2204,
											"message": "Invalid upgrade bundle."
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/lcm/upgrade/retry": {
			"post": {
				"tags": [
					"LCM upgrade"
				],
				"summary": "Perform a retry upgrade of the VxRail system (v1)",
				"description": "Perform a retry upgrade for all VxRail software and hardware after previous upgrade failed.",
				"operationId": "upgrade_retry_v1",
				"responses": {
					"202": {
						"description": "The request has been accepted for processing, but the processing has not been completed. A requestId will be returned and can be used to check the status of the processing.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsyncLcmRequestSuccessResponse"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
											"error_code": 2001,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"409": {
						"description": "The request is rejected because the resource is busy. Possible scenario include there's already an upgrade in progress, or some hardware operation is in progress.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Upgrade can be triggered when there's bundle successfully deployed."
								}
							}
						}
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LcmErrorResponse"
								},
								"example": {
									"error_code": 2110,
									"message": "Failed to start upgrade with sample error message",
									"knowledge_base": 48890
								}
							}
						}
					}
				}
			}
		},
		"/v1/cvs/compliance-report": {
			"post": {
				"tags": [
					"CVS public"
				],
				"summary": "Generate a compliance drift report",
				"operationId": "generateComplianceReportPublic",
				"description": "Generate a compliance report containing component drift information against the current system baseline.",
				"requestBody": {
					"description": "Contains an empty JSON request body",
					"content": {
						"application/json": {}
					}
				},
				"responses": {
					"202": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GenerateReportSuccessResponse"
								},
								"example": {
									"request_id": "compliancheck-1d221cf1-d337-4e36-8a69-e0701aaedca4"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v1/lcm/advisory-meta-bundle": {
			"post": {
				"tags": [
					"CVS public"
				],
				"summary": "Upload an advisory metadata bundle",
				"description": "Upload a metadata bundle for local advisory analysis.",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"meta_bundle": {
										"type": "string",
										"format": "binary"
									}
								}
							},
							"examples": {
								"Example": {
									"value": {
										"meta_bundle": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					}
				},
				"operationId": "lcm_advisory_meta_bundle_post"
			}
		},
		"/v1/lcm/advisory-report": {
			"post": {
				"tags": [
					"CVS public"
				],
				"summary": "Generate an advisory report of all online and local updates",
				"operationId": "generateAdvisoryReportPublic",
				"description": "Generate an advisory report that contains information about all online and local lifecycle management updates.",
				"requestBody": {
					"content": {
						"application/json": {
							"examples": {}
						}
					}
				},
				"responses": {
					"202": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GenerateReportSuccessResponse"
								},
								"example": {
									"request_id": "advisorycheck-1d221cf1-d337-4e36-8a69-e0701aaedca4"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v1/network/vxrail-manager": {
			"post": {
				"tags": [
					"Pre-installation static IP"
				],
				"summary": "Configure the Management IP address for VxRail Manager",
				"description": "Configure VxRail Manager with a static IP address for remote access. This endpoint uses the default static IP address (192.168.10.200) and can only be run before the initial configuration and deployment of a VxRail cluster.",
				"requestBody": {
					"description": "The parameters that are required for setting the VxRail Manager static IP address.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/StaticIPSettingsSpec"
							},
							"example": {
								"ip": "192.168.102.254",
								"gateway": "192.168.102.4",
								"netmask": "255.255.255.0",
								"vlan_id": "200"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NetworkVxMInfo"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_network_vxm_post"
			}
		},
		"/v2/network/vxrail-manager": {
			"post": {
				"tags": [
					"Pre-installation static IP"
				],
				"summary": "Configure the Management IP address for VxRail Manager",
				"description": "Configure VxRail Manager with a static IP address for remote access. This endpoint uses the default static IP address (192.168.10.200) and can only be run before the initial configuration and deployment of a VxRail cluster.",
				"requestBody": {
					"description": "The parameters that are required for setting the VxRail Manager static IP address.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/StaticIPSettingsSpecV2"
							},
							"examples": {
								"ipv4": {
									"value": {
										"ip": "192.168.102.254",
										"gateway": "192.168.102.4",
										"netmask": "255.255.255.0",
										"vlan_id": "200"
									}
								},
								"ipv6": {
									"value": {
										"ipv6": "2001:db8:1ab:16::201",
										"gateway_ipv6": "2001:db8:1ab:16::1",
										"prefix_length_ipv6": 64,
										"vlan_id": "200"
									}
								},
								"Example": {
									"value": {
										"ip": "string",
										"gateway": "string",
										"netmask": "string",
										"vlan_id": "string",
										"ipv6": "string",
										"gateway_ipv6": "string",
										"prefix_length_ipv6": 0
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NetworkVxMInfo"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_network_vxm_post"
			}
		},
		"/v1/requests/{id}": {
			"get": {
				"tags": [
					"Request status"
				],
				"summary": "Get the status of a request",
				"description": "Retrieve the operation status and progress report of the specified request.",
				"parameters": [
					{
						"name": "id",
						"description": "The request ID of any long running operation.",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RequestStatusInfo"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"owner": "string",
											"state": "IN_PROGRESS",
											"error": "string",
											"progress": 0,
											"start_time": 0,
											"end_time": 0,
											"target": "string",
											"step": "string",
											"detail": "string",
											"extension": "string"
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"description": "Resource not found.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/404-Nocontent"
								},
								"example": {
									"message": "The provided id was not found."
								}
							}
						}
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_request_id_get"
			}
		},
		"/v1/requests": {
			"get": {
				"tags": [
					"Request status"
				],
				"summary": "Query all requests",
				"description": "Query all of the requests.",
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "Query condictions for requests.\nEqual(eq), in(in) and not equal(ne) supported fields: id, state, owner, target, step.\nEqual(eq), not equal(ne), in(in), greater than(gt), less than(lt), greater or equal to(ge) and less or equal to(le) supported fields: start_time, end_time, progress.\nExample: $filter=id eq 'e9082a79-12c8-484f-9b11-76c1a6e2f36b' and owner eq 'LOG_BUNDLE' and state in ('FAILED','IN_PROGRESS') and start_time gt 10000.",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/RequestStatusInfo"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"owner": "string",
												"state": "IN_PROGRESS",
												"error": "string",
												"progress": 0,
												"start_time": 0,
												"end_time": 0,
												"target": "string",
												"step": "string",
												"detail": "string",
												"extension": "string"
											}
										]
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_requests_get"
			}
		},
		"/v1/support/heartbeat": {
			"get": {
				"tags": [
					"Support heartbeat information"
				],
				"summary": "Get the last heartbeat status",
				"description": "Get the last heartbeat status and system configuration.",
				"responses": {
					"200": {
						"description": "Heartbeat status and data successfully returned.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HeartbeatInfo"
								},
								"example": {
									"id": 1,
									"status": "SUCCESS",
									"target": "Appliance-EMCVB150600013",
									"beginTime": "2017-11-17 05:18:33.039000+00:00",
									"endTime": "2017-11-17 05:18:33.098000+00:00",
									"message": "OK",
									"data": "the content of heartbeat syr configuration"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					}
				},
				"operationId": "v1_support_heartbeat_get"
			}
		},
		"/v1/support/kb": {
			"get": {
				"tags": [
					"Support knowledge base"
				],
				"summary": "Get the URL of the Support Knowledge Base",
				"description": "Get the home URL of the VxRail Support Knowledge Base (KB).",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KnowledgeBaseInfo"
								},
								"example": {
									"homeURL": "https://support.emc.com/products/39970_VxRail-Appliance",
									"articlesLink": "/rest/vxm/v1/support/kb/articles"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					}
				},
				"operationId": "v1_kb_get"
			}
		},
		"/v1/support/kb/articles": {
			"get": {
				"tags": [
					"Support knowledge base"
				],
				"summary": "Get articles from the Support Knowledge Base",
				"description": "Get articles from VxRail Support Knowledge Base.",
				"parameters": [
					{
						"name": "searchText",
						"description": "An optional search term for narrowing the list of articles returned",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"default": "*"
						},
						"allowEmptyValue": true
					},
					{
						"name": "limit",
						"description": "The maximum number of articles that will be returned",
						"in": "query",
						"required": false,
						"allowEmptyValue": true,
						"schema": {
							"type": "integer",
							"default": 3
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ArticleInfo"
									}
								},
								"example": [
									{
										"id": "ka1f1000000GBiEAAW",
										"title": "Some useful PSQL commands for the VxRail",
										"url": "https://support.emc.com/kb/479126",
										"author": "vxrail-support",
										"date": 1537401600000,
										"products": "VxRail Appliance Series,VxRail Appliance Family",
										"audience": "Level 40 = Employees and Partners"
									},
									{
										"id": "ka2f1000000GBiEAAW",
										"title": "How to manually import vCenter SSL certificate",
										"url": "https://support.emc.com/kb/479127",
										"author": "Someone",
										"date": 1537401600000,
										"products": "VxRail Appliance Series,VxRail Appliance Family",
										"audience": "Level 40 = Employees and Partners"
									}
								]
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/400-Nocontent"
								},
								"example": {
									"message": "Invalid limit {0}."
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"IncorrectSupportAccout": {
										"value": {
											"error-code": 1,
											"message": "Invalid support account."
										}
									},
									"InvalidKBData": {
										"value": {
											"error-code": 8,
											"message": "Unable to fetch or parse articles from support.emc.com."
										}
									},
									"NetworkIssue": {
										"value": {
											"error-code": 21,
											"message": "Network issue."
										}
									},
									"DarksiteForbiden": {
										"value": {
											"message": "This feature may be unavailable because VxRail Manager is disconnected from the internet."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v1_kb_articels_get"
			}
		},
		"/v1/support/community": {
			"get": {
				"tags": [
					"Support community forum"
				],
				"summary": "Get the home URL for accessing the VxRail community",
				"description": "Get the home URL for accessing the VxRail community.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommunityInfo"
								},
								"example": {
									"homeURL": "https://community.emc.com/community/products/vxrail",
									"messagesLink": "/rest/vxm/v1/support/community/messages"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					}
				},
				"operationId": "v1_support_community_get"
			}
		},
		"/v1/support/community/messages": {
			"get": {
				"tags": [
					"Support community forum"
				],
				"summary": "Get VxRail community messages",
				"description": "Get VxRail community messages.",
				"parameters": [
					{
						"name": "limit",
						"description": "The number of messages the user wants to receive",
						"in": "query",
						"required": false,
						"allowEmptyValue": true,
						"schema": {
							"type": "integer",
							"default": 3
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/MessageInfo"
									}
								},
								"example": [
									{
										"id": "242813",
										"type": "discussion",
										"title": "VxRail 3.5 Installation Question",
										"url": "https://community.emc.com/thread/242813",
										"author": "benoitbernard-de",
										"date": 1537401600000,
										"tags": [
											"vxrail"
										],
										"status": "published",
										"viewCount": 78,
										"replyCount": 1,
										"resolved": "open"
									},
									{
										"id": "242814",
										"type": "discussion",
										"title": "VxRail 3.5 Installation Question",
										"url": "https://community.emc.com/thread/242813",
										"author": "benoitbernard-de",
										"date": 1537401600000,
										"tags": [
											"vxrail"
										],
										"status": "published",
										"viewCount": 78,
										"replyCount": 1,
										"resolved": "open"
									}
								]
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/400-Nocontent"
								},
								"example": {
									"message": "Invalid limit {0}."
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"InvalidMessageData": {
										"value": {
											"message": "Unable to fetch or parse messages from community.emc.com."
										}
									},
									"DarksiteForbiden": {
										"value": {
											"message": "This feature may be unavailable because VxRail Manager is disconnected from the Internet."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v1_support_community_message_get"
			}
		},
		"/v1/support/account": {
			"get": {
				"tags": [
					"Support account"
				],
				"summary": "Get the support account",
				"description": "Get the current support account set in VxRail.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SupportAccountInfo"
								},
								"examples": {
									"Example": {
										"value": {
											"username": "string",
											"password": "string"
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"description": "Internal Server Error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"example": {
									"message": "Network connection timed out."
								}
							}
						}
					}
				},
				"operationId": "v1_support_account_get"
			},
			"post": {
				"tags": [
					"Support account"
				],
				"summary": "Add a support account",
				"description": "Add a support account to VxRail Manager.",
				"requestBody": {
					"description": "The username and password of the support account.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SupportAccountSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"username": "string",
										"password": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"NetworkTimeout": {
										"value": {
											"message": "Network connection timed out."
										}
									},
									"DarksiteForbiden": {
										"value": {
											"message": "This feature may be unavailable because VxRail Manager is disconnected from the Internet."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v1_support_account_post"
			},
			"put": {
				"tags": [
					"Support account"
				],
				"summary": "Update the support account",
				"description": "Update the support account in VxRail Manager.",
				"requestBody": {
					"description": "The username and password of the support account.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SupportAccountSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"username": "string",
										"password": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"NetworkTimeout": {
										"value": {
											"message": "Network connection timed out."
										}
									},
									"DarksiteForbiden": {
										"value": {
											"message": "This feature may be unavailable because VxRail Manager is disconnected from the Internet."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v1_support_account_put"
			},
			"delete": {
				"tags": [
					"Support account"
				],
				"summary": "Remove the support account",
				"description": "Remove the support account in VxRail Manager.",
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"NetworkTimeout": {
										"value": {
											"message": "Network connection timed out."
										}
									},
									"DarksiteForbiden": {
										"value": {
											"message": "This feature may be unavailable because VxRail Manager is disconnected from the Internet."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v1_support_account_delete"
			}
		},
		"/v1/support/logs": {
			"get": {
				"tags": [
					"Support logs"
				],
				"summary": "Query all of support logs",
				"description": "Query all of the support logs.",
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "Query conditions for the support logs.\nEqual(eq), and not equal(ne) supported fields: id, path, types, nodes. In addition, types and nodes are collection condition fields, which mean the value is equal though the sequence is different. For example, 'node1, node2, node3' is equal to 'node3, node2, node1'.\nExample: $filter=id eq 'VxRail_Support_Bundle_52fd1cfc-4646-8a7d-d4ba-721c3da3808e_2018_10_08_08_30_44 and nodes eq 'node1, node2, node3'",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/LogInfo"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"id": "string",
												"types": "vxm",
												"nodes": [
													"JHN3S62"
												],
												"creation_time": 0,
												"path": "string",
												"size": 0,
												"details": [
													"Failed to generate idrac log bundle on JHN3S62 due to the node is not idrac log supported."
												]
											}
										]
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					}
				},
				"operationId": "v1_support_logs_get"
			},
			"post": {
				"tags": [
					"Support logs"
				],
				"summary": "Collect the support log with the specified types of components",
				"description": "Collect the support log with the specified types of components.",
				"requestBody": {
					"description": "The specified types and nodes for the log bundle collection.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LogSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"types": [
											"vxm"
										],
										"nodes": [
											"string"
										],
										"autoclean": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"$ref": "#/components/responses/202"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"409": {
						"description": "The log collection is running. Please try again later."
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"GeneralDescription": {
										"value": {
											"error-code": 1,
											"message": "Unexpected internal server error."
										}
									},
									"InsufficientCapacity": {
										"value": {
											"error-code": 2,
											"message": "Insufficient storage capacity."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v1_support_logs_post"
			}
		},
		"/v1/support/logs/{logId}": {
			"parameters": [
				{
					"name": "logId",
					"description": "The log ID",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"tags": [
					"Support logs"
				],
				"summary": "Query the log by the log ID",
				"description": "Query the log by the log ID.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LogInfo"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "string",
											"types": "vxm",
											"nodes": [
												"JHN3S62"
											],
											"creation_time": 0,
											"path": "string",
											"size": 0,
											"details": [
												"Failed to generate idrac log bundle on JHN3S62 due to the node is not idrac log supported."
											]
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_support_logs_id_get"
			}
		},
		"/v1/support/logs/{logId}/download": {
			"parameters": [
				{
					"name": "logId",
					"description": "The unique identifier of the log that you want to download.",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"tags": [
					"Support logs"
				],
				"summary": "Download the binary stream of a log",
				"description": "Download the binary stream of a log.",
				"responses": {
					"200": {
						"description": "Successul Operation.",
						"content": {
							"application/octet-stream": {
								"schema": {
									"$ref": "#/components/responses/200"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				},
				"operationId": "v1_support_logs_id__download_get"
			}
		},
		"/v1/support/service-requests": {
			"get": {
				"tags": [
					"Support service request"
				],
				"summary": "Get links for opening Service Requests",
				"description": "Get links for opening Service Requests (SRs). One link per node.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ServiceRequestInfo"
									}
								},
								"example": [
									{
										"url": "http://uemconnect.emc.com/servicecenter/createsr.htm?serialNo=VXRAILVIP470F601&type=Support",
										"appliance_psnt": "VXRAILVIP470F601"
									},
									{
										"url": "http://uemconnect.emc.com/servicecenter/createsr.htm?serialNo=VXRAILVIP470F602&type=Support",
										"appliance_psnt": "VXRAILVIP470F602"
									},
									{
										"url": "http://uemconnect.emc.com/servicecenter/createsr.htm?serialNo=VXRAILVIP470F603&type=Support",
										"appliance_psnt": "VXRAILVIP470F603"
									}
								]
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_support_service_requests_get"
			}
		},
		"/v1/support/chat-url": {
			"get": {
				"tags": [
					"Support chat"
				],
				"summary": "Get a URL to start a chat session with a Dell Support",
				"description": "Get a URL link to start a chat session with a support representative.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChatInfo"
								},
								"example": {
									"url": "http://uemconnect.emc.com/servicecenter/liveChat.htm?serialNo=EMCVB150600013&type=Support"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_support_chat_url_get"
			}
		},
		"/v1/support/contact": {
			"get": {
				"tags": [
					"Support contact"
				],
				"summary": "Get the support contact information",
				"description": "Get the support contact information.",
				"responses": {
					"200": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SupportContactInfo"
								},
								"example": {
									"first_name": "VxRail",
									"last_name": "Emc",
									"email": "vxrailtest@emconlinesupport.com",
									"company": "EMC CORP - PARTNER",
									"phone": "1508435-1000",
									"site_id": [
										"12728783"
									]
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_support_contact_get"
			}
		},
		"/v1/system": {
			"get": {
				"deprecated": true,
				"tags": [
					"System information"
				],
				"summary": "Get VxRail system information (v1)",
				"description": "Get VxRail system information (v1).",
				"operationId": "queryVxRailManagerSystemInformation",
				"responses": {
					"200": {
						"$ref": "#/components/responses/SystemInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				}
			}
		},
		"/v2/system": {
			"get": {
				"deprecated": true,
				"tags": [
					"System information"
				],
				"summary": "Get VxRail system information (v2)",
				"description": "Get VxRail system information (v2).",
				"operationId": "queryVxRailManagerSystemInformationV2",
				"responses": {
					"200": {
						"$ref": "#/components/responses/SystemInfoV2"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				}
			}
		},
		"/v3/system": {
			"get": {
				"deprecated": true,
				"tags": [
					"System information"
				],
				"summary": "Get VxRail system information (v3)",
				"description": "Get VxRail system information (v3).",
				"operationId": "queryVxRailManagerSystemInformationV3",
				"responses": {
					"200": {
						"$ref": "#/components/responses/SystemInfoV3"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				}
			}
		},
		"/v4/system": {
			"get": {
				"tags": [
					"System information"
				],
				"summary": "Get VxRail system information (v4)",
				"description": "Get VxRail system information (v4). Added support for satellite nodes.",
				"responses": {
					"200": {
						"$ref": "#/components/responses/SystemInfoV4"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "queryVxRailManagerSystemInformationV4"
			}
		},
		"/v5/system": {
			"get": {
				"tags": [
					"System information"
				],
				"summary": "Get VxRail system information (v5).",
				"description": "VxRail system information (v5). If the cluster type is dynamic node, then Deployment_type displays \"DYNAMIC_NODE\" instead of \"COMPUTE\".",
				"responses": {
					"200": {
						"$ref": "#/components/responses/SystemInfoV5"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "queryVxRailManagerSystemInformationV5"
			}
		},
		"/v1/system/available-hosts": {
			"get": {
				"tags": [
					"System information"
				],
				"summary": "Get information about available hosts",
				"description": "Get information about available hosts in the VxRail cluster.",
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "The user can filter a list of hosts by the fields (id, appliance_id, slot, model, is_primary_node, bios_uuid, cluster_affinity) using the supported operators (eq and ne).",
						"schema": {
							"type": "string",
							"example": "$filter=id eq VXRAILVIP470F2-01-01 and slot ne 2"
						},
						"required": false
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/AvailableHostsInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_available_hosts_get"
			}
		},
		"/v1/system/cluster-hosts": {
			"get": {
				"deprecated": true,
				"tags": [
					"System information"
				],
				"summary": "Get information about configured hosts",
				"description": "Get information about configured hosts in the VxRail cluster.",
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "The user can filter a list of hosts by the fields (id, appliance_id, slot, model, is_primary_node, bios_uuid, cluster_affinity) using the supported operators (eq and ne).",
						"schema": {
							"type": "string",
							"example": "$filter=id eq VXRAILVIP470F2-01-01 and slot ne 2"
						},
						"required": false
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/ClusterHostsInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_cluster_hosts_get"
			}
		},
		"/v2/system/cluster-hosts": {
			"get": {
				"tags": [
					"System information"
				],
				"summary": "Get information about configured hosts",
				"description": "Get information about configured hosts in the VxRail cluster.",
				"parameters": [
					{
						"name": "$filter",
						"in": "query",
						"description": "The user can filter a list of hosts by the fields (id, appliance_id, slot, model, is_primary_node, bios_uuid, cluster_affinity) using the supported operators (eq and ne).",
						"schema": {
							"type": "string",
							"example": "$filter=id eq VXRAILVIP470F2-01-01 and slot ne 2"
						},
						"required": false
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/ClusterHostsInfoV2"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v2_system_cluster_hosts_get"
			}
		},
		"/v1/system/dns": {
			"get": {
				"tags": [
					"System information"
				],
				"summary": "Get DNS of VxRail cluster",
				"description": "Get information about the DNS servers for the cluster (Witness VM which is deployed in the witness sled in VxRail VD-4000r or VD-4000z platforms is not included).",
				"responses": {
					"200": {
						"$ref": "#/components/responses/DNSInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_dns_get"
			},
			"post": {
				"tags": [
					"System information"
				],
				"summary": "Set DNS of VxRail cluster",
				"description": "Set the DNS servers for the cluster.",
				"requestBody": {
					"description": "DNS servers for VxRail cluster",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DNSInfoSpec"
							},
							"example": {
								"components": "VXM",
								"vcenter": {
									"username": "administrator@vsphere.local",
									"password": "xxxxxx"
								},
								"servers": [
									"192.168.10.200",
									"8.8.8.8"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/DNSInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_dns_post"
			}
		},
		"/v1/system/ntp": {
			"get": {
				"tags": [
					"System information"
				],
				"summary": "Get NTP of VxRail cluster",
				"description": "Get information about the NTP servers for the cluster.",
				"responses": {
					"200": {
						"$ref": "#/components/responses/NTPInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_ntp_get"
			},
			"post": {
				"tags": [
					"System information"
				],
				"summary": "Set NTP of VxRail cluster",
				"description": "Set the NTP servers for the cluster.",
				"requestBody": {
					"description": "Information to set the NTP servers for the cluster.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NTPInfoSpec"
							},
							"example": {
								"components": "ALL",
								"vcenter": {
									"username": "administrator@vsphere.local",
									"password": "xxxxxx"
								},
								"servers": [
									"172.16.1.167"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/NTPInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_ntp_post"
			}
		},
		"/v1/system/primary-storage": {
			"post": {
				"tags": [
					"System information"
				],
				"summary": "Provision and finalize a dynamic node cluster",
				"description": "Provision and finalize a dynamic node cluster, such as moving the VxRail Manager virtual machine to the target shared storage, enabling high availability (HA) and distributed resource scheduler (DRS) service on the cluster, and enabling post-installation functions.",
				"requestBody": {
					"description": "Information to provision a dynamic node cluster",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PrimaryStorageSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"primary_storage_type": "VSAN_HCI_MESH",
										"primary_storage_name": "string",
										"storage_policy_profile_name": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_primary_storage_post"
			}
		},
		"/v1/system/cluster-portgroups": {
			"get": {
				"tags": [
					"System network"
				],
				"summary": "Get information about cluster portgroups",
				"description": "Get information about cluster portgroups used by a node. You specify the node using a query parameter.",
				"parameters": [
					{
						"name": "node_fqdn",
						"description": "The FQDN of the node that you want to query",
						"in": "query",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/ClusterPortgroupInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_cluster_portgroups_get"
			}
		},
		"/v1/system/cluster-portgroups/{node_fqdn}": {
			"get": {
				"deprecated": true,
				"tags": [
					"System network"
				],
				"summary": "Get information about cluster portgroups",
				"description": "Get information about cluster portgroups used by a node.",
				"parameters": [
					{
						"name": "node_fqdn",
						"description": "The FQDN of the node that you want to query",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/ClusterPortgroupInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_cluster_portgroups_fqdn_get"
			}
		},
		"/v1/system/internet-mode": {
			"get": {
				"tags": [
					"System network"
				],
				"summary": "Get VxRail system network status",
				"description": "Get VxRail system network status.",
				"responses": {
					"200": {
						"$ref": "#/components/responses/InternetModeInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_internet-mode_get"
			},
			"put": {
				"tags": [
					"System network"
				],
				"summary": "Update the VxRail system network parameters",
				"description": "Update the VxRail system network parameters.",
				"requestBody": {
					"description": "Configure VxRail system network mode to darksite or not",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InternetMode"
							},
							"example": {
								"is_dark_site": true
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_internet-mode_put"
			}
		},
		"/v1/system/proxy": {
			"get": {
				"tags": [
					"System proxy settings"
				],
				"summary": "Get the VxRail Manager system proxy settings",
				"description": "Get the VxRail Manager system proxy settings.",
				"responses": {
					"200": {
						"$ref": "#/components/responses/ProxySettingsInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404-NotFoundProxySetting"
					},
					"500": {
						"$ref": "#/components/responses/500-NetworkTimeoutInfo"
					}
				},
				"operationId": "v1_system_proxy_get"
			},
			"post": {
				"tags": [
					"System proxy settings"
				],
				"summary": "Enable VxRail Manager system proxy settings",
				"description": "Enable VxRail Manager system proxy settings.",
				"requestBody": {
					"description": "Configurable parameters for the proxy server",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProxySettingsSpec"
							},
							"example": {
								"esrs_pwd": "ESRS_PASSWORD",
								"proxy_spec": {
									"server": "10.1.1.1",
									"port": 80,
									"username": "UserName",
									"pwd": "PASSWORD",
									"type": "HTTP",
									"socks_version": 0
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400-InvalidProxySettingsInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"ProxyServerCanNotConnected": {
										"value": {
											"error-code": 801,
											"message": "The proxy server provided cannot be connected to."
										}
									},
									"AlreadyEnableProxyServer": {
										"value": {
											"error-code": 805,
											"message": "Set proxy failed. There is already enabled proxy, please use update instead."
										}
									},
									"DNSResolveIssue": {
										"value": {
											"error-code": 818,
											"message": "Proxy SOCKS4 does not support DNS resolving, please configure your upstream DNS server."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v1_system_proxy_post"
			},
			"patch": {
				"tags": [
					"System proxy settings"
				],
				"summary": "Update VxRail Manager system proxy settings",
				"description": "Update VxRail Manager system proxy settings.",
				"requestBody": {
					"description": "Configurable parameters to set and update for the proxy server.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProxySettingsSpec"
							},
							"example": {
								"proxy_spec": {
									"server": "10.1.1.1",
									"port": 40000,
									"socks_version": 5,
									"type": "SOCKS"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400-InvalidProxySettingsInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/500-Nocontent"
								},
								"examples": {
									"ProxyServerCanNotConnected": {
										"value": {
											"error-code": 801,
											"message": "The proxy server provided cannot be connected to."
										}
									},
									"AlreadyEnableProxyServer": {
										"value": {
											"error-code": 806,
											"message": "Update proxy failed. Proxy not enabled yet, please set a proxy first."
										}
									},
									"DNSResolveIssue": {
										"value": {
											"error-code": 818,
											"message": "Proxy SOCKS4 does not support DNS resolving, please configure your upstream DNS server."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "v1_system_proxy_patch"
			},
			"delete": {
				"tags": [
					"System proxy settings"
				],
				"summary": "Disable VxRail Manager system proxy settings",
				"description": "Disable VxRail Manager system proxy settings.",
				"requestBody": {
					"description": "Password for Secure Remote Services (SRS)",
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"description": "SRS credentials",
								"type": "object",
								"properties": {
									"esrs_pwd": {
										"description": "SRS password"
									}
								},
								"example": {
									"esrs_pwd": "ESRS_PASSWORD"
								}
							},
							"examples": {
								"Example": {
									"value": {
										"esrs_pwd": "ESRS_PASSWORD"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500-NetworkTimeoutInfo"
					}
				},
				"operationId": "v1_system_proxy_delete"
			}
		},
		"/v1/system/validate-credential": {
			"post": {
				"tags": [
					"System credentials"
				],
				"summary": "Validate the supplied user credentials",
				"description": "Validate the username and password for the specified software components.",
				"requestBody": {
					"description": "Credentials that you input for validation.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"vxrail": {
										"$ref": "#/components/schemas/VxRailCredential"
									},
									"vcenter": {
										"$ref": "#/components/schemas/VcenterCredential"
									},
									"hosts": {
										"description": "Information regarding credentials and serial numbers for the ESXi hosts.",
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/EsxiHostCredential"
										}
									},
									"witness-user": {
										"$ref": "#/components/schemas/WitnessNodeCredential"
									}
								}
							},
							"examples": {
								"Example": {
									"value": {
										"vxrail": {
											"vxm_root_user": {
												"username": "string",
												"password": "string"
											}
										},
										"vcenter": {
											"vc_admin_user": {
												"username": "string",
												"password": "string"
											},
											"vcsa_root_user": {
												"username": "string",
												"password": "string"
											},
											"psc_root_user": {
												"username": "string",
												"password": "string"
											}
										},
										"hosts": [
											{
												"sn": "string",
												"root_user": {
													"username": "string",
													"password": "string"
												}
											}
										],
										"witness-user": {
											"witness_user": {
												"username": "string",
												"password": "string"
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								},
								"example": [
									{
										"error-code": 1016,
										"message": "Invalid credential for root account."
									},
									{
										"error-code": 1017,
										"message": "Account provided is not a root account."
									},
									{
										"error-code": 1018,
										"message": "Invalid credential for ESXi automan account."
									},
									{
										"error-code": 1049,
										"message": "automan verification not supported for external vCenter."
									},
									{
										"error-code": 1050,
										"message": "Not implemented"
									}
								]
							}
						}
					}
				},
				"operationId": "v1_system_validate_credential_post"
			}
		},
		"/v1/system/update-credential": {
			"post": {
				"tags": [
					"System credentials"
				],
				"summary": "Update the management user passwords (v1)",
				"description": "Update management user passwords that are stored in VxRail Manager for the specified ESXi hosts.",
				"requestBody": {
					"description": "The management account information needed for updating passwords",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/AccountCredential"
								}
							},
							"examples": {
								"Example": {
									"value": [
										{
											"component": "esxi",
											"hostname": "exvc113.externalvc.com",
											"username": "string",
											"password": "string"
										}
									]
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/UpdatedManagementAccount"
									}
								},
								"example": [
									{
										"component": "esxi",
										"hostname": "dellb08237-01.externalvc.com",
										"status": "Failed",
										"message": "Failed to update the password in VxRail Manager database."
									}
								]
							}
						}
					}
				},
				"operationId": "v1_system_update-credential_post"
			}
		},
		"/v2/system/update-credential": {
			"post": {
				"tags": [
					"System credentials"
				],
				"summary": "Update the management user passwords (v2)",
				"description": "Update the management user passwords that are stored in VxRail Manager for the vCenter and ESXi hosts.",
				"requestBody": {
					"description": "The management account information needed for updating passwords",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/AccountCredentialV2"
								}
							},
							"examples": {
								"Example": {
									"value": [
										{
											"component": "vc",
											"hostname": "exvc113.externalvc.com",
											"username": "string",
											"password": "string"
										}
									]
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/UpdatedManagementAccount"
									}
								},
								"example": [
									{
										"component": "vc",
										"hostname": "exvc113.externalvc.com",
										"status": "Success"
									},
									{
										"component": "esxi",
										"hostname": "dellb08237-01.externalvc.com",
										"status": "Failed",
										"message": "Failed to update the password in VxRail Manager database."
									}
								]
							}
						}
					}
				},
				"operationId": "v2_system_update-credential_post"
			}
		},
		"/v1/system/prechecks/precheck-service-version": {
			"get": {
				"tags": [
					"System pre-check"
				],
				"summary": "Get the pre-check version",
				"description": "Get the current version of the pre-check service in the VxRail system.",
				"responses": {
					"200": {
						"description": "success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PrecheckVersion"
								},
								"examples": {
									"Example": {
										"value": {
											"version": "1.0.600"
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PrecheckErrorResponse"
								}
							}
						}
					}
				},
				"operationId": "v1_system_prechecks_version_get"
			}
		},
		"/v1/system/prechecks/profiles": {
			"get": {
				"tags": [
					"System pre-check"
				],
				"summary": "List pre-check profiles",
				"description": "Get a list of available pre-check profiles. Each profile represents a different type of pre-check that you can perform.",
				"responses": {
					"200": {
						"description": "success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ProfileInfo"
									}
								},
								"examples": {
									"Example": {
										"value": [
											{
												"profile": "PRE_UPGRADE",
												"description": "This is used to check pre-upgrade issues before performing VxRail System upgrade."
											}
										]
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PrecheckErrorResponse"
								}
							}
						}
					}
				},
				"operationId": "v1_system_prechecks_profiles_get"
			}
		},
		"/v1/system/precheck": {
			"post": {
				"tags": [
					"System pre-check"
				],
				"summary": "Perform a pre-check",
				"description": "Perform a system pre-check.",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PrecheckSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"profile": "PRE_UPGRADE",
										"vxm_root_user": {
											"username": "administrator",
											"password": "password"
										},
										"vc_admin_user": {
											"username": "administrator",
											"password": "password"
										},
										"vc_root_user": {
											"username": "administrator",
											"password": "password"
										},
										"witness_spec": {
											"witness_user": {
												"username": "administrator",
												"password": "password"
											},
											"auto_witness_upgrade": true
										},
										"migration_spec": {
											"temporary_ip_setting": {
												"vc_temporary_ip": "string",
												"vc_temporary_gateway": "string",
												"vc_temporary_netmask": "string"
											}
										},
										"node_list": [
											{
												"sn": "string",
												"version": "string",
												"ip": "string",
												"root_user": "root",
												"root_password": "string"
											}
										]
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "A precheck task is triggered, use /v1/system/prechecks/{id}/result to check the precheck result",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AsyncPrecheckSuccessResponse"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PrecheckErrorResponse"
								}
							}
						}
					}
				},
				"operationId": "v1_system_precheck_post"
			}
		},
		"/v1/system/prechecks/results": {
			"get": {
				"tags": [
					"System pre-check"
				],
				"summary": "Get all pre-check reports",
				"description": "Get a list of pre-check reports, which include the current running status and historical results.",
				"responses": {
					"200": {
						"description": "success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PrecheckReportsInfo"
								},
								"examples": {
									"Example": {
										"value": {
											"report_list": [
												{
													"id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
													"profile": "string",
													"status": "IN-PROGRESS [IN-PROGRESS,COMPLETED]",
													"progress": "50%",
													"total_severity": "OK [OK, WARN, ERROR, CRITICAL]",
													"complete_check_count": 25,
													"total_success_count": 22,
													"total_warn_count": 0,
													"total_error_count": 3,
													"results": {
														"host_checks": [
															{
																"host_id": "c2-esx01",
																"checks": [
																	{
																		"status": "COMPLETED",
																		"check_id": "vcsa_state_check",
																		"start_time": "string",
																		"end_time": "string",
																		"plugin_name": "string",
																		"plugin_version": "1.0.100",
																		"result": {
																			"severity": "OK [OK, WARN, ERROR, CRITICAL]",
																			"messages": [
																				{
																					"id": "VXR304RADAR0003",
																					"kb": "string",
																					"action": "Ensure there are not critical alarms existing on VCSA.",
																					"alphaid": "check_script_failed",
																					"symptom": "There are critical alarms existing on VCSA.",
																					"severity": "Error [Ok, Warn, Error, Critical]"
																				}
																			]
																		}
																	}
																]
															}
														],
														"general_checks": [
															{
																"status": "COMPLETED",
																"check_id": "vcsa_state_check",
																"start_time": "string",
																"end_time": "string",
																"plugin_name": "string",
																"plugin_version": "1.0.100",
																"result": {
																	"severity": "OK [OK, WARN, ERROR, CRITICAL]",
																	"messages": [
																		{
																			"id": "VXR304RADAR0003",
																			"kb": "string",
																			"action": "Ensure there are not critical alarms existing on VCSA.",
																			"alphaid": "check_script_failed",
																			"symptom": "There are critical alarms existing on VCSA.",
																			"severity": "Error [Ok, Warn, Error, Critical]"
																		}
																	]
																}
															}
														]
													}
												}
											]
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PrecheckErrorResponse"
								}
							}
						}
					}
				},
				"operationId": "v1_system_precheck_results_get"
			}
		},
		"/v1/system/prechecks/{id}/result": {
			"get": {
				"tags": [
					"System pre-check"
				],
				"summary": "Get a pre-check result",
				"description": "Get a pre-check result using a specified request ID. Available reports include a status report from a currently running pre-check process or a report from previously run pre-check.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Request ID of the pre-check status that you want to query",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "verbose",
						"in": "query",
						"description": "Whether to return a full or simplified report. The default is true. Set to true to return a full pre -check result report. Set to falsefor a simplified report.",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PrecheckReport"
								},
								"examples": {
									"Example": {
										"value": {
											"id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
											"profile": "string",
											"status": "IN-PROGRESS [IN-PROGRESS,COMPLETED]",
											"progress": "50%",
											"total_severity": "OK [OK, WARN, ERROR, CRITICAL]",
											"complete_check_count": 25,
											"total_success_count": 22,
											"total_warn_count": 0,
											"total_error_count": 3,
											"results": {
												"host_checks": [
													{
														"host_id": "c2-esx01",
														"checks": [
															{
																"status": "COMPLETED",
																"check_id": "vcsa_state_check",
																"start_time": "string",
																"end_time": "string",
																"plugin_name": "string",
																"plugin_version": "1.0.100",
																"result": {
																	"severity": "OK [OK, WARN, ERROR, CRITICAL]",
																	"messages": [
																		{
																			"id": "VXR304RADAR0003",
																			"kb": "string",
																			"action": "Ensure there are not critical alarms existing on VCSA.",
																			"alphaid": "check_script_failed",
																			"symptom": "There are critical alarms existing on VCSA.",
																			"severity": "Error [Ok, Warn, Error, Critical]"
																		}
																	]
																}
															}
														]
													}
												],
												"general_checks": [
													{
														"status": "COMPLETED",
														"check_id": "vcsa_state_check",
														"start_time": "string",
														"end_time": "string",
														"plugin_name": "string",
														"plugin_version": "1.0.100",
														"result": {
															"severity": "OK [OK, WARN, ERROR, CRITICAL]",
															"messages": [
																{
																	"id": "VXR304RADAR0003",
																	"kb": "string",
																	"action": "Ensure there are not critical alarms existing on VCSA.",
																	"alphaid": "check_script_failed",
																	"symptom": "There are critical alarms existing on VCSA.",
																	"severity": "Error [Ok, Warn, Error, Critical]"
																}
															]
														}
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"description": "Unexpected internal server error.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PrecheckErrorResponse"
								}
							}
						}
					}
				},
				"operationId": "v1_system_precheck_results_id_get"
			}
		},
		"/v1/telemetry/tier": {
			"get": {
				"tags": [
					"Telemetry reporting"
				],
				"summary": "Get the telemetry tier",
				"description": "Retrieve the currently set telemetry tier.",
				"operationId": "v1_queryTelemetryTierSettingInformation",
				"responses": {
					"200": {
						"$ref": "#/components/responses/TelemetryTierSettingInfo"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				}
			},
			"post": {
				"tags": [
					"Telemetry reporting"
				],
				"summary": "Set the telemetry tier",
				"description": "Set the telemetry tier.",
				"requestBody": {
					"description": "Level of telemetry tier to be set",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TelemetryTierSetting"
							},
							"example": {
								"level": "LIGHT"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_PostTelemetryTierSettingInformation"
			}
		},
		"/v1/vc/mode": {
			"get": {
				"tags": [
					"vCenter Server mode"
				],
				"summary": "Get the vCenter and Platform Services Controller mode",
				"description": "Get the current vCenter mode and Platform Services Controller (PSC) mode.",
				"responses": {
					"200": {
						"description": "Retrieved vCenter and PSC mode successfully.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClusterModeInfo"
								},
								"examples": {
									"external_vc_embedded_psc_70": {
										"value": {
											"vc_mode": "EXTERNAL",
											"psc_mode": "EMBEDDED"
										}
									},
									"external_vc_psc": {
										"value": {
											"vc_mode": "EXTERNAL",
											"psc_mode": "EXTERNAL"
										}
									},
									"embedded_vc_psc": {
										"value": {
											"vc_mode": "EMBEDDED",
											"psc_mode": "EMBEDDED"
										}
									},
									"Example": {
										"value": {
											"vc_mode": "EMBEDDED",
											"psc_mode": "EMBEDDED"
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_vc_vc_mode_get"
			},
			"patch": {
				"tags": [
					"vCenter Server mode"
				],
				"summary": "Change the vCenter and Platform Services Controller mode",
				"description": "Change the VxRail vCenter or Platform Services Controller (PSC) mode between embedded mode and external mode.",
				"requestBody": {
					"description": "Information needed to update the vCenter or PSC mode to embedded or external.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VcConversionSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"vc_admin_user": {
											"username": "administrator",
											"password": "password"
										},
										"vc_mode": "EXTERNAL",
										"psc_mode": "EMBEDDED"
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "Created the vCenter conversion task successfully.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/202-Nocontent"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "string",
											"error_code": 0,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The request could not be interpreted by the server due to malformed syntax.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/400-Nocontent"
								},
								"example": {
									"message": "The parameter supplied for the vCenter conversion is not correct."
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_vc_vc_mode_patch"
			}
		},
		"/v1/host-folder/hosts/{sn}": {
			"parameters": [
				{
					"schema": {
						"type": "string"
					},
					"name": "sn",
					"in": "path",
					"required": true,
					"description": "serial number of target host"
				}
			],
			"delete": {
				"tags": [
					"Satellite node expansion"
				],
				"summary": "remove a satellite node from the host folder",
				"description": "Satellite node removal. Remove a satellite node from a VxRail-managed folder.",
				"operationId": "removeSatelliteHost",
				"responses": {
					"200": {
						"description": "The request is successful."
					},
					"400": {
						"description": "The request could not be understood by the server due to malformed syntax, e.g., the type of path in URL is not string.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"examples": {}
							}
						}
					},
					"401": {
						"description": "The request requires user authentication, e.g., the authentication is not passed.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "The server understood the request, but is refusing to fulfill it, e.g., the operation is executed with insufficient privilege.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "The request could not be completed due to a conflict with the current state of the target resource, e.g., the API is re-triggered when the process of removal is not finished.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "A general error occurred, e.g., the SN is not exist in DB or lockbox and each step fails during the process of removal.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								},
								"examples": {
									"example-1": {
										"value": {
											"message_code": "string",
											"error_code": 0,
											"message": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/host-folder/expansion": {
			"post": {
				"tags": [
					"Satellite node expansion"
				],
				"summary": "Perform a satellite node expansion",
				"description": "Perform a satellite node expansion based on the provided expansion specification.",
				"requestBody": {
					"description": "Parameters to perform the satellite node expansion.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SatelliteNodeExpansionSpec"
							},
							"examples": {
								"Example": {
									"value": {
										"version": "string",
										"folder_id": "string",
										"hosts": [
											{
												"customer_supplied": {
													"management_ip": "192.168.100.1",
													"current_root_password": "Passw0rd!"
												},
												"hostname": "string",
												"domain_name": "string",
												"accounts": {
													"root": {
														"username": "string",
														"password": "string"
													},
													"management": {
														"username": "string",
														"password": "string"
													}
												},
												"network": [
													{
														"type": "string",
														"ip": "string",
														"netmask": "string",
														"gateway": "string",
														"vlan": 0
													}
												],
												"dns_servers": [
													"string"
												],
												"ntp_servers": [
													"string"
												],
												"syslog_servers": [
													"string"
												],
												"geo_location": {
													"rack_name": "rack1",
													"order_number": 1
												}
											}
										],
										"vcenter": {
											"username": "string",
											"password": "string"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"description": "Successful operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExpansionNodeInfo"
								},
								"examples": {
									"Example": {
										"value": {
											"request_id": "string",
											"error_messages": [
												"string"
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_satellite_node_expansion_post"
			}
		},
		"/v1/host-folder/expansion/cancel": {
			"post": {
				"tags": [
					"Satellite node expansion"
				],
				"summary": "Cancel a failed satellite node expansion",
				"description": "Cancel a failed satellite node expansion.",
				"responses": {
					"200": {
						"$ref": "#/components/responses/200"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_satellite_node_expansion_cancel_post"
			}
		},
		"/v1/lcm/host-folder/upgrade": {
			"post": {
				"tags": [
					"Host folder LCM"
				],
				"summary": "Perform host folder LCM",
				"description": "Perform node upgrade for all eligible satellite nodes in the specific host folder",
				"requestBody": {
					"description": "Parameters to perform host folder LCM.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/HostFolderLCMSpec"
							},
							"examples": {
								"example-stage": {
									"value": {
										"action": "STAGE",
										"host_folder_id": "group-h13",
										"target_version": "8.0.000"
									}
								},
								"example-upgrade": {
									"value": {
										"action": "UPGRADE",
										"host_folder_id": "group-h13",
										"target_version": "8.0.000",
										"control": {
											"failure_rate": 20,
											"concurrent_size": 20
										}
									}
								},
								"Example": {
									"value": {
										"action": "UPGRADE",
										"host_folder_id": "group-h13",
										"target_version": "8.0.000",
										"control": {
											"failure_rate": 20,
											"concurrent_size": 20
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"202": {
						"$ref": "#/components/responses/202"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_lcm_folders_upgrade"
			},
			"parameters": []
		},
		"/v1/system/bandwidth-throttling": {
			"get": {
				"tags": [
					"Bandwidth throttling information"
				],
				"summary": "Get bandwidth throttling information",
				"description": "Get bandwidth throttling information",
				"operationId": "get-v1-system-bandwidth-throttling",
				"security": [
					{
						"basicAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Successfully retrieved bandwidth throttling level.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BandwidthThrottlingInfo"
								},
								"examples": {}
							}
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				}
			},
			"put": {
				"tags": [
					"Bandwidth throttling information"
				],
				"summary": "Update bandwidth throttling information",
				"description": "Update bandwidth throttling information",
				"operationId": "put-v1-system-bandwidth-throttling",
				"responses": {
					"200": {
						"description": "Successfully updated bandwidth throttling level."
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"basicAuth": []
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BandwidthThrottlingInfo"
							},
							"examples": {}
						}
					},
					"description": "Bandwidth throttling level"
				}
			}
		},
		"/v1/system/accounts/management": {
			"get": {
				"tags": [
					"Management account"
				],
				"summary": "Get VC management account and ESXi host management accounts",
				"description": "Synchronize API to get VC management account and ESXi host management accounts.",
				"parameters": [
					{
						"name": "component",
						"in": "query",
						"description": "Component type can be \"ESXI\" or \"VC\".",
						"schema": {
							"type": "string",
							"enum": [
								"ESXI",
								"VC"
							]
						},
						"required": false
					},
					{
						"name": "hostname",
						"in": "query",
						"description": "ESXi host name. If the ESXi host name is not provided, then the hosts for all accounts will be returned.",
						"schema": {
							"type": "string"
						},
						"required": false
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/ManagementAccountV1Info"
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"403": {
						"$ref": "#/components/responses/403"
					},
					"500": {
						"$ref": "#/components/responses/500"
					}
				},
				"operationId": "v1_system_accounts_management_get"
			}
		}
	},
	"components": {
		"schemas": {
			"CallhomeSettingsInfo": {
				"description": "Whether call home mode is muted or unmuted",
				"type": "object",
				"required": [
					"is_muted"
				],
				"properties": {
					"is_muted": {
						"description": "Whether call home mode is muted or unmuted. Supported values are true and false. True indicates that call home is muted.",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"is_muted": true
					}
				}
			},
			"ErrorResponse": {
				"type": "object",
				"x-examples": {
					"Example": {
						"message_code": "string",
						"error_code": 0,
						"message": "string"
					}
				},
				"description": "Error response for unable to call the API during or after installation.",
				"properties": {
					"message_code": {
						"type": "string",
						"description": "Code number for the message"
					},
					"error_code": {
						"type": "integer",
						"format": "int32",
						"description": "Code number for the error"
					},
					"message": {
						"type": "string",
						"description": "Error message"
					}
				},
				"required": [
					"message"
				]
			},
			"CallhomeSettingsSpec": {
				"description": "Sets whether call home mode is muted or unmuted.",
				"type": "object",
				"required": [
					"is_muted"
				],
				"properties": {
					"is_muted": {
						"description": "Whether call home mode is muted or unmuted. Supported values are true and false. True indicates that call home is muted.",
						"type": "boolean",
						"example": false
					}
				},
				"x-examples": {
					"Example": {
						"is_muted": false
					}
				}
			},
			"CallhomeInfo": {
				"description": "Information about the call home servers.",
				"type": "object",
				"required": [
					"status",
					"integrated",
					"site_id"
				],
				"properties": {
					"status": {
						"description": "Status of the SRS server. Supported values are deploying, deployed, registering, and registered.",
						"type": "string"
					},
					"integrated": {
						"description": "Whether the SRS server is integrated (internal) or external",
						"type": "boolean"
					},
					"ip_list": {
						"description": "An array of SRS server addresses with associated information",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Ip"
						}
					},
					"site_id": {
						"description": "Site ID for the SRS server",
						"type": "string"
					}
				}
			},
			"Ip": {
				"description": "Information about the call home servers.",
				"type": "object",
				"required": [
					"ip",
					"primary"
				],
				"properties": {
					"ip": {
						"description": "IP address of the SRS server",
						"type": "string",
						"example": "192.168.106.121"
					},
					"primary": {
						"description": "Whether the SRS server is primary or not",
						"type": "boolean",
						"example": true
					},
					"version": {
						"description": "Version of the SRS",
						"type": "string"
					},
					"upgradeRequestId": {
						"description": "Request ID for internal SRS upgrades only",
						"type": "string"
					}
				}
			},
			"CallhomeInfoV2": {
				"description": "Information about the call home servers.",
				"type": "object",
				"required": [
					"status",
					"integrated",
					"site_id"
				],
				"properties": {
					"status": {
						"description": "Status of the SRS server. Supported values are deploying, deployed, registering, and registered.",
						"type": "string"
					},
					"integrated": {
						"description": "Whether the SRS server is integrated (internal) or external",
						"type": "boolean"
					},
					"address_list": {
						"description": "An array of SRS server addresses with associated information",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Address"
						}
					},
					"site_id": {
						"description": "Site ID for the SRS server",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"status": "string",
						"integrated": true,
						"address_list": [
							{
								"address": "esrs.testdomain",
								"primary": true,
								"version": "string",
								"upgradeRequestId": "string"
							}
						],
						"site_id": "string"
					}
				}
			},
			"Address": {
				"description": "Information about the call home servers.",
				"type": "object",
				"required": [
					"address",
					"primary"
				],
				"properties": {
					"address": {
						"description": "IP address or FQDN of the SRS server",
						"type": "string",
						"example": "esrs.testdomain"
					},
					"primary": {
						"description": "Whether the SRS server is primary or not",
						"type": "boolean",
						"example": true
					},
					"version": {
						"description": "Version of the SRS software",
						"type": "string"
					},
					"upgradeRequestId": {
						"description": "Request ID for internal SRS upgrades only",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"address": "esrs.testdomain",
						"primary": true,
						"version": "string",
						"upgradeRequestId": "string"
					}
				}
			},
			"CallhomeDeploySpec": {
				"description": "Information about the SRS server to be deployed.",
				"type": "object",
				"required": [
					"ip",
					"site_id",
					"first_name",
					"last_name",
					"email",
					"phone",
					"company",
					"admin_pwd",
					"root_pwd"
				],
				"properties": {
					"ip": {
						"description": "IP address for the SRS server",
						"type": "string",
						"example": "10.62.83.114"
					},
					"site_id": {
						"description": "Site ID of the SRS server",
						"type": "string",
						"example": "11145366"
					},
					"first_name": {
						"description": "First name of the support administrator",
						"type": "string",
						"example": "VxRail"
					},
					"last_name": {
						"description": "Last name of the support administrator",
						"type": "string",
						"example": "emc"
					},
					"email": {
						"description": "Email address of the support account",
						"type": "string",
						"example": "vxrail.test@emconlinesupport.com"
					},
					"phone": {
						"description": "Phone number of the support administrator",
						"type": "string",
						"example": "1508435-1000"
					},
					"company": {
						"description": "Company name",
						"type": "string",
						"example": "EMC CORP-PARTNER"
					},
					"root_pwd": {
						"description": "Root password for accessing the SRS server",
						"type": "string",
						"example": "password123!"
					},
					"admin_pwd": {
						"description": "Administrator password for accessing the SRS server",
						"type": "string",
						"format": "password",
						"example": "Testvxrail123!"
					}
				},
				"x-examples": {
					"Example": {
						"ip": "10.62.83.114",
						"site_id": "11145366",
						"first_name": "VxRail",
						"last_name": "emc",
						"email": "vxrail.test@emconlinesupport.com",
						"phone": "1508435-1000",
						"company": "EMC CORP-PARTNER",
						"root_pwd": "password123!",
						"admin_pwd": "Testvxrail123!"
					}
				}
			},
			"CallhomeDeploySpecV2": {
				"description": "Information about the SRS server to be deployed.",
				"type": "object",
				"required": [
					"address",
					"site_id",
					"first_name",
					"last_name",
					"email",
					"phone",
					"company",
					"admin_pwd",
					"root_pwd"
				],
				"properties": {
					"address": {
						"description": "IP address or FQDN for the SRS server",
						"type": "string",
						"example": "esrs.testdomain"
					},
					"site_id": {
						"description": "Site ID of the SRS server",
						"type": "string",
						"example": "11145366"
					},
					"first_name": {
						"description": "First name of the support administrator",
						"type": "string",
						"example": "VxRail"
					},
					"last_name": {
						"description": "Last name of the support administrator",
						"type": "string",
						"example": "emc"
					},
					"email": {
						"description": "Email address of the support account",
						"type": "string",
						"example": "vxrail.test@emconlinesupport.com"
					},
					"phone": {
						"description": "Phone number of the support administrator",
						"type": "string",
						"example": "1508435-1000"
					},
					"company": {
						"description": "Company name",
						"type": "string",
						"example": "EMC CORP-PARTNER"
					},
					"root_pwd": {
						"description": "Root password for accessing the SRS server",
						"type": "string",
						"example": "password123!"
					},
					"admin_pwd": {
						"description": "Administrator password for accessing the SRS server",
						"type": "string",
						"example": "Testvxrail123!"
					}
				},
				"x-examples": {
					"Example": {
						"address": "esrs.testdomain",
						"site_id": "11145366",
						"first_name": "VxRail",
						"last_name": "emc",
						"email": "vxrail.test@emconlinesupport.com",
						"phone": "1508435-1000",
						"company": "EMC CORP-PARTNER",
						"root_pwd": "password123!",
						"admin_pwd": "Testvxrail123!"
					}
				}
			},
			"AccessCodeSpec": {
				"description": "Access code to activate an internal call home server",
				"type": "object",
				"required": [
					"access_code"
				],
				"properties": {
					"access_code": {
						"type": "string",
						"example": "11145366"
					}
				},
				"x-examples": {
					"Example": {
						"access_code": "11145366"
					}
				}
			},
			"ExternalCallhomeRegisterSpec": {
				"description": "Details of request body for register external callHome.",
				"type": "object",
				"required": [
					"site_id",
					"ip_list"
				],
				"properties": {
					"site_id": {
						"description": "Site ID of the SRS server",
						"type": "string",
						"example": "11145366"
					},
					"ip_list": {
						"description": "Array of the IP address for each of the external SRS servers",
						"type": "array",
						"items": {
							"type": "string"
						},
						"example": [
							"192.168.106.121",
							"192.168.106.122"
						]
					},
					"support_username": {
						"description": "Username for the support account. If the support account is not logged in, this parameter is required.",
						"type": "string",
						"example": "vxrail.test@emconlinesupport.com"
					},
					"support_pwd": {
						"description": "Password for the support account. If the support account is not logged in, this parameter is required.",
						"type": "string",
						"example": "password"
					}
				},
				"x-examples": {
					"Example": {
						"site_id": "11145366",
						"ip_list": [
							"192.168.106.121",
							"192.168.106.122"
						],
						"support_username": "vxrail.test@emconlinesupport.com",
						"support_pwd": "password"
					}
				}
			},
			"ExternalCallhomeRegisterSpecV2": {
				"description": "Details of request body for register external callHome.",
				"type": "object",
				"required": [
					"site_id",
					"address_list"
				],
				"properties": {
					"site_id": {
						"description": "Site ID of the SRS server",
						"type": "string",
						"example": "11145366"
					},
					"address_list": {
						"description": "Array of the IP address or FQDN for each of the external SRS servers",
						"type": "array",
						"items": {
							"type": "string"
						},
						"example": [
							"192.168.106.121",
							"esrs.testdomain"
						]
					},
					"support_username": {
						"description": "Username for the support account. If the support account is not logged in, this parameter is required.",
						"type": "string",
						"example": "vxrail.test@emconlinesupport.com"
					},
					"support_pwd": {
						"description": "Password for the support account. If the support account is not logged in, this parameter is required.",
						"type": "string",
						"example": "password"
					}
				},
				"x-examples": {
					"Example": {
						"site_id": "11145366",
						"address_list": [
							"192.168.106.121",
							"esrs.testdomain"
						],
						"support_username": "vxrail.test@emconlinesupport.com",
						"support_pwd": "password"
					}
				}
			},
			"SRSUpgradeSpec": {
				"description": "Credentials for activating a software upgrade on the internal SRS server.",
				"type": "object",
				"required": [
					"admin_pwd",
					"root_pwd"
				],
				"properties": {
					"admin_pwd": {
						"description": "Administrator password for accessing the internal SRS server",
						"type": "string",
						"example": "TestSrs123!"
					},
					"root_pwd": {
						"description": "Root password for accessing the internal SRS server",
						"type": "string",
						"example": "TestSrs123!"
					}
				},
				"x-examples": {
					"Example": {
						"admin_pwd": "TestSrs123!",
						"root_pwd": "TestSrs123!"
					}
				}
			},
			"EnableCallhomeSpec": {
				"type": "object",
				"x-examples": {
					"Example": {
						"serial_number": "11Y40S20000000",
						"pin": "1234",
						"access_key": "7F953DD9",
						"proxy": {
							"protocol": "HTTP",
							"address": "20.1.1.7",
							"port": 8080,
							"user": "vxrail",
							"password": "Testvxrail123!"
						},
						"gateways": [
							{
								"host": "20.11.73.109",
								"port": 9443
							},
							{
								"host": "20.11.73.110",
								"port": 9443
							}
						],
						"customer_contact_infos": [
							{
								"contact_order": 1,
								"first_name": "Rob",
								"last_name": "Gordon",
								"phone_number": "+1 (312) 555-7746",
								"email_address": "rob@championshipvinyl.biz",
								"pref_language": "En"
							}
						],
						"connection_type": "DIRECT"
					}
				},
				"description": "",
				"properties": {
					"serial_number": {
						"type": "string",
						"description": "node serial number for ESE enalement",
						"example": "11Y40S20000000"
					},
					"pin": {
						"type": "string",
						"description": "the PIN code",
						"example": "1234"
					},
					"access_key": {
						"type": "string",
						"description": "access key",
						"example": "7F953DD9"
					},
					"proxy_type": {
						"type": "string",
						"enum": [
							"USER",
							"SYSTEM",
							"NA"
						]
					},
					"proxy": {
						"$ref": "#/components/schemas/CallhomeProxy"
					},
					"gateways": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CallhomeGateway"
						}
					},
					"customer_contact_infos": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CustomerContactInfo"
						}
					},
					"connection_type": {
						"type": "string",
						"enum": [
							"DIRECT",
							"GATEWAY"
						]
					}
				},
				"required": [
					"serial_number",
					"connection_type"
				]
			},
			"CallhomeProxy": {
				"type": "object",
				"required": [
					"protocol",
					"address",
					"port"
				],
				"properties": {
					"protocol": {
						"type": "string",
						"enum": [
							"SOCK5",
							"HTTP",
							"HTTPS"
						],
						"example": "HTTP"
					},
					"address": {
						"type": "string",
						"example": "20.1.1.7"
					},
					"port": {
						"type": "integer",
						"example": 8080
					},
					"user": {
						"type": "string",
						"example": "vxrail"
					},
					"password": {
						"type": "string",
						"example": "Testvxrail123!"
					}
				},
				"x-examples": {
					"Example": {
						"protocol": "HTTP",
						"address": "20.1.1.7",
						"port": 8080,
						"user": "vxrail",
						"password": "Testvxrail123!"
					}
				}
			},
			"CallhomeGateway": {
				"type": "object",
				"required": [
					"host",
					"port"
				],
				"properties": {
					"host": {
						"type": "string",
						"example": "20.1.1.7"
					},
					"port": {
						"type": "integer",
						"example": 9443
					}
				},
				"x-examples": {
					"Example": {
						"address": "20.1.1.7",
						"port": 9443
					}
				}
			},
			"CustomerContactInfo": {
				"type": "object",
				"required": [
					"contact_order"
				],
				"properties": {
					"contact_order": {
						"type": "integer",
						"example": 1
					},
					"first_name": {
						"type": "string",
						"example": "Rob"
					},
					"last_name": {
						"type": "string",
						"example": "Gordon"
					},
					"phone_number": {
						"type": "string",
						"example": "+1 (312) 555-7746"
					},
					"email_address": {
						"type": "string",
						"example": "rob@championshipvinyl.biz"
					},
					"pref_language": {
						"type": "string",
						"enum": [
							"de-DE",
							"en-US",
							"es-ES",
							"fr-FR",
							"ko-KR",
							"ja-JP",
							"zh-CN",
							"zh-TW"
						],
						"example": "en-US"
					}
				},
				"description": "",
				"x-examples": {
					"Example": {
						"contact_order": 1,
						"first_name": "Rob",
						"last_name": "Gordon",
						"phone_number": "+1 (312) 555-7746",
						"email_address": "rob@championshipvinyl.biz",
						"pref_language": "en-US"
					}
				}
			},
			"VxMCertificateSpec": {
				"description": "The content of the certificate, primary key, root certificate, and password.",
				"type": "object",
				"required": [
					"cert",
					"primary_key",
					"root_cert_chain",
					"password"
				],
				"properties": {
					"cert": {
						"description": "The content of the new certificate in PEM format.",
						"type": "string",
						"example": "-----BEGIN CERTIFICATE-----..."
					},
					"primary_key": {
						"description": "The contents of the private key in PEM format. Only an RSA private key is allowed.",
						"type": "string",
						"example": "-----BEGIN ENCRYPTED PRIVATE KEY-----..."
					},
					"root_cert_chain": {
						"description": "Contents of the certificate chain in PEM format. The root CA certificate comes first, followed by the intermediate CA certificates (if any).",
						"type": "string",
						"example": "-----BEGIN CERTIFICATE-----..."
					},
					"password": {
						"description": "The password for the new .pfx file. It is deprecated from 7.0.380 release.",
						"type": "string",
						"example": "testPassword"
					}
				},
				"x-examples": {
					"Example": {
						"cert": "-----BEGIN CERTIFICATE-----...",
						"primary_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----...",
						"root_cert_chain": "-----BEGIN CERTIFICATE-----...",
						"password": "testPassword"
					}
				}
			},
			"VxMCertificateResponse": {
				"description": "Return message when the update is successful",
				"required": [
					"message"
				],
				"properties": {
					"message": {
						"type": "string",
						"description": "The return message when an update is successful.",
						"example": "The certification file was updated successfully. Wait for approximately 5 minutes for the service to reboot."
					}
				},
				"x-examples": {
					"Example": {
						"message": "The certification file was updated successfully. Wait for approximately 5 minutes for the service to reboot."
					}
				}
			},
			"VxMCertificateV2Info": {
				"description": "Return the task ID of the certificate updating task.",
				"type": "object",
				"required": [
					"request_id"
				],
				"properties": {
					"request_id": {
						"type": "string",
						"description": "Task ID of the certificate updating task.",
						"example": "88c72018-7198-4c47-9699-045f82c20ec3"
					}
				},
				"x-examples": {
					"Example": "string"
				}
			},
			"TrustStoreFingerprintsInfo": {
				"description": "Get a fingerprint list of certificate files which are stored in the VxRail Manager trust store.",
				"type": "object",
				"properties": {
					"fingerprint": {
						"type": "array",
						"description": "List of the fingerprint certificates which are stored in the VxRail Manager trust store.",
						"items": {
							"type": "string"
						}
					}
				},
				"x-examples": {
					"Example": [
						{
							"fingerprint": "3F:57:91:F5:04:9A:9E:17:07:72:91:11:A1:61:4C:2A:A8:A0:44:87"
						}
					]
				}
			},
			"CertificateContentInfo": {
				"description": "Get the content of the target certificate (PEM form).",
				"type": "object",
				"properties": {
					"cert": {
						"type": "string",
						"description": "Content of the target certificate according to the fingerprint parameter."
					}
				},
				"x-examples": {
					"Example": {
						"cert": "-----BEGIN CERTIFICATE-----\nMIIEMTCCAxmgAwIBAgIJAPK/2rz8EB+sMA...\n-----END CERTIFICATE-----"
					}
				}
			},
			"CertificateContentSpec": {
				"description": "An array of certificates or CRLs in the PEM format which are imported to the VxRail Manager trust store for the HTTP client.",
				"type": "object",
				"properties": {
					"certs": {
						"type": "array",
						"description": "Certificates or CRL content list to import to the VxRail Manager trust store.",
						"items": {
							"type": "string"
						}
					}
				},
				"x-examples": {
					"Example": [
						{
							"certs": "-----BEGIN CERTIFICATE-----\nMIIEMTCCAxmgAwIBAgIJAPK/2rz8EB+sMA...\n-----END CERTIFICATE-----"
						}
					]
				}
			},
			"VxMCsrSpec": {
				"description": "The VxRail Manager parameters to generate a CSR.",
				"type": "object",
				"properties": {
					"country": {
						"description": "The two letter country code.",
						"type": "string",
						"example": "CN"
					},
					"state": {
						"description": "The state or province name.",
						"type": "string",
						"example": "Shanghai"
					},
					"locality": {
						"description": "The locality name.",
						"type": "string",
						"example": "YangPu"
					},
					"organization": {
						"description": "The organization name.",
						"type": "string",
						"example": "Dell"
					},
					"organization_unit": {
						"description": "The organization unit name.",
						"type": "string",
						"example": "VxRail"
					},
					"common_name": {
						"description": "The common name.",
						"type": "string",
						"example": "dell.vxrail.com"
					},
					"email_address": {
						"description": "The email address.",
						"type": "string",
						"example": "user@test.com"
					},
					"subject_alt_name": {
						"description": "Specify the IP addresses or domains as the alternate names.",
						"type": "array",
						"example": [
							"10.1.2.3",
							"example1.com"
						],
						"items": {}
					}
				},
				"required": [
					"country",
					"locality",
					"organization",
					"organization_unit",
					"common_name"
				]
			},
			"VxMCsrResponse": {
				"description": "Return a Certificate Signing Request.",
				"required": [
					"csr"
				],
				"properties": {
					"csr": {
						"type": "string",
						"description": "The Certificate Signing Request content in PEM format.",
						"example": "-----BEGIN CERTIFICATE REQUEST-----..."
					}
				}
			},
			"VxMCertificateValidateSpec": {
				"description": "Content of the certificate, private key, root certificate, and password.",
				"type": "object",
				"required": [
					"cert",
					"root_cert_chain"
				],
				"properties": {
					"cert": {
						"description": "Content of the new certificate in PEM format. Each line should be followed by an escape character \"\\n\".",
						"type": "string",
						"example": "-----BEGIN *** KEY-----..."
					},
					"root_cert_chain": {
						"description": "Contents of the certificate chain in PEM format. The root CA certificate comes first, followed by the intermediate CA certificates (if any).",
						"type": "array",
						"example": [
							"-----BEGIN CERTIFICATE-----...",
							"-----BEGIN CERTIFICATE-----..."
						]
					},
					"private_key": {
						"description": "Contents of the private key in PEM format. Only an RSA private key is allowed. The private key can be omitted if the provided certificate is issued based on the CSR generated by /v1/certificates/csr.",
						"type": "string",
						"example": "-----BEGIN *** KEY-----..."
					},
					"password": {
						"deprecated": true,
						"description": "Password for the new .pfx file.",
						"type": "string",
						"example": "testPassword"
					}
				},
				"x-examples": {
					"Example": {
						"cert": "-----BEGIN CERTIFICATE-----...",
						"root_cert_chain": [
							"-----BEGIN CERTIFICATE-----...",
							"-----BEGIN CERTIFICATE-----..."
						],
						"private_key": "-----BEGIN *** KEY-----...",
						"password": "testPassword"
					}
				}
			},
			"VxMCertificateV3Spec": {
				"description": "Content of the certificate, primary key, root certificate, and password.",
				"type": "object",
				"x-examples": {
					"Example": {
						"cert": "-----BEGIN CERTIFICATE-----...",
						"root_cert_chain": [
							"-----BEGIN CERTIFICATE-----...",
							"-----BEGIN CERTIFICATE-----..."
						],
						"private_key": "-----BEGIN *** KEY-----...",
						"password": "testPassword",
						"vc_admin_account": "administrator@vsphere.local",
						"vc_admin_password": "testPassword"
					}
				},
				"properties": {
					"vc_admin_account": {
						"description": "VC administrator account for invoke VC API to send the new root cert to VC trust store.",
						"type": "string",
						"example": "administrator@vsphere.local"
					},
					"vc_admin_password": {
						"description": "VC administrator password for invoke VC API to send the new root cert to VC trust store.",
						"type": "string",
						"example": "password"
					},
					"cert": {
						"description": "Content of the new certificate in PEM format. Each line should be followed by an escape character \"\\n\".",
						"type": "string",
						"example": "-----BEGIN *** KEY-----..."
					},
					"root_cert_chain": {
						"description": "Contents of the certificate chain in PEM format. The root CA certificate comes first, followed by the intermediate CA certificates (if any).",
						"type": "array",
						"example": [
							"-----BEGIN CERTIFICATE-----...",
							"-----BEGIN CERTIFICATE-----..."
						],
						"items": {}
					},
					"private_key": {
						"description": "Contents of the private key in PEM format. Only an RSA private key is allowed. The private key can be omitted if the provided certificate is issued based on the CSR generated by /v1/certificates/csr.",
						"type": "string",
						"example": "-----BEGIN *** KEY-----..."
					},
					"password": {
						"deprecated": true,
						"description": "Password for the new .pfx file.",
						"type": "string",
						"example": "testPassword"
					}
				},
				"required": [
					"vc_admin_account",
					"vc_admin_password",
					"cert",
					"root_cert_chain"
				]
			},
			"ScepConfigPostSpec": {
				"description": "Automated renewal configurations",
				"type": "object",
				"required": [
					"caserver_url",
					"challenge_password",
					"scep_on",
					"scep_renewal_interval_in_minutes",
					"scep_days_before_expire"
				],
				"properties": {
					"caserver_url": {
						"description": "Certificate Authority server URL",
						"type": "string"
					},
					"challenge_password": {
						"description": "Challenge password",
						"type": "string"
					},
					"scep_on": {
						"description": "Enable or disable the automated renewal",
						"type": "boolean"
					},
					"scep_renewal_interval_in_minutes": {
						"description": "Certificate validation frequency in minutes. Valid range is 60 - 1440 minutes",
						"type": "integer"
					},
					"scep_days_before_expire": {
						"description": "Renew certificate before expiration. Valid range is 14 - 60 days",
						"type": "integer"
					}
				}
			},
			"ScepConfigResponse": {
				"description": "Operation status and automated renewal configurations",
				"type": "object",
				"properties": {
					"scep_enabled": {
						"description": "Whether the automated renewal is enabled or not",
						"type": "boolean"
					},
					"error_code": {
						"description": "Error code of the operation",
						"type": "integer",
						"nullable": true
					},
					"error_message": {
						"description": "Error message of the operation",
						"type": "string",
						"nullable": true
					},
					"caserver_url": {
						"description": "Certificate Authority server URL",
						"type": "string"
					},
					"scep_on": {
						"description": "Whether the automated renewal is enabled or not",
						"type": "boolean",
						"example": true
					},
					"scep_renewal_interval_in_minutes": {
						"description": "Certificate validation frequency",
						"type": "integer"
					},
					"scep_days_before_expire": {
						"description": "Days to renew the certificate before expiration",
						"type": "integer"
					}
				},
				"required": [
					"scep_enabled",
					"error_code",
					"error_message",
					"caserver_url",
					"scep_on",
					"scep_renewal_interval_in_minutes",
					"scep_days_before_expire"
				]
			},
			"ScepStatusGetResponse": {
				"description": "Automated renewal status",
				"type": "object",
				"required": [
					"vxm_cert_expire_time",
					"last_failure_time",
					"last_error_msg",
					"last_result",
					"last_run_time",
					"last_success_time",
					"scep_enabled"
				],
				"properties": {
					"vxm_cert_expire_time": {
						"description": "Expiration time of the VxRail Manager TLS Certificate",
						"type": "string"
					},
					"last_failure_time": {
						"description": "Last failure time of the automated renewal",
						"type": "string"
					},
					"last_error_msg": {
						"description": "The error message of last failure of the automated renewal",
						"type": "string"
					},
					"last_result": {
						"description": "The status of last automated renewal",
						"type": "string",
						"enum": [
							"SUCCESS",
							"FAILURE",
							"VXM_CERT_IS_YOUNG"
						]
					},
					"last_run_time": {
						"description": "Last run time of the automated renewal",
						"type": "string"
					},
					"last_success_time": {
						"description": "Last success time of the automated renewal",
						"type": "string"
					},
					"scep_enabled": {
						"description": "The automated renewal is enabled or not",
						"type": "boolean"
					}
				}
			},
			"ChassisInfo": {
				"description": "Information about the chassis",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the chassis",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the chassis",
						"type": "string"
					},
					"part_number": {
						"description": "Part number of the chassis",
						"type": "string"
					},
					"description": {
						"description": "Short description of the chassis",
						"type": "string"
					},
					"service_tag": {
						"description": "Service tag number of the chassis",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the chassis",
						"type": "string"
					},
					"model": {
						"description": "Model type of the chassis",
						"type": "string"
					},
					"render_category": {
						"description": "Dell render category of the chassis",
						"type": "string"
					},
					"generation": {
						"description": "VxRail generation of the chassis",
						"type": "integer"
					},
					"health": {
						"description": "Health status of the VxRail system",
						"type": "string",
						"enum": [
							"Critical",
							"Error",
							"Warning",
							"Healthy"
						]
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"hosts": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HostBasicInfo"
						}
					},
					"power_supplies": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PowerSupplyInfo"
						}
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "string",
						"part_number": "string",
						"description": "string",
						"service_tag": "string",
						"psnt": "string",
						"model": "string",
						"render_category": "string",
						"generation": 0,
						"health": "Critical",
						"missing": true,
						"hosts": [
							{
								"id": "string",
								"sn": "string",
								"slot": 0,
								"hostname": "string",
								"name": "string",
								"manufacturer": "string",
								"psnt": "string",
								"led_status": "string",
								"health": "string",
								"missing": true,
								"tpm_present": true,
								"operational_status": "string",
								"power_status": "string"
							}
						],
						"power_supplies": [
							{
								"sn": "string",
								"part_number": "string",
								"revision_number": "string",
								"name": "string",
								"manufacturer": "string",
								"slot": 0,
								"health": "string",
								"missing": true
							}
						]
					}
				}
			},
			"HostBasicInfo": {
				"description": "Information about the host",
				"properties": {
					"id": {
						"description": "ID of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Hostname of the host",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "PSNT of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the host",
						"type": "string"
					},
					"missing": {
						"description": "Whether the host health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host",
						"type": "string"
					}
				}
			},
			"PowerSupplyInfo": {
				"description": "Information about the chassis power supplies",
				"properties": {
					"sn": {
						"description": "Serial number of the power supply",
						"type": "string"
					},
					"part_number": {
						"description": "Part number of the power supply",
						"type": "string"
					},
					"revision_number": {
						"description": "Revision number of the power supply",
						"type": "string"
					},
					"name": {
						"description": "Name of the power supply",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the power supply",
						"type": "string"
					},
					"slot": {
						"description": "Slot position of the power supply",
						"type": "integer"
					},
					"health": {
						"description": "Health status of the power supply. Supported values are Critical, Error, Warning, and Healthy.",
						"type": "string"
					},
					"missing": {
						"description": "Whether the power supply health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"sn": "string",
						"part_number": "string",
						"revision_number": "string",
						"name": "string",
						"manufacturer": "string",
						"slot": 0,
						"health": "string",
						"missing": true
					}
				}
			},
			"ChassisInfoV2": {
				"description": "Information about the chassis",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the chassis",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the chassis",
						"type": "string"
					},
					"part_number": {
						"description": "Part number of the chassis",
						"type": "string"
					},
					"description": {
						"description": "Short description of the chassis",
						"type": "string"
					},
					"service_tag": {
						"description": "Service tag number of the chassis",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the chassis",
						"type": "string"
					},
					"model": {
						"description": "Model type of the chassis",
						"type": "string"
					},
					"render_category": {
						"description": "Dell render category of the chassis",
						"type": "string"
					},
					"generation": {
						"description": "VxRail generation of the chassis",
						"type": "integer"
					},
					"health": {
						"description": "Health status of the VxRail system",
						"type": "string",
						"enum": [
							"Critical",
							"Error",
							"Warning",
							"Healthy"
						]
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"hosts": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HostBasicInfoV2"
						}
					},
					"power_supplies": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PowerSupplyInfo"
						}
					},
					"bay": {
						"description": "Whether the chassis has a bay or not",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "string",
						"part_number": "string",
						"description": "string",
						"service_tag": "string",
						"psnt": "string",
						"model": "string",
						"render_category": "string",
						"generation": 0,
						"health": "Critical",
						"missing": true,
						"hosts": [
							{
								"id": "string",
								"sn": "string",
								"slot": 0,
								"hostname": "string",
								"name": "string",
								"manufacturer": "string",
								"psnt": "string",
								"led_status": "string",
								"health": "string",
								"missing": true,
								"tpm_present": true,
								"operational_status": "string",
								"power_status": "string",
								"geo_location": {
									"rack_name": "rack1",
									"order_number": 1
								}
							}
						],
						"power_supplies": [
							{
								"sn": "string",
								"part_number": "string",
								"revision_number": "string",
								"name": "string",
								"manufacturer": "string",
								"slot": 0,
								"health": "string",
								"missing": true
							}
						],
						"bay": true
					}
				}
			},
			"HostBasicInfoV2": {
				"description": "Information about the VxRail host",
				"properties": {
					"id": {
						"description": "ID of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Hostname of the host",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "PSNT of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the host",
						"type": "string"
					},
					"missing": {
						"description": "Whether the host health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host",
						"type": "string"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					}
				}
			},
			"GeoLocation": {
				"description": "Information about the geographical location of the host",
				"type": "object",
				"properties": {
					"rack_name": {
						"description": "Rack name where the host is located",
						"type": "string",
						"example": "rack1"
					},
					"order_number": {
						"description": "Order number of the host",
						"type": "integer",
						"example": 1
					}
				},
				"x-examples": {
					"Example": {
						"rack_name": "rack1",
						"order_number": 1
					}
				}
			},
			"ChassisInfoV3": {
				"description": "Information about the chassis",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID of the chassis",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the chassis",
						"type": "string"
					},
					"part_number": {
						"description": "Part number of the chassis",
						"type": "string"
					},
					"description": {
						"description": "Chassis description",
						"type": "string"
					},
					"service_tag": {
						"description": "Service tag of the chassis",
						"type": "string"
					},
					"psnt": {
						"description": "PSNT of the chassis",
						"type": "string"
					},
					"model": {
						"description": "Model of the chassis",
						"type": "string"
					},
					"render_category": {
						"description": "Dell render category of the chassis",
						"type": "string"
					},
					"generation": {
						"description": "VxRail generation of the chassis",
						"type": "integer"
					},
					"health": {
						"description": "Health status of the chassis",
						"type": "string",
						"enum": [
							"Critical",
							"Error",
							"Warning",
							"Healthy"
						]
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"hosts": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HostBasicInfoV3"
						}
					},
					"power_supplies": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PowerSupplyInfo"
						}
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "string",
						"part_number": "string",
						"description": "string",
						"service_tag": "string",
						"psnt": "string",
						"model": "string",
						"render_category": "string",
						"generation": 0,
						"health": "Critical",
						"missing": true,
						"hosts": [
							{
								"id": "string",
								"sn": "string",
								"slot": 0,
								"hostname": "string",
								"name": "string",
								"manufacturer": "string",
								"psnt": "string",
								"led_status": "string",
								"health": "string",
								"missing": true,
								"tpm_present": true,
								"operational_status": "string",
								"power_status": "string",
								"firmwareInfo": {
									"bios_revision": "string",
									"bmc_revision": "string",
									"hba_version": "string",
									"expander_bpf_version": "string",
									"nonexpander_bpf_version": "string",
									"boss_version": "string",
									"cpld_version": "string"
								},
								"geo_location": {
									"rack_name": "rack1",
									"order_number": 1
								}
							}
						],
						"power_supplies": [
							{
								"sn": "string",
								"part_number": "string",
								"revision_number": "string",
								"name": "string",
								"manufacturer": "string",
								"slot": 0,
								"health": "string",
								"missing": true
							}
						]
					}
				}
			},
			"HostBasicInfoV3": {
				"description": "Basic information about the host.",
				"properties": {
					"id": {
						"description": "ID of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Hostname of the host",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "PSNT of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the host",
						"type": "string"
					},
					"missing": {
						"description": "Whether the host health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power status of the host",
						"type": "string"
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfo"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					}
				}
			},
			"FirmwareInfo": {
				"description": "Node firmware information",
				"properties": {
					"bios_revision": {
						"description": "Version of the BIOS firmware",
						"type": "string"
					},
					"bmc_revision": {
						"description": "Version of the baseboard management controller (BMC)",
						"type": "string"
					},
					"hba_version": {
						"description": "Version of the host bus adapter (HBA) firmware",
						"type": "string"
					},
					"expander_bpf_version": {
						"description": "Version of the expander backplane firmware",
						"type": "string"
					},
					"nonexpander_bpf_version": {
						"description": "Version of the non-expander storage backplane firmware",
						"type": "string"
					},
					"boss_version": {
						"description": "BOSS firmware version",
						"type": "string"
					},
					"cpld_version": {
						"description": "Version of the complex logical device (CPLD) firmware",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"bios_revision": "string",
						"bmc_revision": "string",
						"hba_version": "string",
						"expander_bpf_version": "string",
						"nonexpander_bpf_version": "string",
						"boss_version": "string",
						"cpld_version": "string"
					}
				}
			},
			"ChassisInfoV4": {
				"description": "Information about the chassis",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID of the chassis",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the chassis",
						"type": "string"
					},
					"part_number": {
						"description": "Part number of the chassis",
						"type": "string"
					},
					"description": {
						"description": "Chassis description",
						"type": "string"
					},
					"service_tag": {
						"description": "Service tag of the chassis",
						"type": "string"
					},
					"psnt": {
						"description": "PSNT of the chassis",
						"type": "string"
					},
					"model": {
						"description": "Model of the chassis",
						"type": "string"
					},
					"render_category": {
						"description": "Dell render category of the chassis",
						"type": "string"
					},
					"generation": {
						"description": "VxRail generation of the chassis",
						"type": "integer"
					},
					"health": {
						"description": "Health status of the chassis",
						"type": "string",
						"enum": [
							"Critical",
							"Error",
							"Warning",
							"Healthy"
						]
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"hosts": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HostBasicInfoV4"
						}
					},
					"power_supplies": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PowerSupplyInfo"
						}
					},
					"bay": {
						"description": "Whether the chassis has a bay or not",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "string",
						"part_number": "string",
						"description": "string",
						"service_tag": "string",
						"psnt": "string",
						"model": "string",
						"render_category": "string",
						"generation": 0,
						"health": "Critical",
						"missing": true,
						"hosts": [
							{
								"id": "string",
								"sn": "string",
								"type": "CLUSTER",
								"slot": 0,
								"hostname": "string",
								"name": "string",
								"manufacturer": "string",
								"psnt": "string",
								"led_status": "string",
								"health": "string",
								"missing": true,
								"tpm_present": true,
								"operational_status": "string",
								"power_status": "string",
								"firmwareInfo": {
									"bios_revision": "string",
									"bmc_revision": "string",
									"hba_version": "string",
									"expander_bpf_version": "string",
									"nonexpander_bpf_version": "string",
									"boss_version": "string",
									"cpld_version": "string",
									"idsdm_version": "string",
									"dcpm_version": "string",
									"perc_version": "string"
								},
								"geo_location": {
									"rack_name": "rack1",
									"order_number": 1
								}
							}
						],
						"power_supplies": [
							{
								"sn": "string",
								"part_number": "string",
								"revision_number": "string",
								"name": "string",
								"manufacturer": "string",
								"slot": 0,
								"health": "string",
								"missing": true
							}
						],
						"bay": false
					}
				}
			},
			"ChassisInfoV5": {
				"description": "Information about the chassis",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID of the chassis",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the chassis",
						"type": "string"
					},
					"part_number": {
						"description": "Part number of the chassis",
						"type": "string",
						"enum": [
							"CLUSTER",
							"SATELLITE"
						],
						"example": "CLUSTER"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Indicates the hostname"
					},
					"description": {
						"description": "Chassis description",
						"type": "string"
					},
					"service_tag": {
						"description": "Service tag of the chassis",
						"type": "string"
					},
					"firmware_version": {
						"description": "Firmware version of the chassis",
						"type": "string"
					},
					"psnt": {
						"description": "PSNT of the chassis",
						"type": "string"
					},
					"moid": {
						"description": "MOID of the chassis",
						"type": "string"
					},
					"model": {
						"description": "Model of the chassis",
						"type": "string"
					},
					"render_category": {
						"description": "Dell render category of the chassis",
						"type": "string"
					},
					"generation": {
						"description": "VxRail generation of the chassis",
						"type": "integer"
					},
					"health": {
						"description": "Health status of the chassis",
						"type": "string",
						"enum": [
							"Critical",
							"Error",
							"Warning",
							"Healthy"
						]
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"hosts": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HostBasicInfoV5"
						}
					},
					"witness": {
						"description": "Witness information of the chassis.",
						"items": {
							"$ref": "#/components/schemas/WitnessBasicInfoV1"
						}
					},
					"power_supplies": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PowerSupplyInfo"
						}
					},
					"chassis_manager_fw_version": {
						"description": "Firmware version of the chassis manager.",
						"type": "string"
					},
					"bay": {
						"description": "Whether the chassis has a bay or not",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "string",
						"part_number": "string",
						"description": "string",
						"service_tag": "string",
						"psnt": "string",
						"moid": "string",
						"model": "string",
						"render_category": "string",
						"generation": 0,
						"health": "Critical",
						"missing": true,
						"hosts": [
							{
								"id": "string",
								"sn": "string",
								"type": "CLUSTER",
								"slot": 0,
								"hostname": "string",
								"name": "string",
								"manufacturer": "string",
								"psnt": "string",
								"led_status": "string",
								"health": "string",
								"missing": true,
								"tpm_present": true,
								"operational_status": "string",
								"power_status": "string",
								"firmwareInfo": {
									"bios_revision": "string",
									"bmc_revision": "string",
									"hba_version": "string",
									"expander_bpf_version": "string",
									"nonexpander_bpf_version": "string",
									"boss_version": "string",
									"cpld_version": "string",
									"idsdm_version": "string",
									"dcpm_version": "string",
									"perc_version": "string"
								},
								"geo_location": {
									"rack_name": "rack1",
									"order_number": 1
								},
								"render_category": "string"
							}
						],
						"witness": {
							"sn": "string",
							"psnt": "string",
							"moid": "string",
							"hostname": "string",
							"os_version": "string",
							"bios_version": "string",
							"cpu": "string",
							"power_status": "string",
							"memory": "string",
							"witness_management": "string",
							"boot_devices": [
								{
									"id": "string",
									"sn": "PHYH013201XX480K",
									"device_model": "SSDSCJJB480G8R",
									"sata_type": "string",
									"power_on_hours": 1,
									"power_cycle_count": 1,
									"max_erase_count": 1,
									"avr_erase_count": 1,
									"capacity": "480103981056",
									"health": "string",
									"firmware_version": "2.5.13.4008",
									"bootdevice_type": "string",
									"block_size": "512",
									"slot": 1,
									"status": "NORMAL",
									"part_number": "TW07FXC3PIHiT0440",
									"manufacturer": "INTEL",
									"controller_firmware": "2.5.13.4008",
									"controller_model": "BOSS-S2",
									"controller_status": "NORMAL"
								}
							],
							"nics": [
								{
									"id": "string",
									"type": "string",
									"mac": "string",
									"link_status": "string",
									"link_speed": "string",
									"slot": 0,
									"port": 0,
									"firmware_family_version": "string",
									"drivers": [
										{
											"driver_name": "string",
											"driver_version": "string"
										}
									]
								}
							],
							"disks": [
								{
									"id": "string",
									"sn": "string",
									"guid": "string",
									"manufacturer": "string",
									"model": "string",
									"disk_type": "string",
									"protocol": "string",
									"max_capable_speed": "string",
									"enclosure": 0,
									"bay": 0,
									"slot": 0,
									"disk_state": "string",
									"led_status": "string",
									"missing": true,
									"capacity": "string",
									"write_endurance": "string",
									"write_endurance_status": "string",
									"remaining_write_endurance_rate": "string",
									"firmware_revision": "string",
									"disk_claim_type": "non-vSAN",
									"encryption_ability": {
										"key": "SELF_ENCRYPTING_DRIVE",
										"value": "SelfEncryptingDrive"
									},
									"encryption_status": {
										"key": "UNLOCKED",
										"value": "Unlocked"
									}
								}
							]
						},
						"power_supplies": [
							{
								"sn": "string",
								"part_number": "string",
								"revision_number": "string",
								"name": "string",
								"manufacturer": "string",
								"slot": 0,
								"health": "string",
								"missing": true
							}
						],
						"bay": false
					}
				}
			},
			"WitnessBasicInfoV1": {
				"description": "Information about the witness node.",
				"properties": {
					"sn": {
						"description": "Serial number of the witness.",
						"type": "string"
					},
					"psnt": {
						"description": "PSNT of the witness",
						"type": "string"
					},
					"moid": {
						"description": "Moid of the witness",
						"type": "string"
					},
					"hostname": {
						"description": "Host name of the witness",
						"type": "string"
					},
					"os_version": {
						"description": "Operation system version of the witness",
						"type": "string"
					},
					"bios_version": {
						"description": "BIOS firmware version of the witness",
						"type": "string"
					},
					"cpu": {
						"description": "CPU information of the witness",
						"type": "string"
					},
					"power_status": {
						"description": "Power status of the witness",
						"type": "string"
					},
					"memory": {
						"description": "Memory of the witness",
						"type": "string"
					},
					"witness_management": {
						"description": "Witness manager firmware version of the witness",
						"type": "string"
					},
					"boot_devices": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BootDeviceV3"
						}
					},
					"nics": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NicV2"
						}
					},
					"disks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DiskInfoV2"
						}
					}
				},
				"x-examples": {
					"Example": {
						"service_tag": "string",
						"psnt": "string",
						"os_version": "string",
						"bios_version": "string",
						"cpu": "string",
						"cpu_health": "string",
						"memory": "string",
						"witness_management": "string",
						"boot_devices": [
							{
								"id": "string",
								"sn": "PHYH013201XX480K",
								"device_model": "SSDSCJJB480G8R",
								"sata_type": "string",
								"power_on_hours": 1,
								"power_cycle_count": 1,
								"max_erase_count": 1,
								"avr_erase_count": 1,
								"capacity": "480103981056",
								"health": "string",
								"firmware_version": "2.5.13.4008",
								"bootdevice_type": "string",
								"block_size": "512",
								"slot": 1,
								"status": "NORMAL",
								"part_number": "TW07FXC3PIHiT0440",
								"manufacturer": "INTEL",
								"controller_firmware": "2.5.13.4008",
								"controller_model": "BOSS-S2",
								"controller_status": "NORMAL"
							}
						],
						"nics": [
							{
								"id": "string",
								"type": "string",
								"mac": "string",
								"link_status": "string",
								"link_speed": "string",
								"slot": 0,
								"port": 0,
								"firmware_family_version": "string",
								"drivers": [
									{
										"driver_name": "string",
										"driver_version": "string"
									}
								]
							}
						],
						"disks": [
							{
								"id": "string",
								"sn": "string",
								"guid": "string",
								"manufacturer": "string",
								"model": "string",
								"disk_type": "string",
								"protocol": "string",
								"max_capable_speed": "string",
								"enclosure": 0,
								"bay": 0,
								"slot": 0,
								"disk_state": "string",
								"led_status": "string",
								"missing": true,
								"capacity": "string",
								"write_endurance": "string",
								"write_endurance_status": "string",
								"remaining_write_endurance_rate": "string",
								"firmware_revision": "string",
								"disk_claim_type": "non-vSAN",
								"encryption_ability": {
									"key": "SELF_ENCRYPTING_DRIVE",
									"value": "SelfEncryptingDrive"
								},
								"encryption_status": {
									"key": "UNLOCKED",
									"value": "Unlocked"
								}
							}
						]
					}
				}
			},
			"HostBasicInfoV4": {
				"description": "Basic information about the host.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string"
					},
					"type": {
						"description": "Node type",
						"type": "string",
						"enum": [
							"CLUSTER",
							"SATELLITE"
						],
						"example": "CLUSTER"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Indicates the hostname",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "PSNT of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the host",
						"type": "string"
					},
					"missing": {
						"description": "Whether the host health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power status of the host",
						"type": "string"
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfoV3"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					}
				}
			},
			"HostBasicInfoV5": {
				"description": "Infomation about the host (add a new field render_category)",
				"properties": {
					"id": {
						"description": "ID of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string"
					},
					"type": {
						"description": "Node type",
						"type": "string",
						"enum": [
							"CLUSTER",
							"SATELLITE"
						],
						"example": "CLUSTER"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Indicates the hostname",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "PSNT of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the host",
						"type": "string"
					},
					"missing": {
						"description": "Whether the host health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power status of the host",
						"type": "string"
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfoV3"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					},
					"render_category": {
						"description": "Render category of the host",
						"type": "string"
					}
				}
			},
			"FirmwareInfoV2": {
				"description": "Node firmware information",
				"properties": {
					"bios_revision": {
						"description": "Version of the BIOS firmware",
						"type": "string"
					},
					"bmc_revision": {
						"description": "Version of the baseboard management controller (BMC)",
						"type": "string"
					},
					"hba_version": {
						"description": "Version of the host bus adapter (HBA) firmware",
						"type": "string"
					},
					"expander_bpf_version": {
						"description": "Version of the expander backplane firmware",
						"type": "string"
					},
					"nonexpander_bpf_version": {
						"description": "Version of the non-expander storage backplane firmware",
						"type": "string"
					},
					"boss_version": {
						"description": "BOSS firmware version",
						"type": "string"
					},
					"cpld_version": {
						"description": "Version of the complex logical device (CPLD) firmware",
						"type": "string"
					},
					"idsdm_version": {
						"description": "Version of the IDSDM firmware",
						"type": "string"
					},
					"dcpm_version": {
						"description": "Version of the DC Persistent Memory (DCPM) firmware",
						"type": "string"
					}
				}
			},
			"ClusterInfo": {
				"description": "Information about the cluster and the appliances in the cluster",
				"type": "object",
				"properties": {
					"cluster_id": {
						"description": "The UUID of the VxRail cluster",
						"type": "string"
					},
					"product_type": {
						"description": "Product type of the host",
						"type": "string"
					},
					"device_type": {
						"description": "Device type of the host",
						"type": "string"
					},
					"vc_connected": {
						"description": "Whether the vCenter is connected",
						"type": "boolean",
						"example": true
					},
					"health": {
						"description": "Status of the health of the cluster. Supported values are Critical, Error, Warning, and Healthy.",
						"type": "string"
					},
					"operational_status": {
						"description": "Operational status information",
						"type": "string"
					},
					"chassises": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ChassisBasicInfo"
						}
					},
					"suppressed": {
						"description": "Whether under suppression mode or not",
						"type": "boolean"
					},
					"last_time": {
						"description": "The last time the cluster was updated",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"cluster_id": "string",
						"product_type": "string",
						"device_type": "string",
						"vc_connected": true,
						"health": "string",
						"operational_status": "string",
						"chassises": [
							{
								"id": "string",
								"psnt": "string",
								"model": "string",
								"render_category": "string",
								"generation": 0,
								"health": "string",
								"missing": true
							}
						],
						"suppressed": true,
						"last_time": "string"
					}
				}
			},
			"ClusterInfoV2": {
				"description": "Information about the cluster and the appliances in the cluster",
				"type": "object",
				"properties": {
					"cluster_id": {
						"description": "The UUID of the VxRail cluster",
						"type": "string"
					},
					"product_type": {
						"description": "Product type of the host",
						"type": "string"
					},
					"device_type": {
						"description": "Device type of the host",
						"type": "string"
					},
					"vc_connected": {
						"description": "Whether the vCenter is connected",
						"type": "boolean",
						"example": true
					},
					"health": {
						"description": "Status of the health of the cluster. Supported values are Critical, Error, Warning, and Healthy.",
						"type": "string"
					},
					"operational_status": {
						"description": "Operational status information",
						"type": "string"
					},
					"chassis": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ChassisBasicInfo"
						}
					},
					"suppressed": {
						"description": "Whether under suppression mode or not",
						"type": "boolean"
					},
					"last_time": {
						"description": "The last time the cluster was updated",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"cluster_id": "string",
						"product_type": "string",
						"device_type": "string",
						"vc_connected": true,
						"health": "string",
						"operational_status": "string",
						"chassis": [
							{
								"id": "string",
								"psnt": "string",
								"model": "string",
								"render_category": "string",
								"generation": 0,
								"health": "string",
								"missing": true
							}
						],
						"suppressed": true,
						"last_time": "string"
					}
				}
			},
			"ChassisBasicInfo": {
				"description": "Information about a chassis",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID of the chassis",
						"type": "string"
					},
					"psnt": {
						"description": "PSNT of the chassis",
						"type": "string"
					},
					"model": {
						"description": "Model of the chassis",
						"type": "string"
					},
					"render_category": {
						"description": "The chassis render category",
						"type": "string"
					},
					"generation": {
						"description": "Generation of the chassis",
						"type": "integer"
					},
					"health": {
						"description": "Status of the health of the chassis. Supported values are Critical, Error, Warning, and Healthy.",
						"type": "string"
					},
					"missing": {
						"description": "Whether the host health status is critical. Supported values are false (not critical) and true (critical).",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"psnt": "string",
						"model": "string",
						"render_category": "string",
						"generation": 0,
						"health": "string",
						"missing": true
					}
				}
			},
			"SystemVMInfo": {
				"description": "Information about the virtual machines installed in the VxRail cluster",
				"type": "object",
				"required": [
					"name",
					"status",
					"host"
				],
				"properties": {
					"name": {
						"description": "Name of the virtual machine",
						"type": "string"
					},
					"status": {
						"description": "Status of the virtual machine",
						"type": "string",
						"enum": [
							"POWERED_ON",
							"POWERED_OFF"
						]
					},
					"host": {
						"description": "Host FQDN system for the virtual machine",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"name": "string",
						"status": "POWERED_ON",
						"host": "string"
					}
				}
			},
			"RemoveHostSpec": {
				"description": "Serial number, credentials for the vCenter administrator, and credentials for the vCenter Server Appliance that are required to remove the host",
				"type": "object",
				"required": [
					"serial_number",
					"vc_admin_user",
					"vcsa_root_user"
				],
				"properties": {
					"serial_number": {
						"description": "Serial number of the host to be removed",
						"type": "string",
						"example": "EMCVB150600030"
					},
					"vc_admin_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"vcsa_root_user": {
						"$ref": "#/components/schemas/UserSpec"
					}
				},
				"x-examples": {
					"Example": {
						"serial_number": "EMCVB150600030",
						"vc_admin_user": {
							"username": "administrator",
							"password": "password"
						},
						"vcsa_root_user": {
							"username": "administrator",
							"password": "password"
						}
					}
				}
			},
			"UserSpec": {
				"description": "User account credentials",
				"type": "object",
				"required": [
					"username",
					"password"
				],
				"properties": {
					"username": {
						"description": "Username of the account",
						"type": "string",
						"example": "administrator"
					},
					"password": {
						"description": "Password of the account",
						"type": "string",
						"example": "password"
					}
				},
				"x-examples": {
					"Example": {
						"username": "administrator",
						"password": "password"
					}
				}
			},
			"ExpansionRequest": {
				"description": "Parameters for the cluster expansion (supports L2/L3 network configurations)",
				"type": "object",
				"required": [
					"version",
					"hosts",
					"vcenter"
				],
				"properties": {
					"version": {
						"type": "string",
						"description": "The software version of the VxRail cluster. For example, 7.0.240"
					},
					"hosts": {
						"description": "Information about the hosts",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExpansionNodeSpecV2"
						}
					},
					"vcenter": {
						"$ref": "#/components/schemas/Account"
					},
					"segment_label": {
						"type": "string",
						"description": "Label name of the segment"
					}
				},
				"x-examples": {
					"Example": {
						"version": "string",
						"hosts": [
							{
								"customer_supplied": {
									"management_ip": "192.168.100.1",
									"current_root_password": "Passw0rd!"
								},
								"host_psnt": "string",
								"hostname": "string",
								"accounts": {
									"root": {
										"username": "string",
										"password": "string"
									},
									"management": {
										"username": "string",
										"password": "string"
									}
								},
								"network": [
									{
										"type": "string",
										"ip": "string",
										"ipv6": "string"
									}
								],
								"maintenance_mode": true,
								"geo_location": {
									"rack_name": "rack1",
									"order_number": 1
								},
								"nic_mappings": [
									{
										"vds_name": "string",
										"name": "string",
										"physical_nic": "string"
									}
								],
								"storage": {
									"disk_group_type": "2403",
									"slot_claims": [
										{
											"usage": "non-vSAN",
											"values": [
												{
													"slots": "3,6,7-8"
												}
											]
										}
									]
								}
							}
						],
						"vcenter": {
							"username": "string",
							"password": "string"
						},
						"segment_label": "string"
					}
				}
			},
			"SatelliteNodeExpansionSpec": {
				"description": "Parameters for the satellite node expansion",
				"type": "object",
				"required": [
					"version",
					"folder_id",
					"hosts",
					"vcenter"
				],
				"properties": {
					"version": {
						"type": "string",
						"description": "The software version of the VxRail cluster. For example, 7.0.240"
					},
					"folder_id": {
						"type": "string",
						"description": "The specific folder id."
					},
					"hosts": {
						"description": "Information about the hosts",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SatelliteNodeExpansionNodeSpec"
						}
					},
					"vcenter": {
						"$ref": "#/components/schemas/Account"
					}
				},
				"x-examples": {
					"Example": {
						"version": "string",
						"folder_id": "string",
						"hosts": [
							{
								"customer_supplied": {
									"management_ip": "192.168.100.1",
									"current_root_password": "Passw0rd!"
								},
								"hostname": "string",
								"domain_name": "string",
								"accounts": {
									"root": {
										"username": "string",
										"password": "string"
									},
									"management": {
										"username": "string",
										"password": "string"
									}
								},
								"network": [
									{
										"type": "string",
										"ip": "string",
										"netmask": "string",
										"gateway": "string",
										"vlan": 0
									}
								],
								"dns_servers": [
									"string"
								],
								"ntp_servers": [
									"string"
								],
								"syslog_servers": [
									"string"
								],
								"geo_location": {
									"rack_name": "rack1",
									"order_number": 1
								}
							}
						],
						"vcenter": {
							"username": "string",
							"password": "string"
						}
					}
				}
			},
			"ExpansionNodeSpecV2": {
				"type": "object",
				"x-examples": {
					"Example": {
						"customer_supplied": {
							"management_ip": "192.168.100.1",
							"current_root_password": "Passw0rd!"
						},
						"host_psnt": "string",
						"hostname": "string",
						"accounts": {
							"root": {
								"username": "string",
								"password": "string"
							},
							"management": {
								"username": "string",
								"password": "string"
							}
						},
						"network": [
							{
								"type": "string",
								"ip": "string",
								"ipv6": "string"
							}
						],
						"maintenance_mode": true,
						"geo_location": {
							"rack_name": "rack1",
							"order_number": 1
						},
						"nic_mappings": [
							{
								"vds_name": "string",
								"name": "string",
								"physical_nic": "string"
							}
						],
						"storage": {
							"disk_group_type": "2403",
							"slot_claims": [
								{
									"usage": "non-vSAN",
									"values": [
										{
											"slots": "3,6,7-8"
										}
									]
								}
							]
						}
					}
				},
				"description": "Expansion node specifications",
				"properties": {
					"customer_supplied": {
						"$ref": "#/components/schemas/CustomerSuppliedSpec"
					},
					"host_psnt": {
						"type": "string",
						"description": "PSNT of the host"
					},
					"hostname": {
						"type": "string",
						"description": "Indicates the hostname "
					},
					"accounts": {
						"$ref": "#/components/schemas/NodeAccount"
					},
					"network": {
						"type": "array",
						"description": "An array of network information for the host components",
						"items": {
							"$ref": "#/components/schemas/HostIpV2"
						}
					},
					"maintenance_mode": {
						"type": "boolean",
						"description": "Whether the hosts remain in maintenance mode after being added to the cluster"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					},
					"nic_mappings": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NicUplinkV2"
						}
					},
					"storage": {
						"$ref": "#/components/schemas/StorageInfo"
					}
				},
				"required": [
					"hostname",
					"accounts",
					"network",
					"nic_mappings"
				]
			},
			"SatelliteNodeExpansionNodeSpec": {
				"type": "object",
				"required": [
					"customer_supplied",
					"hostname",
					"dns_servers",
					"domain_name",
					"accounts",
					"network"
				],
				"properties": {
					"customer_supplied": {
						"$ref": "#/components/schemas/SatelliteNodeCustomerSuppliedSpec"
					},
					"hostname": {
						"type": "string",
						"description": "Hostname of the host"
					},
					"domain_name": {
						"type": "string",
						"description": "Domain name of the host"
					},
					"accounts": {
						"$ref": "#/components/schemas/NodeAccount"
					},
					"network": {
						"type": "array",
						"description": "An array of network information for the host components",
						"items": {
							"$ref": "#/components/schemas/SatelliteNodeNetwork"
						}
					},
					"dns_servers": {
						"type": "array",
						"description": "An array of dns servers information for the host components",
						"items": {
							"type": "string"
						}
					},
					"ntp_servers": {
						"type": "array",
						"description": "An array of ntp servers information for the host components",
						"items": {
							"type": "string"
						}
					},
					"syslog_servers": {
						"type": "array",
						"description": "An array of syslog servers information for the host components",
						"items": {
							"type": "string"
						}
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					}
				},
				"x-examples": {
					"Example": {
						"customer_supplied": {
							"management_ip": "192.168.100.1",
							"current_root_password": "Passw0rd!"
						},
						"hostname": "string",
						"domain_name": "string",
						"accounts": {
							"root": {
								"username": "string",
								"password": "string"
							},
							"management": {
								"username": "string",
								"password": "string"
							}
						},
						"network": [
							{
								"type": "string",
								"ip": "string",
								"netmask": "string",
								"gateway": "string",
								"vlan": 0
							}
						],
						"dns_servers": [
							"string"
						],
						"ntp_servers": [
							"string"
						],
						"syslog_servers": [
							"string"
						],
						"geo_location": {
							"rack_name": "rack1",
							"order_number": 1
						}
					}
				}
			},
			"CustomerSuppliedSpec": {
				"type": "object",
				"description": "Customer-supplied information about the management node",
				"required": [
					"management_ip"
				],
				"properties": {
					"management_ip": {
						"description": "IP address of the management node",
						"type": "string",
						"example": "192.168.100.1"
					},
					"current_root_password": {
						"description": "Password for the root account",
						"type": "string",
						"example": "Passw0rd!"
					}
				},
				"x-examples": {
					"Example": {
						"management_ip": "192.168.100.1",
						"current_root_password": "Passw0rd!"
					}
				}
			},
			"SatelliteNodeCustomerSuppliedSpec": {
				"type": "object",
				"description": "Customer-supplied information about the management node",
				"required": [
					"management_ip",
					"current_root_password"
				],
				"properties": {
					"management_ip": {
						"description": "IP address of the management node",
						"type": "string",
						"example": "192.168.100.1"
					},
					"current_root_password": {
						"description": "Password for the root account",
						"type": "string",
						"example": "Passw0rd!"
					}
				},
				"x-examples": {
					"Example": {
						"management_ip": "192.168.100.1",
						"current_root_password": "Passw0rd!"
					}
				}
			},
			"NodeAccount": {
				"type": "object",
				"description": "Credentials for the host accounts",
				"required": [
					"root",
					"management"
				],
				"properties": {
					"root": {
						"$ref": "#/components/schemas/Account"
					},
					"management": {
						"$ref": "#/components/schemas/Account"
					}
				},
				"x-examples": {
					"Example": {
						"root": {
							"username": "string",
							"password": "string"
						},
						"management": {
							"username": "string",
							"password": "string"
						}
					}
				}
			},
			"Account": {
				"type": "object",
				"x-examples": {
					"Example": {
						"username": "string",
						"password": "string"
					}
				},
				"description": "Account credentials details.",
				"properties": {
					"username": {
						"type": "string",
						"description": "Username of the account."
					},
					"password": {
						"type": "string",
						"description": "Password of the account."
					}
				},
				"required": [
					"username",
					"password"
				]
			},
			"HostIpV2": {
				"type": "object",
				"x-examples": {
					"Example": {
						"type": "string",
						"ip": "string",
						"ipv6": "string"
					}
				},
				"description": "An array of network information for the host components",
				"properties": {
					"type": {
						"type": "string",
						"description": "Type of component. Supported values include Management, vSAN, and vMOTION."
					},
					"ip": {
						"type": "string",
						"description": "IP address of the component"
					},
					"ipv6": {
						"type": "string",
						"description": "IPv6 address of the host."
					}
				},
				"required": [
					"type"
				]
			},
			"SatelliteNodeNetwork": {
				"type": "object",
				"required": [
					"type",
					"ip",
					"netmask",
					"gateway",
					"vlan"
				],
				"properties": {
					"type": {
						"type": "string",
						"description": "Type of component. Supported values include MANAGEMENT"
					},
					"ip": {
						"type": "string",
						"description": "IP address of the component"
					},
					"netmask": {
						"type": "string",
						"description": "Netmask the component"
					},
					"gateway": {
						"type": "string",
						"description": "Gateway of the component"
					},
					"vlan": {
						"type": "integer",
						"description": "Vlan of the component"
					}
				},
				"x-examples": {
					"Example": {
						"type": "string",
						"ip": "string",
						"netmask": "string",
						"gateway": "string",
						"vlan": 0
					}
				}
			},
			"NicUplinkV2": {
				"type": "object",
				"description": "An array of NIC mappings for the hosts",
				"required": [
					"vds_name",
					"name",
					"physical_nic"
				],
				"properties": {
					"vds_name": {
						"type": "string",
						"description": "Name of the VDS"
					},
					"name": {
						"type": "string",
						"description": "Name of the uplink"
					},
					"physical_nic": {
						"type": "string",
						"description": "Name of the physical NIC"
					}
				},
				"x-examples": {
					"Example": {
						"vds_name": "string",
						"name": "string",
						"physical_nic": "string"
					}
				}
			},
			"StorageInfo": {
				"type": "object",
				"description": "Information about which disk slots are claimed as vSAN storage and which slots are non-vSAN storage. You must submit a request for product qualification (RPQ) to reserve slots for non-vSAN disks.",
				"x-examples": {
					"Example": {
						"disk_group_type": "2403",
						"slot_claims": [
							{
								"usage": "non-vSAN",
								"values": [
									{
										"slots": "3,6,7-8"
									}
								]
							}
						]
					}
				},
				"properties": {
					"disk_group_type": {
						"type": "string",
						"example": "2403",
						"description": "Type of the disk group."
					},
					"slot_claims": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"usage": {
									"type": "string",
									"description": "The type of usage the slot values are claimed as",
									"enum": [
										"non-vSAN"
									],
									"example": "non-vSAN"
								},
								"values": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"slots": {
												"type": "string",
												"description": "A list of disk slots that are claimed as the type of usage defined in the usage parameter",
												"example": "3,6,7-8"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"ExpansionNodeInfo": {
				"type": "object",
				"x-examples": {
					"Example": {
						"request_id": "string",
						"error_messages": [
							"string"
						]
					}
				},
				"description": "Information about Expansion node",
				"properties": {
					"request_id": {
						"type": "string",
						"description": "Request ID of the expansion node."
					},
					"error_messages": {
						"type": "array",
						"description": "Expansion node error messages.",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"Layer3SegmentStartSpec": {
				"description": "Configuration parameters for the segment.",
				"required": [
					"segment",
					"vcenter"
				],
				"properties": {
					"segment": {
						"$ref": "#/components/schemas/Layer3SegmentSpec"
					},
					"vcenter": {
						"$ref": "#/components/schemas/Account"
					}
				},
				"x-examples": {
					"Example": {
						"segment": {
							"segment_label": "string",
							"proxy_ip": "string",
							"management_gateway": "string",
							"management_netmask": "string",
							"management_vlan": 0,
							"vsan_gateway": "string",
							"management_topology": "DIFF_SUBNET",
							"vsan_netmask": "string",
							"vsan_vlan": 0,
							"vsan_init_gateway": "string",
							"vsan_topology": "DIFF_SUBNET",
							"vmotion_gateway": "string",
							"vmotion_netmask": "string",
							"vmotion_vlan": 0,
							"vmotion_init_gateway": "string",
							"vmotion_topology": "DIFF_SUBNET"
						},
						"vcenter": {
							"username": "string",
							"password": "string"
						}
					}
				}
			},
			"Layer3SegmentSpec": {
				"description": "Segment configuration parameters",
				"type": "object",
				"required": [
					"segment_label"
				],
				"properties": {
					"segment_label": {
						"type": "string",
						"description": "The name of the segment"
					},
					"proxy_ip": {
						"type": "string",
						"description": "The IP address of the node which provides proxy service"
					},
					"management_gateway": {
						"type": "string",
						"description": "The IPv4 gateway address of the management traffic for the current segment"
					},
					"management_netmask": {
						"type": "string",
						"description": "The subnet mask of the management traffic for the current segment"
					},
					"management_vlan": {
						"type": "integer",
						"description": "The VLAN ID of the management traffic for the current segment"
					},
					"vsan_gateway": {
						"type": "string",
						"description": "The IPv4 gateway address of the vSAN traffic for the current segment"
					},
					"management_topology": {
						"type": "string",
						"description": "The topology type for management traffic for the VxRail cluster",
						"enum": [
							"DIFF_SUBNET",
							"SAME_SUBNET"
						]
					},
					"vsan_netmask": {
						"type": "string",
						"description": "The subnet mask for the vSAN traffic for the current segment"
					},
					"vsan_vlan": {
						"type": "integer",
						"description": "The VLAN ID for the vSAN traffic for the current segment"
					},
					"vsan_init_gateway": {
						"type": "string",
						"description": "The IPv4 gateway address of the vSAN traffic for the initial segment. **Note:** When vsan_topology is set as DIFF_SUBNET, this value must be provided during the first L3 segment creation."
					},
					"vsan_topology": {
						"type": "string",
						"description": "The topology type for the vSAN traffic for the VxRail cluster",
						"enum": [
							"DIFF_SUBNET",
							"SAME_SUBNET"
						]
					},
					"vmotion_gateway": {
						"type": "string",
						"description": "The IPv4 gateway address of the vMotion traffic of the current segment"
					},
					"vmotion_netmask": {
						"type": "string",
						"description": "The subnet mask for the vMotion traffic of the current segment"
					},
					"vmotion_vlan": {
						"type": "integer",
						"description": "The VLAN ID for the vMotion traffic of the current segment"
					},
					"vmotion_init_gateway": {
						"type": "string",
						"description": "The IPv4 gateway address of the vMotion traffic for the initial segment. **Note:** When vmotion_topology is set as DIFF_SUBNET, this value must be provided during the first L3 segment creation."
					},
					"vmotion_topology": {
						"type": "string",
						"description": "The topology type for the vMotion traffic for the VxRail cluster",
						"enum": [
							"DIFF_SUBNET",
							"SAME_SUBNET"
						]
					}
				},
				"x-examples": {
					"Example": {
						"segment_label": "string",
						"proxy_ip": "string",
						"management_gateway": "string",
						"management_netmask": "string",
						"management_vlan": 0,
						"vsan_gateway": "string",
						"management_topology": "DIFF_SUBNET",
						"vsan_netmask": "string",
						"vsan_vlan": 0,
						"vsan_init_gateway": "string",
						"vsan_topology": "DIFF_SUBNET",
						"vmotion_gateway": "string",
						"vmotion_netmask": "string",
						"vmotion_vlan": 0,
						"vmotion_init_gateway": "string",
						"vmotion_topology": "DIFF_SUBNET"
					}
				}
			},
			"Layer3SegmentStartSpecV2": {
				"description": "Configuration parameters for the segment.",
				"required": [
					"version",
					"segment",
					"vcenter"
				],
				"properties": {
					"version": {
						"type": "string",
						"description": "current vxrail release version"
					},
					"segment": {
						"$ref": "#/components/schemas/Layer3SegmentSpecV2"
					},
					"vcenter": {
						"$ref": "#/components/schemas/Account"
					}
				},
				"x-examples": {
					"Example": {
						"version": "string",
						"segment": {
							"segment_info_version": "string",
							"segment_label": "string",
							"proxy_ip": "string",
							"management_gateway": "string",
							"management_netmask": "string",
							"management_gateway_ipv6": "string",
							"management_prefix_length_ipv6": 0,
							"management_vlan": 0,
							"vsan_gateway": "string",
							"vsan_gateway_ipv6": "string",
							"management_topology": "DIFF_SUBNET",
							"vsan_netmask": "string",
							"vsan_prefix_legnth_ipv6": 0,
							"vsan_vlan": 0,
							"vsan_init_gateway": "string",
							"vsan_init_gateway_ipv6": "string",
							"vsan_topology": "DIFF_SUBNET",
							"vmotion_gateway": "string",
							"vmotion_gateway_ipv6": "string",
							"vmotion_netmask": "string",
							"vmotion_prefix_length_ipv6": 0,
							"vmotion_vlan": 0,
							"vmotion_init_gateway": "string",
							"vmotion_init_gateway_ipv6": "string",
							"vmotion_topology": "DIFF_SUBNET"
						},
						"vcenter": {
							"username": "string",
							"password": "string"
						}
					}
				}
			},
			"Layer3SegmentSpecV2": {
				"description": "Segment configuration parameters",
				"type": "object",
				"required": [
					"segment_label"
				],
				"properties": {
					"segment_info_version": {
						"type": "string",
						"description": "segment info format version. for SPECV2, it is for Get API."
					},
					"segment_label": {
						"type": "string",
						"description": "The name of the segment"
					},
					"proxy_ip": {
						"type": "string",
						"description": "The IP address of the node which provides proxy service"
					},
					"management_gateway": {
						"type": "string",
						"description": "The IPv4 gateway address of the management traffic for the current segment"
					},
					"management_netmask": {
						"type": "string",
						"description": "The subnet mask of the management traffic for the current segment"
					},
					"management_gateway_ipv6": {
						"type": "string",
						"description": "Internal use only"
					},
					"management_prefix_length_ipv6": {
						"type": "integer",
						"nullable": true,
						"description": "Internal use only"
					},
					"management_vlan": {
						"type": "integer",
						"description": "The VLAN ID of the management traffic for the current segment"
					},
					"vsan_gateway": {
						"type": "string",
						"description": "The IPv4 gateway address of the vSAN traffic for the current segment"
					},
					"vsan_gateway_ipv6": {
						"type": "string",
						"description": "Internal use only"
					},
					"management_topology": {
						"type": "string",
						"description": "The topology type for management traffic for the VxRail cluster",
						"enum": [
							"DIFF_SUBNET",
							"SAME_SUBNET"
						]
					},
					"vsan_netmask": {
						"type": "string",
						"description": "The subnet mask for the vSAN traffic for the current segment"
					},
					"vsan_prefix_legnth_ipv6": {
						"type": "integer",
						"nullable": true,
						"description": "Internal use only"
					},
					"vsan_vlan": {
						"type": "integer",
						"description": "The VLAN ID for the vSAN traffic for the current segment"
					},
					"vsan_init_gateway": {
						"type": "string",
						"description": "The IPv4 gateway address of the vSAN traffic for the initial segment. **Note:** When vsan_topology is set as DIFF_SUBNET, this value must be provided during the first L3 segment creation."
					},
					"vsan_init_gateway_ipv6": {
						"type": "string",
						"description": "Internal use only"
					},
					"vsan_topology": {
						"type": "string",
						"description": "The topology type for the vSAN traffic for the VxRail cluster",
						"enum": [
							"DIFF_SUBNET",
							"SAME_SUBNET"
						]
					},
					"vmotion_gateway": {
						"type": "string",
						"description": "The IPv4 gateway address of the vMotion traffic of the current segment"
					},
					"vmotion_gateway_ipv6": {
						"type": "string",
						"description": "Internal use only"
					},
					"vmotion_netmask": {
						"type": "string",
						"description": "The subnet mask for the vMotion traffic of the current segment"
					},
					"vmotion_prefix_length_ipv6": {
						"type": "integer",
						"nullable": true,
						"description": "Internal use only"
					},
					"vmotion_vlan": {
						"type": "integer",
						"description": "The VLAN ID for the vMotion traffic of the current segment"
					},
					"vmotion_init_gateway": {
						"type": "string",
						"description": "The IPv4 gateway address of the vMotion traffic for the initial segment. **Note:** When vmotion_topology is set as DIFF_SUBNET, this value must be provided during the first L3 segment creation."
					},
					"vmotion_init_gateway_ipv6": {
						"type": "string",
						"description": "Internal use only"
					},
					"vmotion_topology": {
						"type": "string",
						"description": "The topology type for the vMotion traffic for the VxRail cluster",
						"enum": [
							"DIFF_SUBNET",
							"SAME_SUBNET"
						]
					}
				},
				"x-examples": {
					"Example": {
						"segment_info_version": "string",
						"segment_label": "string",
						"proxy_ip": "string",
						"management_gateway": "string",
						"management_netmask": "string",
						"management_gateway_ipv6": "string",
						"management_prefix_length_ipv6": 0,
						"management_vlan": 0,
						"vsan_gateway": "string",
						"vsan_gateway_ipv6": "string",
						"management_topology": "DIFF_SUBNET",
						"vsan_netmask": "string",
						"vsan_prefix_legnth_ipv6": 0,
						"vsan_vlan": 0,
						"vsan_init_gateway": "string",
						"vsan_init_gateway_ipv6": "string",
						"vsan_topology": "DIFF_SUBNET",
						"vmotion_gateway": "string",
						"vmotion_gateway_ipv6": "string",
						"vmotion_netmask": "string",
						"vmotion_prefix_length_ipv6": 0,
						"vmotion_vlan": 0,
						"vmotion_init_gateway": "string",
						"vmotion_init_gateway_ipv6": "string",
						"vmotion_topology": "DIFF_SUBNET"
					}
				}
			},
			"Layer3SegmentInputErrorResponse": {
				"description": "Error response for segment create/update input errors",
				"type": "object",
				"properties": {
					"message": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Layer3SegmentFieldError"
						}
					}
				}
			},
			"Layer3SegmentFieldError": {
				"description": "Input error of the segment field",
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"errors": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"SegmentStatusInfo": {
				"description": "Information about the health status for the specified segment.",
				"type": "object",
				"required": [
					"type",
					"status"
				],
				"properties": {
					"type": {
						"description": "The type of health check performed",
						"type": "string"
					},
					"status": {
						"description": "The status of the health check",
						"type": "string",
						"enum": [
							"HEALTHY",
							"UNHEALTHY",
							"SKIP"
						],
						"example": "UNHEALTHY"
					},
					"errors": {
						"description": "Details about health check issues",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SegmentErrorSpec"
						}
					}
				},
				"x-examples": {
					"Example": {
						"type": "string",
						"status": "UNHEALTHY",
						"errors": [
							{
								"level": "ERROR",
								"field": "vsan",
								"message": "portgroup not found"
							}
						]
					}
				}
			},
			"SegmentErrorSpec": {
				"description": "Details about the health check.",
				"type": "object",
				"required": [
					"level",
					"field",
					"message"
				],
				"properties": {
					"level": {
						"type": "string",
						"description": "The severity level of the issue",
						"enum": [
							"WARNING",
							"ERROR"
						],
						"example": "ERROR"
					},
					"field": {
						"type": "string",
						"description": "The category of the issue",
						"example": "vsan"
					},
					"message": {
						"type": "string",
						"description": "The description of the issue",
						"example": "portgroup not found"
					}
				},
				"x-examples": {
					"Example": {
						"level": "ERROR",
						"field": "vsan",
						"message": "portgroup not found"
					}
				}
			},
			"Day1RequestInfo": {
				"description": "Status information for the cluster deployment and configuration",
				"type": "object",
				"required": [
					"id",
					"progress"
				],
				"properties": {
					"id": {
						"description": "The returned request_id from a running cluster configuration (POST /v1/system/initialize)",
						"type": "string",
						"example": "47a45dac-67b8-4932-8703-960c5df8e494"
					},
					"state": {
						"description": "The current state of execution",
						"type": "string",
						"example": "STARTED",
						"enum": [
							"STARTED",
							"FAILED",
							"COMPLETED"
						]
					},
					"step": {
						"description": "The current step being run",
						"type": "string",
						"example": "VxM populate configuration data"
					},
					"owner": {
						"description": "The owner of the request",
						"type": "string",
						"example": "Day1BringUp"
					},
					"progress": {
						"description": "The progress of the current execution (as a percentage)",
						"type": "integer",
						"example": 0
					},
					"start_time": {
						"description": "The start time of the current execution",
						"type": "integer",
						"example": 1584679007
					},
					"end_time": {
						"description": "The end time of the current execution",
						"type": "integer",
						"example": 1584699007
					},
					"extension": {
						"type": "object",
						"description": "Application-specific status information",
						"properties": {
							"guidelines": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Guidance messages",
											"example": "Please reference KB001 to address this problem"
										},
										"kb": {
											"type": "string",
											"description": "Optional Knowledge Base ID number",
											"example": "kbid001"
										}
									}
								}
							},
							"validation": {
								"$ref": "#/components/schemas/Day1RequestValidationInfo"
							},
							"steps": {
								"$ref": "#/components/schemas/Day1RequestStepsInfo"
							}
						}
					},
					"detail": {
						"description": "Reserved field",
						"type": "string",
						"example": ""
					},
					"error": {
						"description": "Reserved field",
						"type": "string",
						"example": ""
					}
				},
				"x-examples": {
					"Example": {
						"id": "47a45dac-67b8-4932-8703-960c5df8e494",
						"state": "STARTED",
						"step": "VxM populate configuration data",
						"owner": "Day1BringUp",
						"progress": 0,
						"start_time": 1584679007,
						"end_time": 1584699007,
						"extension": {
							"guidelines": [
								{
									"message": "Please reference KB001 to address this problem",
									"kb": "kbid001"
								}
							],
							"validation": {
								"cursory": {
									"errors": {
										"fields": [
											{
												"path": "vcenter.accounts.administrator.password",
												"messages": [
													"password too short"
												]
											}
										],
										"generals": [
											{
												"title": "General Error",
												"messages": [
													"unknown error"
												]
											}
										]
									},
									"warnings": {
										"fields": [
											{
												"path": "vcenter.accounts.administrator.password",
												"messages": [
													"password too short"
												]
											}
										],
										"generals": [
											{
												"title": "General Error",
												"messages": [
													"unknown error"
												]
											}
										]
									}
								},
								"thorough": {
									"errors": {
										"fields": [
											{
												"path": "vcenter.accounts.administrator.password",
												"messages": [
													"password too short"
												]
											}
										],
										"generals": [
											{
												"title": "General Error",
												"messages": [
													"unknown error"
												]
											}
										]
									},
									"warnings": {
										"fields": [
											{
												"path": "vcenter.accounts.administrator.password",
												"messages": [
													"password too short"
												]
											}
										],
										"generals": [
											{
												"title": "General Error",
												"messages": [
													"unknown error"
												]
											}
										]
									}
								}
							},
							"steps": [
								{
									"id": "vxm_set_dns",
									"name": "VxM set DNS server",
									"path": "sub_workflow1.sub_workflow2.vxm_config_dns.external.vxm_set_dns",
									"state": "STARTED",
									"steps": [
										{}
									],
									"start_time": 0,
									"end_time": 0
								}
							]
						},
						"detail": "",
						"error": ""
					}
				}
			},
			"Day1RequestValidationInfo": {
				"description": "Validation status for the initial cluster configuration",
				"type": "object",
				"required": [
					"cursory",
					"thorough"
				],
				"properties": {
					"cursory": {
						"type": "object",
						"properties": {
							"errors": {
								"type": "object",
								"properties": {
									"fields": {
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/Day1RequestValidationFieldInfo"
										}
									},
									"generals": {
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/Day1RequestValidationGeneralInfo"
										}
									}
								}
							},
							"warnings": {
								"type": "object",
								"properties": {
									"fields": {
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/Day1RequestValidationFieldInfo"
										}
									},
									"generals": {
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/Day1RequestValidationGeneralInfo"
										}
									}
								}
							}
						}
					},
					"thorough": {
						"type": "object",
						"properties": {
							"errors": {
								"type": "object",
								"properties": {
									"fields": {
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/Day1RequestValidationFieldInfo"
										}
									},
									"generals": {
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/Day1RequestValidationGeneralInfo"
										}
									}
								}
							},
							"warnings": {
								"type": "object",
								"properties": {
									"fields": {
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/Day1RequestValidationFieldInfo"
										}
									},
									"generals": {
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/Day1RequestValidationGeneralInfo"
										}
									}
								}
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"cursory": {
							"errors": {
								"fields": [
									{
										"path": "vcenter.accounts.administrator.password",
										"messages": [
											"password too short"
										]
									}
								],
								"generals": [
									{
										"title": "General Error",
										"messages": [
											"unknown error"
										]
									}
								]
							},
							"warnings": {
								"fields": [
									{
										"path": "vcenter.accounts.administrator.password",
										"messages": [
											"password too short"
										]
									}
								],
								"generals": [
									{
										"title": "General Error",
										"messages": [
											"unknown error"
										]
									}
								]
							}
						},
						"thorough": {
							"errors": {
								"fields": [
									{
										"path": "vcenter.accounts.administrator.password",
										"messages": [
											"password too short"
										]
									}
								],
								"generals": [
									{
										"title": "General Error",
										"messages": [
											"unknown error"
										]
									}
								]
							},
							"warnings": {
								"fields": [
									{
										"path": "vcenter.accounts.administrator.password",
										"messages": [
											"password too short"
										]
									}
								],
								"generals": [
									{
										"title": "General Error",
										"messages": [
											"unknown error"
										]
									}
								]
							}
						}
					}
				}
			},
			"Day1RequestValidationFieldInfo": {
				"description": "The validation error or warning result of the cluster deployment",
				"type": "object",
				"required": [
					"path",
					"messages"
				],
				"properties": {
					"path": {
						"type": "string",
						"description": "The parameter path for the error result in the input JSON file",
						"example": "vcenter.accounts.administrator.password"
					},
					"messages": {
						"type": "array",
						"description": "The error or warning message",
						"items": {
							"type": "string"
						},
						"example": [
							"password too short"
						]
					}
				},
				"x-examples": {
					"Example": {
						"path": "vcenter.accounts.administrator.password",
						"messages": [
							"password too short"
						]
					}
				}
			},
			"Day1RequestValidationGeneralInfo": {
				"description": "The validation error or warning result of the cluster deployment",
				"type": "object",
				"required": [
					"title",
					"messages"
				],
				"properties": {
					"title": {
						"type": "string",
						"description": "always General Error",
						"example": "General Error"
					},
					"messages": {
						"type": "array",
						"description": "error or warning message",
						"items": {
							"type": "string"
						},
						"example": [
							"unknown error"
						]
					}
				},
				"x-examples": {
					"Example": {
						"title": "General Error",
						"messages": [
							"unknown error"
						]
					}
				}
			},
			"Day1RequestStepsInfo": {
				"description": "Installation status step result",
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/Day1RequestStepInfo"
				},
				"x-examples": {
					"Example": [
						{
							"id": "vxm_set_dns",
							"name": "VxM set DNS server",
							"path": "sub_workflow1.sub_workflow2.vxm_config_dns.external.vxm_set_dns",
							"state": "STARTED",
							"steps": [
								{}
							],
							"start_time": 0,
							"end_time": 0
						}
					]
				}
			},
			"Day1RequestStepInfo": {
				"description": "An array of status results for each configuration step",
				"type": "object",
				"required": [
					"id",
					"name",
					"path",
					"state"
				],
				"properties": {
					"id": {
						"description": "The identification string for the step",
						"type": "string",
						"example": "vxm_set_dns"
					},
					"name": {
						"description": "The name of the step",
						"type": "string",
						"example": "VxM set DNS server"
					},
					"path": {
						"description": "The full path for the step including parent including parent steps",
						"type": "string",
						"example": "sub_workflow1.sub_workflow2.vxm_config_dns.external.vxm_set_dns"
					},
					"state": {
						"description": "The status state of the step",
						"type": "string",
						"example": "STARTED",
						"enum": [
							"STARTED",
							"FAILED",
							"COMPLETED"
						]
					},
					"steps": {
						"type": "array",
						"description": "An array of any steps running in parallel",
						"items": {
							"$ref": "#/components/schemas/Day1RequestStepInfo"
						}
					},
					"start_time": {
						"description": "The timestamp for the start of the step",
						"type": "integer"
					},
					"end_time": {
						"description": "The timestamp for the end of the step",
						"type": "integer"
					}
				},
				"x-examples": {
					"Example": {
						"id": "vxm_set_dns",
						"name": "VxM set DNS server",
						"path": "sub_workflow1.sub_workflow2.vxm_config_dns.external.vxm_set_dns",
						"state": "STARTED",
						"steps": [
							{
								"id": "vxm_set_dns",
								"name": "VxM set DNS server",
								"path": "sub_workflow1.sub_workflow2.vxm_config_dns.external.vxm_set_dns",
								"state": "STARTED",
								"steps": [
									{}
								],
								"start_time": 0,
								"end_time": 0
							}
						],
						"start_time": 0,
						"end_time": 0
					}
				},
				"title": ""
			},
			"VlcmUpgradeImageDepotSpec": {
				"type": "object",
				"required": [
					"bundle_file_locator",
					"vxrail"
				],
				"x-examples": {
					"Example": {
						"version": "7.0.350",
						"global": {
							"ip_version": "IPV4",
							"ntp_servers": [
								"string"
							],
							"is_internal_dns": true,
							"dns_servers": [
								"string"
							],
							"syslog_servers": [
								"string"
							],
							"cluster_type": "STANDARD",
							"cluster_vsan_prefix_length_ipv6": 64,
							"cluster_vmotion_prefix_length_ipv6": 64,
							"cluster_management_prefix_length_ipv6": 64,
							"cluster_management_gateway_ipv6": "2001:db8:1ab:16::1",
							"cluster_systemvm_netmask": "255.255.0.0",
							"cluster_systemvm_gateway": "172.18.1.167",
							"cluster_systemvm_prefix_length_ipv6": 64,
							"cluster_systemvm_gateway_ipv6": "2001:db8:1ab:16::1",
							"cluster_management_netmask": "255.255.0.0",
							"cluster_management_gateway": "172.18.1.167",
							"cluster_vsan_netmask": "255.255.0.0",
							"cluster_vmotion_netmask": "255.255.0.0",
							"cluster_witness_netmask": "255.255.0.0",
							"cluster_witness_gateway": "255.255.0.0",
							"top_level_domain": "string"
						},
						"hosts": [
							{
								"host_psnt": "CX7VJ130000000",
								"hostname": "vcluster301-esx01",
								"customer_supplied": {
									"management_ip": "192.168.1.1"
								},
								"accounts": {
									"root": {
										"username": "string"
									},
									"management": {
										"username": "string"
									}
								},
								"network": [
									{
										"type": "MANAGEMENT",
										"ip": "172.18.10.101",
										"ipv6": "2001:db8:1ab:16::201"
									}
								],
								"storage": {
									"slot_claims": [
										{
											"usage": "non-vSAN",
											"values": [
												{
													"slots": "3,6,7-8"
												}
											]
										}
									]
								},
								"geo_location": {
									"rack_name": "string",
									"position": 0
								}
							}
						],
						"vcenter": {
							"customer_supplied": true,
							"customer_supplied_vc_name": "string",
							"vxrail_supplied_vc_ip": "string",
							"vxrail_supplied_vc_ipv6": "string",
							"vxrail_supplied_vc_name": "string",
							"datacenter_name": "string",
							"cluster_name": "string",
							"auto_accept_vc_cert": true,
							"accounts": {
								"root": {
									"username": "string"
								},
								"administrator": {
									"username": "string"
								},
								"management": {
									"username": "string"
								}
							},
							"sso_domain": {
								"server": "string",
								"port": 0,
								"username": "string",
								"auto_accept_sso_vc_cert": true
							}
						},
						"witness_node": {
							"management_ip": "string",
							"witness_ip": "string",
							"gateway": "string",
							"netmask": "string",
							"username": "string"
						},
						"vxrail_manager": {
							"name": "string",
							"ip": "string",
							"ipv6": "string",
							"accounts": {
								"root": {
									"username": "string"
								},
								"service": {
									"username": "string"
								},
								"support": {
									"username": "string"
								}
							}
						},
						"network": {
							"sfs": {
								"sfs_disabled": true
							},
							"nic_profile": "FOUR_HIGH_SPEED",
							"systemvm_portgroup_binding_type": "STATIC_BINDING",
							"management_portgroup_binding_type": "STATIC_BINDING",
							"vds": [
								{
									"name": "VMware HCI Distributed Switch 1",
									"mtu": 1500,
									"nic_mappings": [
										{
											"uplinks": [
												{
													"name": "string",
													"physical_nic": "string"
												}
											],
											"lags": [
												{
													"name": "string",
													"physical_nics": [
														"string"
													]
												}
											]
										}
									],
									"portgroups": [
										{
											"name": "VSANPG",
											"type": "VSAN",
											"vlan_id": 0,
											"vmk_mtu": 1500,
											"uplinks": [
												"uplink1"
											],
											"lags": [
												"lag1"
											],
											"failover_order": {
												"active": [
													"uplink1"
												],
												"standby": [
													"uplink2"
												]
											},
											"load_balance_policy": "LOADBALANCE_SRCID"
										}
									]
								}
							]
						},
						"storage": {
							"disk_group_type": "2403",
							"primary_storage_type": "VMFS_ON_FC"
						}
					}
				},
				"description": "The parameters required for the initial configuration and deployment of a new cluster.",
				"properties": {
					"bundle_file_locator": {
						"description": "File path for upgrade bundle.",
						"type": "string"
					},
					"vxrail": {
						"$ref": "#/components/schemas/VxRailManagerSpec"
					}
				}
			},
			"VlcmImageDepotInfo": {
				"type": "object",
				"properties": {
					"base_image": {
						"type": "object",
						"properties": {
							"version": {
								"type": "string",
								"example": "7.0.3-0.0.18644231"
							}
						}
					},
					"components": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						},
						"example": {
							"MRVL-E4-CNA-Driver-Bundle": "5.0.219.0-1OEM.700.1.0.15843807",
							"Mellanox-nmlx5": "4.19.70.1-1OEM.700.1.0.15525992"
						}
					},
					"hardware_support": {
						"type": "object",
						"additionalProperties": {
							"type": "object",
							"properties": {
								"version": {
									"type": "string",
									"example": "8.0.000-27818744"
								},
								"pkg": {
									"type": "string",
									"example": "vxrail-hsp"
								}
							}
						},
						"example": {
							"com.vxrail.hsp": {
								"version": "8.0.000-27818744",
								"pkg": "vxrail"
							}
						}
					}
				}
			},
			"SystemInitSpecV5": {
				"type": "object",
				"x-examples": {
					"Example": {
						"version": "8.0.000",
						"global": {
							"ip_version": "IPV4",
							"ntp_servers": [
								"string"
							],
							"is_internal_dns": true,
							"dns_servers": [
								"string"
							],
							"syslog_servers": [
								"string"
							],
							"cluster_type": "STANDARD",
							"cluster_vsan_prefix_length_ipv6": 64,
							"cluster_vmotion_prefix_length_ipv6": 64,
							"cluster_management_prefix_length_ipv6": 64,
							"cluster_management_gateway_ipv6": "2001:db8:1ab:16::1",
							"cluster_systemvm_netmask": "255.255.0.0",
							"cluster_systemvm_gateway": "172.18.1.167",
							"cluster_systemvm_prefix_length_ipv6": 64,
							"cluster_systemvm_gateway_ipv6": "2001:db8:1ab:16::1",
							"cluster_management_netmask": "255.255.0.0",
							"cluster_management_gateway": "172.18.1.167",
							"cluster_vsan_netmask": "255.255.0.0",
							"cluster_vmotion_netmask": "255.255.0.0",
							"cluster_witness_netmask": "255.255.0.0",
							"cluster_witness_gateway": "255.255.0.0",
							"top_level_domain": "string"
						},
						"hosts": [
							{
								"host_psnt": "CX7VJ130000000",
								"hostname": "vcluster301-esx01",
								"customer_supplied": {
									"management_ip": "192.168.1.1"
								},
								"accounts": {
									"root": {
										"username": "string"
									},
									"management": {
										"username": "string"
									}
								},
								"network": [
									{
										"type": "MANAGEMENT",
										"ip": "172.18.10.101",
										"ipv6": "2001:db8:1ab:16::201"
									}
								],
								"storage": {
									"slot_claims": [
										{
											"usage": "non-vSAN",
											"values": [
												{
													"slots": "3,6,7-8"
												}
											]
										}
									]
								},
								"geo_location": {
									"rack_name": "string",
									"position": 0
								}
							}
						],
						"vcenter": {
							"customer_supplied": true,
							"customer_supplied_vc_name": "string",
							"vxrail_supplied_vc_ip": "string",
							"vxrail_supplied_vc_ipv6": "string",
							"vxrail_supplied_vc_name": "string",
							"datacenter_name": "string",
							"cluster_name": "string",
							"auto_accept_vc_cert": true,
							"accounts": {
								"root": {
									"username": "string"
								},
								"administrator": {
									"username": "string"
								},
								"management": {
									"username": "string"
								}
							},
							"sso_domain": {
								"server": "string",
								"port": 0,
								"username": "string",
								"auto_accept_sso_vc_cert": true
							}
						},
						"witness_node": {
							"management_ip": "string",
							"witness_ip": "string",
							"gateway": "string",
							"netmask": "string",
							"username": "string"
						},
						"vxrail_manager": {
							"name": "string",
							"ip": "string",
							"ipv6": "string",
							"accounts": {
								"root": {
									"username": "string"
								},
								"service": {
									"username": "string"
								},
								"support": {
									"username": "string"
								}
							}
						},
						"network": {
							"sfs": {
								"sfs_disabled": true
							},
							"nic_profile": "FOUR_HIGH_SPEED",
							"systemvm_portgroup_binding_type": "STATIC_BINDING",
							"management_portgroup_binding_type": "STATIC_BINDING",
							"vds": [
								{
									"name": "VMware HCI Distributed Switch 1",
									"mtu": 1500,
									"nic_mappings": [
										{
											"uplinks": [
												{
													"name": "string",
													"physical_nic": "string"
												}
											],
											"lags": [
												{
													"name": "string",
													"physical_nics": [
														"string"
													]
												}
											]
										}
									],
									"portgroups": [
										{
											"name": "VSANPG",
											"type": "VSAN",
											"vlan_id": 0,
											"vmk_mtu": 1500,
											"uplinks": [
												"uplink1"
											],
											"lags": [
												"lag1"
											],
											"failover_order": {
												"active": [
													"uplink1"
												],
												"standby": [
													"uplink2"
												]
											},
											"load_balance_policy": "LOADBALANCE_SRCID"
										}
									]
								}
							]
						},
						"storage": {
							"disk_group_type": "2403",
							"primary_storage_type": "VMFS_ON_FC"
						}
					}
				},
				"description": "The parameters required for the initial configuration and deployment of a new cluster.",
				"properties": {
					"version": {
						"description": "The version of VxRail Manager that is to be deployed.",
						"type": "string",
						"example": "8.0.000"
					},
					"global": {
						"type": "object",
						"description": "Global configuration settings for the VxRail cluster",
						"properties": {
							"ip_version": {
								"description": "IPv4 is the default value. IPv6 and DUALSTACK are for internal use only.",
								"type": "string",
								"enum": [
									"IPV4",
									"IPV6",
									"DUALSTACK"
								]
							},
							"ntp_servers": {
								"type": "array",
								"description": "Array of IP addresses for the NTP servers",
								"items": {
									"type": "string"
								}
							},
							"is_internal_dns": {
								"type": "boolean",
								"description": "Whether the DNS server is internal"
							},
							"dns_servers": {
								"type": "array",
								"description": "Array of IP addresses for the DNS servers",
								"items": {
									"type": "string"
								}
							},
							"syslog_servers": {
								"type": "array",
								"description": "Array of IP addresses for the Syslog servers",
								"items": {
									"type": "string"
								}
							},
							"cluster_type": {
								"type": "string",
								"description": "Type of cluster",
								"enum": [
									"STANDARD",
									"VSAN2NODE",
									"DYNAMIC_NODE"
								]
							},
							"cluster_vsan_prefix_length_ipv6": {
								"type": "integer",
								"description": "Internal use only",
								"example": 64
							},
							"cluster_vmotion_prefix_length_ipv6": {
								"type": "integer",
								"description": "Internal use only",
								"example": 64
							},
							"cluster_management_prefix_length_ipv6": {
								"type": "integer",
								"description": "Internal use only",
								"example": 64
							},
							"cluster_management_gateway_ipv6": {
								"type": "string",
								"description": "Internal use only",
								"example": "2001:db8:1ab:16::1"
							},
							"cluster_systemvm_netmask": {
								"type": "string",
								"description": "Subnet mask for cluster management nodes",
								"example": "255.255.0.0"
							},
							"cluster_systemvm_gateway": {
								"type": "string",
								"description": "Gateway address for cluster management nodes",
								"example": "172.18.1.167"
							},
							"cluster_systemvm_prefix_length_ipv6": {
								"type": "integer",
								"description": "Internal use only",
								"example": 64
							},
							"cluster_systemvm_gateway_ipv6": {
								"type": "string",
								"description": "Internal use only",
								"example": "2001:db8:1ab:16::1"
							},
							"cluster_management_netmask": {
								"type": "string",
								"description": "Subnet mask for cluster management nodes",
								"example": "255.255.0.0"
							},
							"cluster_management_gateway": {
								"type": "string",
								"description": "Gateway address for cluster management nodes",
								"example": "172.18.1.167"
							},
							"cluster_vsan_netmask": {
								"type": "string",
								"description": "Subnet mask for the vSAN cluster",
								"example": "255.255.0.0"
							},
							"cluster_vmotion_netmask": {
								"type": "string",
								"description": "Subnet mask for the vSphere vMotion cluster",
								"example": "255.255.0.0"
							},
							"cluster_witness_netmask": {
								"type": "string",
								"description": "Subnet mask for the witness nodes",
								"example": "255.255.0.0"
							},
							"cluster_witness_gateway": {
								"type": "string",
								"description": "Gateway address for the witness nodes",
								"example": "255.255.0.0"
							},
							"top_level_domain": {
								"type": "string",
								"description": "Top-level domain name"
							},
							"ha_isolation_addresses": {
								"type": "array",
								"description": "An array of the IP addresses for the vSphere HA isolation",
								"items": {
									"type": "string"
								}
							},
							"is_vlcm_cluster": {
								"description": "Enable vlcm",
								"type": "boolean",
								"example": false
							},
							"is_vlcm_force_remediate": {
								"description": "Remediate the cluster after vLCM enablement.",
								"type": "boolean",
								"example": false
							}
						}
					},
					"hosts": {
						"type": "array",
						"description": "Configuration settings for each of the VxRail hosts",
						"items": {
							"type": "object",
							"properties": {
								"host_psnt": {
									"type": "string",
									"description": "PSNT of the host",
									"example": "CX7VJ130000000"
								},
								"hostname": {
									"type": "string",
									"description": "Indicates the hostname",
									"example": "vcluster301-esx01"
								},
								"customer_supplied": {
									"$ref": "#/components/schemas/CustomerSuppliedHostInfoV2"
								},
								"accounts": {
									"type": "object",
									"description": "Credentials for the host accounts",
									"properties": {
										"root": {
											"type": "object",
											"properties": {
												"username": {
													"type": "string",
													"description": "Username of the root account"
												},
												"password": {
													"type": "string",
													"description": "Password of the root account",
													"writeOnly": true
												}
											}
										},
										"management": {
											"type": "object",
											"properties": {
												"username": {
													"type": "string",
													"description": "Username of the management account"
												},
												"password": {
													"type": "string",
													"description": "Password of the management account",
													"writeOnly": true
												}
											}
										}
									}
								},
								"network": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"type": {
												"type": "string",
												"description": "The type of component. Supported values include Management, vSAN, Witness, and vMotion.",
												"example": "MANAGEMENT"
											},
											"ip": {
												"type": "string",
												"description": "The IP address of component",
												"example": "172.18.10.101"
											},
											"ipv6": {
												"type": "string",
												"description": "Internal use only",
												"example": "2001:db8:1ab:16::201"
											}
										}
									}
								},
								"storage": {
									"$ref": "#/components/schemas/HostStorageInfo"
								},
								"geo_location": {
									"type": "object",
									"description": "Information about the geographic location of the host",
									"properties": {
										"rack_name": {
											"type": "string",
											"description": "The name of the rack that houses the host"
										},
										"position": {
											"type": "integer",
											"description": "The position of the node in the rack"
										}
									}
								}
							}
						}
					},
					"vcenter": {
						"type": "object",
						"description": "Configuration settings for the vCenter server",
						"properties": {
							"customer_supplied": {
								"type": "boolean",
								"description": "Whether the vCenter server is customer supplied (external) or VxRail integrated (internal). Supported values are true for customer supplied and false for integrated."
							},
							"customer_supplied_vc_name": {
								"type": "string",
								"description": "The FQDN of the vCenter server. This property is only provided if the vCenter server is customer supplied."
							},
							"vxrail_supplied_vc_ip": {
								"type": "string",
								"description": "The IP address of the VxRail integrated vCenter server. This property is only provided if the vCenter server is VxRail integrated."
							},
							"vxrail_supplied_vc_ipv6": {
								"type": "string",
								"description": "Internal use only"
							},
							"vxrail_supplied_vc_name": {
								"type": "string",
								"description": "The hostname of the VxRail integrated vCenter server. This property is only provided if the vCenter server is VxRail integrated."
							},
							"datacenter_name": {
								"type": "string",
								"description": "The name of the datacenter. This property is only provided if the vCenter server is customer supplied."
							},
							"cluster_name": {
								"type": "string",
								"description": "The name of the cluster. This property is only provided if the vCenter server is customer supplied."
							},
							"auto_accept_vc_cert": {
								"type": "boolean",
								"description": "Whether to automatically download the vCenter root certificate. True means VxRail Manager will download the vCenter root certificate automatically. False means users should provide the vCenter root certificate manually.",
								"example": true
							},
							"accounts": {
								"type": "object",
								"description": "Credentials for the vCenter accounts",
								"properties": {
									"root": {
										"type": "object",
										"properties": {
											"username": {
												"type": "string",
												"description": "Username of the root account"
											},
											"password": {
												"type": "string",
												"description": "Password of the root account",
												"writeOnly": true
											}
										}
									},
									"administrator": {
										"type": "object",
										"properties": {
											"username": {
												"type": "string",
												"description": "Username of the administrator account"
											},
											"password": {
												"type": "string",
												"description": "Password of the administrator account",
												"writeOnly": true
											}
										}
									},
									"management": {
										"type": "object",
										"properties": {
											"username": {
												"type": "string",
												"description": "Username of the management account"
											},
											"password": {
												"type": "string",
												"description": "Password of the administrator account",
												"writeOnly": true
											}
										}
									}
								}
							},
							"sso_domain": {
								"type": "object",
								"description": "Network and sign on information for the SSO domain. This property is only provided if the vCenter server is VxRail-supplied",
								"properties": {
									"server": {
										"type": "string",
										"description": "The IP address of the SSO domain"
									},
									"port": {
										"type": "integer",
										"description": "The port of the SSO domain"
									},
									"username": {
										"type": "string",
										"description": "Username of the SSO domain"
									},
									"password": {
										"type": "string",
										"description": "Password of the SSO domain",
										"writeOnly": true
									},
									"auto_accept_sso_vc_cert": {
										"type": "boolean",
										"description": "Whether to automatically download the SSO vCenter root certificate. True means VxRail Manager will download the target SSO vCenter root certificate automatically. False means users should provide the target SSO vCenter root certificate manually.",
										"example": true
									}
								}
							}
						}
					},
					"witness_node": {
						"type": "object",
						"description": "Configuration settings for a witness node. Only available when cluster_type is set to VSAN2NODE.",
						"properties": {
							"management_ip": {
								"type": "string",
								"description": "Management IP address for the witness node"
							},
							"witness_ip": {
								"type": "string",
								"description": "Witness traffic IP address for the witness node"
							},
							"gateway": {
								"type": "string",
								"description": "Gateway address for the witness node"
							},
							"netmask": {
								"type": "string",
								"description": "Subnet mask for the witness node"
							},
							"username": {
								"type": "string",
								"description": "Username for the witness node"
							},
							"password": {
								"type": "string",
								"description": "Password for the witness node",
								"writeOnly": true
							}
						}
					},
					"vxrail_managed_witness_node": {
						"type": "object",
						"description": "Configuration settings for witness VM and witness sled. Settings are only available when cluster_type is set to VSAN2NODE using VxRail managed witness.",
						"properties": {
							"witness_vm": {
								"type": "object",
								"description": "Configuration settings for witness VM.",
								"properties": {
									"management_ip": {
										"type": "string",
										"description": "Management IP address for the witness VM"
									},
									"witness_ip": {
										"type": "string",
										"description": "Witness traffic IP address for the witness VM"
									},
									"netmask": {
										"type": "string",
										"description": "Subnet mask for the witness traffic IP address"
									},
									"username": {
										"description": "Username of the account",
										"type": "string",
										"example": "root"
									},
									"password": {
										"description": "Password of the account",
										"type": "string",
										"example": "password"
									}
								}
							},
							"witness_sled": {
								"type": "object",
								"description": "Configuration settings for the witness sled.",
								"properties": {
									"host_psnt": {
										"type": "string",
										"description": "PSNT of the host",
										"example": "CX7VJ130000000"
									},
									"hostname": {
										"type": "string",
										"description": "Name of the host",
										"example": "witness301-esx01"
									},
									"management_ip": {
										"type": "string",
										"description": "Management IP address of the host",
										"example": "172.16.10.101"
									},
									"customer_supplied": {
										"$ref": "#/components/schemas/CustomerSuppliedHostInfoV2"
									},
									"accounts": {
										"type": "object",
										"properties": {
											"root": {
												"$ref": "#/components/schemas/UserSpec"
											},
											"management": {
												"$ref": "#/components/schemas/UserSpec"
											}
										}
									}
								}
							}
						}
					},
					"vxrail_manager": {
						"type": "object",
						"description": "Configuration settings for VxRail Manager",
						"properties": {
							"name": {
								"type": "string",
								"description": "Hostname for VxRail Manager"
							},
							"ip": {
								"type": "string",
								"description": "IP address for VxRail Manager"
							},
							"ipv6": {
								"type": "string",
								"description": "Internal use only"
							},
							"accounts": {
								"type": "object",
								"description": "Credentials for VxRail Manager",
								"properties": {
									"root": {
										"type": "object",
										"properties": {
											"username": {
												"type": "string",
												"description": "Username of the root account"
											},
											"password": {
												"type": "string",
												"description": "Password of the root account",
												"writeOnly": true
											}
										}
									},
									"service": {
										"type": "object",
										"properties": {
											"username": {
												"type": "string",
												"description": "Username of the service account"
											},
											"password": {
												"type": "string",
												"description": "Password of the service account",
												"writeOnly": true
											}
										}
									},
									"support": {
										"type": "object",
										"properties": {
											"username": {
												"type": "string",
												"description": "Username of the support account"
											},
											"password": {
												"type": "string",
												"description": "Password of the support account",
												"writeOnly": true
											}
										}
									}
								}
							}
						}
					},
					"network": {
						"type": "object",
						"description": "Configuration settings for the network",
						"properties": {
							"sfs": {
								"type": "object",
								"description": "Information about SmartFabric Service. Only for SmartFabric Users.",
								"properties": {
									"REST_USER_password": {
										"type": "string",
										"description": "User password",
										"writeOnly": true
									},
									"sfs_disabled": {
										"type": "boolean",
										"description": "SmartFabric disable flag. Set sfs_disabled to true to indicate SmartFabric is not used. Set sfs_disabled to false to indicate SmartFabric Services are enabled. The default value is false (enabled)."
									}
								}
							},
							"nic_profile": {
								"type": "string",
								"description": "The NIC profile configuration",
								"enum": [
									"FOUR_HIGH_SPEED",
									"TWO_HIGH_SPEED",
									"FOUR_LOW_SPEED",
									"TWO_LOW_TWO_HIGH_SPEED",
									"FOUR_EXTREME_SPEED",
									"ADVANCED_VXRAIL_SUPPLIED_VDS",
									"ADVANCED_CUSTOMER_SUPPLIED_VDS"
								]
							},
							"systemvm_portgroup_binding_type": {
								"description": "The type of portgroup binding for the system VMs",
								"type": "string",
								"enum": [
									"STATIC_BINDING",
									"EPHEMERAL"
								]
							},
							"management_portgroup_binding_type": {
								"description": "The type of portgroup binding for the management server",
								"type": "string",
								"enum": [
									"STATIC_BINDING",
									"EPHEMERAL"
								]
							},
							"vds": {
								"type": "array",
								"description": "Information about network vSwitches",
								"items": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string",
											"description": "Name of the defined vSphere Distributed Switch. This property is only for ADVANCED_CUSTOMER_SUPPLIED_VDS nic_profile.",
											"example": "VMware HCI Distributed Switch 1"
										},
										"mtu": {
											"type": "integer",
											"description": "The MTU value of the vSphere Distributed Switch. This value must be in the [1500, 9000] range. This property is only supported for the V-VDS or Multi-VDS portgroup types. This property is not supported for customer-supplied VDS or vSAN 2-node clusters.",
											"example": 1500
										},
										"nic_mappings": {
											"type": "array",
											"description": "This property is only used for a ADVANCED_VXRAIL_SUPPLIED_VDS and ADVANCED_CUSTOMER_SUPPLIED_VDS nic_profile",
											"items": {
												"type": "object",
												"description": "",
												"properties": {
													"uplinks": {
														"type": "array",
														"description": "A list of uplinks.",
														"items": {
															"type": "object",
															"properties": {
																"name": {
																	"type": "string",
																	"description": "Name of the uplink"
																},
																"physical_nic": {
																	"type": "string",
																	"description": "Physical NIC of the uplink"
																}
															}
														}
													},
													"lags": {
														"type": "array",
														"description": "A list of link aggregation groups (LAG).",
														"items": {
															"type": "object",
															"properties": {
																"name": {
																	"type": "string",
																	"description": "Name of the lag"
																},
																"physical_nics": {
																	"type": "array",
																	"description": "Physical NIC of the lag",
																	"items": {
																		"type": "string"
																	}
																}
															}
														}
													}
												}
											}
										},
										"portgroups": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string",
														"description": "Name of the port group. This property is only for a ADVANCED_CUSTOMER_SUPPLIED_VDS nic_profile.",
														"example": "VSANPG"
													},
													"type": {
														"type": "string",
														"example": "VSAN",
														"description": "The type of portgroup. The VXRAILDISCOVERY option is only used for ADVANCED_VXRAIL_SUPPLIED_VDS or ADVANCED_CUSTOMER_SUPPLIED_VDS nic_profile.",
														"enum": [
															"VSAN",
															"VMOTION",
															"MANAGEMENT",
															"WITNESS",
															"VXRAILSYSTEMVM",
															"CUSTOMERVM",
															"VXRAILDISCOVERY"
														]
													},
													"vlan_id": {
														"type": "integer",
														"description": "The VLAN ID of the port group. If you use an ADVANCED_VXRAIL_SUPPLIED_VDS or ADVANCED_CUSTOMER_SUPPLIED_VDS nic_profile and sfs_disabled = false , the VLAN ID for a VXRAILDISCOVERY portgroup type must be set to 3939.",
														"example": 0
													},
													"vmk_mtu": {
														"type": "integer",
														"description": "The MTU value of vmkernel on selected traffic type. This value must be in range [1500, 9000]. This property is only supported for portgroup type [MANAGEMENT, DISCOVERY, VSAN, VMOTION, WITNESS]",
														"example": 1500
													},
													"uplinks": {
														"type": "array",
														"description": "A list of uplinks. This property is only used when nic_profile is ADVANCED_CUSTOMER_SUPPLIED_VDS and sfs_disabled is false",
														"items": {
															"type": "string",
															"example": "uplink1"
														}
													},
													"lags": {
														"type": "array",
														"description": "A list of link aggregation groups (LAG). This property is only used when nic_profile is ADVANCED_CUSTOMER_SUPPLIED_VDS and LAG is used on the portgroup.",
														"items": {
															"type": "string",
															"example": "lag1"
														}
													},
													"failover_order": {
														"type": "object",
														"description": "This property is only used when nic_profile is ADVANCED_VXRAIL_SUPPLIED_VDS to define uplink failover.",
														"properties": {
															"active": {
																"type": "array",
																"description": "A list of active uplinks",
																"items": {
																	"type": "string",
																	"example": "uplink1"
																}
															},
															"standby": {
																"type": "array",
																"description": "A list of standby uplinks",
																"items": {
																	"type": "string",
																	"example": "uplink2"
																}
															}
														}
													},
													"load_balance_policy": {
														"type": "string",
														"description": "The load balance policy for portgroup",
														"enum": [
															"FAILOVER_EXPLICIT",
															"LOADBALANCE_SRCMAC",
															"LOADBALANCE_SRCID",
															"LOADBALANCE_LOADBASED"
														],
														"example": "LOADBALANCE_SRCID"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"storage": {
						"type": "object",
						"description": "The current storage configuration. The disk_group_type and primary_storage_type properties are mutually exclusive. Use disk_group_type for vSAN clusters and primary_storage_type for dynamic node clusters.",
						"properties": {
							"disk_group_type": {
								"type": "string",
								"description": "The disk group configuration for the appliance. The property is used only for vSAN clusters.",
								"enum": [
									"1001",
									"1002",
									"2403",
									"2404",
									"2804"
								],
								"example": "2403"
							},
							"primary_storage_type": {
								"type": "string",
								"description": "The primary storage configuration for the appliance. This property is used only for dynamic node clusters.",
								"enum": [
									"VMFS_ON_FC",
									"EXTERNAL"
								],
								"example": "VMFS_ON_FC"
							}
						}
					}
				},
				"required": [
					"version",
					"global",
					"hosts",
					"vcenter",
					"vxrail_manager",
					"network"
				]
			},
			"CustomerSuppliedHostInfo": {
				"type": "object",
				"description": "User-specified host information",
				"required": [
					"management_ip"
				],
				"properties": {
					"management_ip": {
						"type": "string",
						"description": "User-specified host management IP address",
						"example": "192.168.1.1"
					},
					"current_root_password": {
						"type": "string",
						"description": "Indicates the host (root) account password specified by the user. If the password is not entered, the default ESXi host (root) password is considered.",
						"writeOnly": true,
						"example": "password"
					}
				},
				"x-examples": {
					"Example": {
						"management_ip": "192.168.1.1"
					}
				}
			},
			"CustomerSuppliedHostInfoV2": {
				"type": "object",
				"description": "User-specified host information",
				"properties": {
					"management_ip": {
						"type": "string",
						"description": "User-specified host management IP address",
						"example": "192.168.1.1"
					},
					"current_root_password": {
						"type": "string",
						"description": "Indicates the host (root) account password specified by the user. If the password is not entered, the default ESXi host (root) password is considered.",
						"writeOnly": true,
						"example": "password"
					}
				},
				"x-examples": {
					"Example": {
						"management_ip": "192.168.1.1"
					}
				}
			},
			"HostStorageInfo": {
				"type": "object",
				"description": "Information of the customer supplied storage configuration",
				"x-examples": {
					"Example": {
						"slot_claims": [
							{
								"usage": "non-vSAN",
								"values": [
									{
										"slots": "3,6,7-8"
									}
								]
							}
						]
					}
				},
				"properties": {
					"slot_claims": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"usage": {
									"type": "string",
									"example": "non-vSAN",
									"description": "The type of usage the slot values are claimed as. Supported values are vSAN and non-vSAN"
								},
								"values": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"slots": {
												"type": "string",
												"example": "3,6,7-8",
												"description": "A list of disk slots that are claimed as the type of usage defined in usage. Example values include 3,6,7-8."
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"HostSlotMappingRequest": {
				"type": "object",
				"properties": {
					"host_serial_number": {
						"description": "Serial number of the host. This property is mandatory if the customer_supplied property is not supplied.",
						"type": "string"
					},
					"diskgroup_type": {
						"description": "The disk group configuration for the appliance",
						"type": "string"
					},
					"customer_supplied": {
						"$ref": "#/components/schemas/CustomerSuppliedNodeInfoForSlotMapping"
					}
				},
				"x-examples": {
					"Example": {
						"host_serial_number": "string",
						"diskgroup_type": "string",
						"customer_supplied": {
							"management_ip": "string",
							"current_root_password": "string",
							"diskgroup_type": "string"
						}
					}
				}
			},
			"CustomerSuppliedNodeInfoForSlotMapping": {
				"type": "object",
				"description": "Information about the management server. This property is mandatory if the host_serial_number property is not supplied.",
				"required": [
					"management_ip",
					"current_root_password"
				],
				"properties": {
					"management_ip": {
						"description": "Management IP address",
						"type": "string"
					},
					"current_root_password": {
						"description": "Root password",
						"type": "string"
					},
					"diskgroup_type": {
						"description": "Disk Group",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"management_ip": "string",
						"current_root_password": "string",
						"diskgroup_type": "string"
					}
				}
			},
			"CustomerSuppliedNodeInfo": {
				"type": "object",
				"description": "Information about the management server. This property is mandatory if the host_serial_number property is not supplied.",
				"required": [
					"current_root_password"
				],
				"properties": {
					"management_ip": {
						"description": "Management IP address",
						"type": "string"
					},
					"current_root_password": {
						"description": "Root password",
						"type": "string"
					},
					"diskgroup_type": {
						"description": "Disk Group",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"management_ip": "string",
						"current_root_password": "string",
						"diskgroup_type": "string"
					}
				}
			},
			"HostDiskSlotMappingsResponse": {
				"type": "object",
				"description": "all_slots,vsan_slots,non_vsan_slots,unmanaged_slots,diskgroup_type is required",
				"required": [
					"host"
				],
				"properties": {
					"host": {
						"description": "If host_serial_number is supplied in the request object, this property returns the host serial number. Otherwise, the property returns the host ID ip address.",
						"type": "string",
						"example": "969WVL2 or 10.12.103.102 or 2001:db8:1ab:16::101"
					},
					"all_slots": {
						"description": "Information about slot positions for all disk drives",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/bayInfo"
						}
					},
					"vsan_slots": {
						"description": "A list of all slot positions where a disk drive is claimed for vSAN usage",
						"type": "object",
						"properties": {
							"capacity": {
								"type": "array",
								"description": "Contains information about slot drives claimed for capacity usage",
								"items": {
									"$ref": "#/components/schemas/bayInfoWithDG"
								}
							},
							"cache": {
								"type": "array",
								"description": "Contains information about slot drives claimed for cache usage",
								"items": {
									"$ref": "#/components/schemas/bayInfoWithDG"
								}
							}
						}
					},
					"non_vsan_slots": {
						"description": "A list of all slot positions where a disk drive is claimed for non-vSAN usage",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/bayInfo"
						}
					},
					"diskgroup_type": {
						"type": "string"
					},
					"unmanaged_slots": {
						"description": "A list of all slot positions where a disk drive is claimed for unmanaged usage",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/bayInfo"
						}
					}
				},
				"x-examples": {
					"Example": {
						"host": "969WVL2 or 10.12.103.102 or 2001:db8:1ab:16::101",
						"all_slots": [
							{
								"bay_id": {
									"slots": [
										0
									]
								}
							}
						],
						"vsan_slots": {
							"capacity": [
								{
									"bay_id": {
										"slots": [
											{
												"slot": 0,
												"diskgroup": 0
											}
										]
									}
								}
							],
							"cache": [
								{
									"bay_id": {
										"slots": [
											{
												"slot": 0,
												"diskgroup": 0
											}
										]
									}
								}
							]
						},
						"non_vsan_slots": [
							{
								"bay_id": {
									"slots": [
										0
									]
								}
							}
						],
						"diskgroup_type": "string",
						"unmanaged_slots": [
							{
								"bay_id": {
									"slots": [
										0
									]
								}
							}
						]
					}
				}
			},
			"bayInfo": {
				"type": "object",
				"properties": {
					"bay_id": {
						"description": "Bay ID. For example, bay0 or bay1",
						"type": "object",
						"properties": {
							"slots": {
								"description": "Slot number",
								"type": "array",
								"items": {
									"type": "integer"
								}
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"bay_id": {
							"slots": [
								0
							]
						}
					}
				}
			},
			"bayInfoWithDG": {
				"type": "object",
				"properties": {
					"bay_id": {
						"description": "Bay ID. For example, bay0 or bay1",
						"type": "object",
						"properties": {
							"slots": {
								"description": "A list of all vSAN slots",
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"slot": {
											"type": "integer",
											"description": "Slot number"
										},
										"diskgroup": {
											"type": "integer",
											"description": "Disk group number"
										}
									}
								}
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"bay_id": {
							"slots": [
								{
									"slot": 0,
									"diskgroup": 0
								}
							]
						}
					}
				}
			},
			"DiscoveredNodeInfo": {
				"description": "Information of the discovered node.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID of the node. ID=appliance_id + number of total supported nodes in a chassis + node position",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the node",
						"type": "string"
					},
					"slot": {
						"description": "Position of the rack slot where the VxRail host appliance is installed",
						"type": "integer"
					},
					"model": {
						"description": "Platform model of the node",
						"type": "string"
					},
					"serial_number": {
						"description": "The serial number of the node",
						"type": "string"
					},
					"appliance_id": {
						"description": "Product serial number tag (PSNT) or application ID of the node",
						"type": "string"
					},
					"is_primary_node": {
						"description": "Whether the node is the primary node",
						"type": "boolean"
					},
					"cluster_affinity": {
						"description": "Whether the node is installed in the current cluster",
						"type": "boolean"
					},
					"discovered_date": {
						"description": "Discovered date of the node",
						"type": "integer",
						"format": "int64"
					},
					"bios_uuid": {
						"description": "Bios UUID of the node",
						"type": "string"
					}
				},
				"required": [
					"id",
					"psnt",
					"slot",
					"model",
					"serial_number",
					"appliance_id",
					"is_primary_node",
					"cluster_affinity",
					"discovered_date",
					"bios_uuid"
				],
				"x-examples": {
					"example-1": {
						"id": "V0101040000000-01-01",
						"psnt": "V0101040000000",
						"slot": 1,
						"model": "VxRail E660",
						"serial_number": "V010104",
						"appliance_id": "V0101040000000",
						"is_primary_node": false,
						"cluster_affinity": false,
						"discovered_date": 1648883092686,
						"bios_uuid": "d2652242-7dab-47dc-7548-9375cab57fe7"
					}
				}
			},
			"DiscoveredNodeInfoV2": {
				"description": "Information of the discovered node.",
				"type": "object",
				"required": [
					"esxi_version",
					"idrac_ip",
					"asset_tag",
					"serial_number",
					"primary",
					"model",
					"ssl_thumbprint",
					"ssh_thumbprint",
					"hardware_profile",
					"id"
				],
				"properties": {
					"id": {
						"$ref": "#/components/schemas/DiscoveredNodeIdInfo"
					},
					"esxi_version": {
						"description": "The ESXi version of the node",
						"type": "string"
					},
					"vxm_system_version": {
						"description": "The VxRail system version",
						"type": "string",
						"example": "7.0.200-26924297"
					},
					"evo_uuid": {
						"description": "UUID of VxRail Manager VM",
						"type": "string",
						"example": "564d04e4-bd1f-6d09-d30b-d202ec8f5446"
					},
					"primary_ip": {
						"description": "The IPv6 address of the first virtual NIC (vmk0) of the node (with a \":%eth1\" suffix)",
						"type": "string"
					},
					"fallback_ip": {
						"description": "Null. (For internal use only)",
						"type": "string",
						"deprecated": true
					},
					"idrac_ip": {
						"description": "The iDRAC IP address of the node",
						"type": "string"
					},
					"prerecoded_ip": {
						"description": "Null. (For internal use only)",
						"type": "string",
						"deprecated": true
					},
					"ip": {
						"description": "The IPv4 address of the node",
						"type": "string"
					},
					"asset_tag": {
						"description": "The asset tag of the node",
						"type": "string"
					},
					"serial_number": {
						"description": "The serial number of the node",
						"type": "string"
					},
					"primary": {
						"description": "Whether the node is the primary node",
						"type": "boolean"
					},
					"cluster_affinity": {
						"description": "Null. (For internal use only)",
						"type": "string",
						"enum": [
							"NONE",
							"MINE",
							"OTHER"
						],
						"deprecated": true
					},
					"ssl_thumbprint": {
						"description": "SSL thumbprint of the node",
						"type": "string"
					},
					"ssh_thumbprint": {
						"description": "SSH thumbprint of the node",
						"type": "string"
					},
					"uuid": {
						"$ref": "#/components/schemas/DiscoveredNodeUuidInfo"
					},
					"hardware_profile": {
						"$ref": "#/components/schemas/DiscoveredNodeHardwareProfileInfo"
					},
					"discovered_date": {
						"description": "Discovered date of the node",
						"type": "integer",
						"format": "int64",
						"deprecated": true
					},
					"configuration_state": {
						"description": "Configuration state of the node",
						"type": "string",
						"enum": [
							"UNCONFIGURED",
							"CONFIGURING",
							"CONFIGURED"
						]
					},
					"model": {
						"description": "Platform model of the node",
						"type": "string"
					},
					"ip_set": {
						"description": "Null. (For internal use only)",
						"type": "object",
						"deprecated": true
					},
					"node_version_info": {
						"$ref": "#/components/schemas/DiscoveredNodeVersionInfo"
					},
					"violations": {
						"description": "Messages about hardware profile violations",
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"x-examples": {
					"Example": {
						"id": {
							"appliance_id": "string",
							"position": 0,
							"total_supported_nodes": 0
						},
						"esxi_version": "string",
						"vxm_system_version": "7.0.200-26924297",
						"evo_uuid": "564d04e4-bd1f-6d09-d30b-d202ec8f5446",
						"primary_ip": "string",
						"fallback_ip": "string",
						"idrac_ip": "string",
						"prerecoded_ip": "string",
						"ip": "string",
						"asset_tag": "string",
						"serial_number": "string",
						"primary": true,
						"cluster_affinity": "NONE",
						"ssl_thumbprint": "string",
						"ssh_thumbprint": "string",
						"uuid": {
							"host": "a3890c73-c1b7-488f-b530-c94131ae202d"
						},
						"hardware_profile": {
							"cpu": {
								"cores": 0,
								"speed": 0
							},
							"memory": {
								"size": 0
							},
							"nics": [
								{
									"name": "string",
									"speed": 0,
									"port_info": "string",
									"product_name": "string"
								}
							],
							"disks": [
								{
									"ssd": true,
									"blocks": 0,
									"block_size": 0
								}
							]
						},
						"discovered_date": 0,
						"configuration_state": "UNCONFIGURED",
						"model": "string",
						"ip_set": {},
						"node_version_info": {
							"version": "string",
							"build": 0
						},
						"violations": [
							"string"
						]
					}
				}
			},
			"DiscoveredNodeIdInfo": {
				"description": "Identity information of the discovered node",
				"type": "object",
				"required": [
					"appliance_id"
				],
				"properties": {
					"appliance_id": {
						"description": "PSNT/appliance ID of the node",
						"type": "string"
					},
					"position": {
						"description": "The node position in the chassis. For G Series appliances, this parameter indicates the position of the node in the chassis. A G Series appliance can fit up to 4 nodes in a chassis. For all other appliance models, the position value is 1.",
						"type": "integer"
					},
					"total_supported_nodes": {
						"description": "Total number of supported nodes",
						"type": "integer"
					}
				},
				"x-examples": {
					"Example": {
						"appliance_id": "string",
						"position": 0,
						"total_supported_nodes": 0
					}
				}
			},
			"DiscoveredNodeUuidInfo": {
				"description": "UUID information of the discovered node.",
				"type": "object",
				"required": [
					"host"
				],
				"properties": {
					"host": {
						"description": "The UUID of the node",
						"type": "string",
						"format": "uuid"
					}
				},
				"x-examples": {
					"Example": {
						"host": "a3890c73-c1b7-488f-b530-c94131ae202d"
					}
				}
			},
			"DiscoveredNodeHardwareProfileInfo": {
				"description": "Hardware profile of the discovered node, including the NIC profile, CPU configuration, and memory configuration",
				"type": "object",
				"required": [
					"cpu",
					"nics",
					"memory"
				],
				"properties": {
					"cpu": {
						"description": "Information about the CPU",
						"type": "object",
						"properties": {
							"cores": {
								"description": "Number of CPU cores",
								"type": "integer"
							},
							"speed": {
								"description": "CPU speed in MHz",
								"type": "number"
							}
						}
					},
					"memory": {
						"description": "Information about the memory",
						"type": "object",
						"properties": {
							"size": {
								"description": "Memory size",
								"type": "number"
							}
						}
					},
					"nics": {
						"description": "Information about the NICs",
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"name": {
									"description": "NIC device name",
									"type": "string"
								},
								"speed": {
									"description": "NIC speed in MB",
									"type": "number"
								},
								"port_info": {
									"description": "Physical port information about the NIC",
									"type": "string"
								},
								"product_name": {
									"description": "NIC product name",
									"type": "string"
								}
							}
						}
					},
					"disks": {
						"description": "Information about the disks",
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"ssd": {
									"description": "Whether the disk drive is an SSD",
									"type": "boolean"
								},
								"blocks": {
									"description": "Block count",
									"type": "number"
								},
								"block_size": {
									"description": "Block size",
									"type": "number"
								}
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"cpu": {
							"cores": 0,
							"speed": 0
						},
						"memory": {
							"size": 0
						},
						"nics": [
							{
								"name": "string",
								"speed": 0,
								"port_info": "string",
								"product_name": "string"
							}
						],
						"disks": [
							{
								"ssd": true,
								"blocks": 0,
								"block_size": 0
							}
						]
					}
				}
			},
			"DiscoveredNodeHardwareProfileInfoV2": {
				"description": "Hardware profile of the discovered node. Added support for DPUs and GPUs in v2.",
				"type": "object",
				"required": [
					"cpu",
					"nics",
					"memory"
				],
				"properties": {
					"cpu": {
						"description": "Information about the CPU",
						"type": "object",
						"properties": {
							"cores": {
								"description": "Number of CPU cores",
								"type": "integer"
							},
							"speed": {
								"description": "CPU speed in MHz",
								"type": "number"
							}
						}
					},
					"memory": {
						"description": "Information about the memory",
						"type": "object",
						"properties": {
							"size": {
								"description": "Memory size",
								"type": "number"
							}
						}
					},
					"nics": {
						"description": "Information about the NICs",
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"name": {
									"description": "NIC device name",
									"type": "string"
								},
								"speed": {
									"description": "NIC speed in MB",
									"type": "number"
								},
								"port_info": {
									"description": "Physical port information about the NIC",
									"type": "string"
								},
								"product_name": {
									"description": "NIC product name",
									"type": "string"
								}
							}
						}
					},
					"disks": {
						"description": "Information about the disks",
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"ssd": {
									"description": "Whether the disk drive is an SSD",
									"type": "boolean"
								},
								"blocks": {
									"description": "Block count",
									"type": "number"
								},
								"block_size": {
									"description": "Block size",
									"type": "number"
								}
							}
						}
					},
					"dpus": {
						"description": "Optional information about the DPUs",
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"description": "DPU ID",
									"type": "string"
								},
								"model": {
									"description": "DPU model name",
									"type": "string"
								}
							}
						}
					},
					"gpus": {
						"description": "Optional information about the GPUs",
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"description": "GPU ID",
									"type": "string"
								},
								"model": {
									"description": "GPU model name",
									"type": "string"
								}
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"cpu": {
							"cores": 0,
							"speed": 0
						},
						"memory": {
							"size": 0
						},
						"nics": [
							{
								"name": "string",
								"speed": 0,
								"port_info": "string",
								"product_name": "string"
							}
						],
						"disks": [
							{
								"ssd": true,
								"blocks": 0,
								"block_size": 0
							}
						],
						"dpus": [
							{
								"id": "string"
							},
							{
								"model": "string"
							}
						]
					}
				}
			},
			"DiscoveredNodeVersionInfo": {
				"description": "Version information of the discovered node.",
				"type": "object",
				"required": [
					"version"
				],
				"properties": {
					"version": {
						"description": "version string",
						"type": "string"
					},
					"build": {
						"description": "build number",
						"type": "integer"
					}
				},
				"x-examples": {
					"Example": {
						"version": "string",
						"build": 0
					}
				}
			},
			"DiscoveredNodesInfoV3": {
				"type": "object",
				"properties": {
					"version": {
						"type": "string",
						"description": "Response version of the discovered nodes",
						"example": "3.0"
					},
					"nodes": {
						"type": "array",
						"description": "Array of discovered nodes",
						"items": {
							"$ref": "#/components/schemas/DiscoveredNodeInfoV5"
						}
					}
				},
				"x-examples": {
					"Example": {
						"version": "3.0",
						"nodes": [
							{
								"id": {
									"appliance_id": "string",
									"position": 0,
									"total_supported_nodes": 0
								},
								"esxi_version": "string",
								"vxm_system_version": "7.0.200-26924297",
								"evo_uuid": "564d04e4-bd1f-6d09-d30b-d202ec8f5446",
								"primary_ip": "string",
								"idrac_ip": "string",
								"idrac_ipv6": "string",
								"ip": "string",
								"ipv6": "string",
								"asset_tag": "string",
								"serial_number": "string",
								"primary": true,
								"ssl_thumbprint": "string",
								"ssh_thumbprint": "string",
								"uuid": {
									"host": "a3890c73-c1b7-488f-b530-c94131ae202d"
								},
								"hardware_profile": {
									"cpu": {
										"cores": 0,
										"speed": 0
									},
									"memory": {
										"size": 0
									},
									"nics": [
										{
											"name": "string",
											"speed": 0,
											"port_info": "string",
											"product_name": "string"
										}
									],
									"disks": [
										{
											"ssd": true,
											"blocks": 0,
											"block_size": 0
										}
									]
								},
								"disk_group_config": {
									"recommendation": {
										"type": "2403",
										"description": "string"
									},
									"options": [
										{
											"type": "2403",
											"description": "string"
										}
									]
								},
								"storage_types": [
									"LOCAL"
								],
								"configuration_state": "UNCONFIGURED",
								"model": "string",
								"violations": [
									"string"
								]
							}
						]
					}
				}
			},
			"DiscoveredNodesInfoV4": {
				"type": "object",
				"properties": {
					"version": {
						"type": "string",
						"description": "Response version of the discovered nodes",
						"example": "3.0"
					},
					"nodes": {
						"type": "array",
						"description": "Array of discovered nodes",
						"items": {
							"$ref": "#/components/schemas/DiscoveredNodeInfoV6"
						}
					}
				},
				"x-examples": {
					"Example": {
						"version": "3.0",
						"nodes": [
							{
								"id": {
									"appliance_id": "string",
									"position": 0,
									"total_supported_nodes": 0
								},
								"esxi_version": "string",
								"vxm_system_version": "7.0.200-26924297",
								"evo_uuid": "564d04e4-bd1f-6d09-d30b-d202ec8f5446",
								"primary_ip": "string",
								"idrac_ip": "string",
								"idrac_ipv6": "string",
								"ip": "string",
								"ipv6": "string",
								"asset_tag": "string",
								"serial_number": "string",
								"primary": true,
								"ssl_thumbprint": "string",
								"ssh_thumbprint": "string",
								"uuid": {
									"host": "a3890c73-c1b7-488f-b530-c94131ae202d"
								},
								"hardware_profile": {
									"cpu": {
										"cores": 0,
										"speed": 0
									},
									"memory": {
										"size": 0
									},
									"nics": [
										{
											"name": "string",
											"speed": 0,
											"port_info": "string",
											"product_name": "string"
										}
									],
									"disks": [
										{
											"ssd": true,
											"blocks": 0,
											"block_size": 0
										}
									]
								},
								"disk_group_config": {
									"recommendation": {
										"type": "2403",
										"description": "string"
									},
									"options": [
										{
											"type": "2403",
											"description": "string"
										}
									]
								},
								"storage_types": [
									"LOCAL"
								],
								"configuration_state": "UNCONFIGURED",
								"model": "string",
								"violations": [
									"string"
								]
							}
						]
					}
				}
			},
			"DiscoveredNodeInfoV5": {
				"description": "Information about the discovered node",
				"type": "object",
				"required": [
					"esxi_version",
					"asset_tag",
					"serial_number",
					"primary",
					"model",
					"ssl_thumbprint",
					"ssh_thumbprint",
					"hardware_profile",
					"id",
					"storage_types"
				],
				"properties": {
					"id": {
						"$ref": "#/components/schemas/DiscoveredNodeIdInfo"
					},
					"esxi_version": {
						"description": "ESXi version of the node",
						"type": "string"
					},
					"vxm_system_version": {
						"description": "VxRail system version",
						"type": "string",
						"example": "7.0.200-26924297"
					},
					"evo_uuid": {
						"description": "UUID of the VxRail Manager VM",
						"type": "string",
						"example": "564d04e4-bd1f-6d09-d30b-d202ec8f5446"
					},
					"primary_ip": {
						"description": "The IPv6 address of the first virtual NIC (vmk0) of the node",
						"type": "string"
					},
					"idrac_ip": {
						"description": "iDRAC IPv4 address of the node",
						"type": "string"
					},
					"idrac_ipv6": {
						"description": "Internal use only",
						"type": "string"
					},
					"ip": {
						"description": "IPv4 address of the node",
						"type": "string"
					},
					"ipv6": {
						"description": "Internal use only",
						"type": "string"
					},
					"asset_tag": {
						"description": "Asset tag of the node",
						"type": "string"
					},
					"serial_number": {
						"description": "Serial number of the node",
						"type": "string"
					},
					"primary": {
						"description": "Whether the node is the primary node",
						"type": "boolean"
					},
					"ssl_thumbprint": {
						"description": "SSL thumbprint of the node",
						"type": "string"
					},
					"ssh_thumbprint": {
						"description": "SSH thumbprint of the node",
						"type": "string"
					},
					"uuid": {
						"$ref": "#/components/schemas/DiscoveredNodeUuidInfo"
					},
					"hardware_profile": {
						"$ref": "#/components/schemas/DiscoveredNodeHardwareProfileInfo"
					},
					"disk_group_config": {
						"$ref": "#/components/schemas/DiscoveredNodeDiskGroupConfigInfo"
					},
					"storage_types": {
						"description": "Storage type of the node",
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"LOCAL",
								"EXTERNAL",
								"NONE",
								"UNKNOWN"
							],
							"example": "LOCAL"
						}
					},
					"configuration_state": {
						"description": "Configuration state of the node",
						"type": "string",
						"enum": [
							"UNCONFIGURED",
							"CONFIGURING",
							"CONFIGURED"
						]
					},
					"model": {
						"description": "Appliance model of the node",
						"type": "string"
					},
					"violations": {
						"description": "Messages about hardware profile violations",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"vlcm_software_spec": {
						"$ref": "#/components/schemas/VlcmImageDepotInfo"
					}
				},
				"x-examples": {
					"Example": {
						"id": {
							"appliance_id": "string",
							"position": 0,
							"total_supported_nodes": 0
						},
						"esxi_version": "string",
						"vxm_system_version": "7.0.200-26924297",
						"evo_uuid": "564d04e4-bd1f-6d09-d30b-d202ec8f5446",
						"primary_ip": "string",
						"idrac_ip": "string",
						"idrac_ipv6": "string",
						"ip": "string",
						"ipv6": "string",
						"asset_tag": "string",
						"serial_number": "string",
						"primary": true,
						"ssl_thumbprint": "string",
						"ssh_thumbprint": "string",
						"uuid": {
							"host": "a3890c73-c1b7-488f-b530-c94131ae202d"
						},
						"hardware_profile": {
							"cpu": {
								"cores": 0,
								"speed": 0
							},
							"memory": {
								"size": 0
							},
							"nics": [
								{
									"name": "string",
									"speed": 0,
									"port_info": "string",
									"product_name": "string"
								}
							],
							"disks": [
								{
									"ssd": true,
									"blocks": 0,
									"block_size": 0
								}
							]
						},
						"disk_group_config": {
							"recommendation": {
								"type": "2403",
								"description": "string"
							},
							"options": [
								{
									"type": "2403",
									"description": "string"
								}
							]
						},
						"storage_types": [
							"LOCAL"
						],
						"configuration_state": "UNCONFIGURED",
						"model": "string",
						"violations": [
							"string"
						],
						"vlcm_software_spec": {
							"base_image": {
								"version": "7.0.3"
							},
							"components": {
								"Intel-i40en": "2.1.5.0-1OEM.700.1.0.15843807",
								"Intel-icen": "1.6.2.0-1OEM.700.1.0.15843807"
							},
							"hardware_support": {
								"packages": {
									"com.vxrail.hsm": {
										"version": "8.0.000-27506022",
										"pkg": "vxrail-hsp"
									}
								}
							}
						}
					}
				}
			},
			"DiscoveredNodeInfoV6": {
				"description": "Information about the discovered node",
				"type": "object",
				"required": [
					"esxi_version",
					"asset_tag",
					"serial_number",
					"primary",
					"model",
					"ssl_thumbprint",
					"ssh_thumbprint",
					"hardware_profile",
					"id",
					"storage_types"
				],
				"properties": {
					"id": {
						"$ref": "#/components/schemas/DiscoveredNodeIdInfo"
					},
					"esxi_version": {
						"description": "ESXi version of the node",
						"type": "string"
					},
					"vxm_system_version": {
						"description": "VxRail system version",
						"type": "string",
						"example": "7.0.200-26924297"
					},
					"evo_uuid": {
						"description": "UUID of the VxRail Manager VM",
						"type": "string",
						"example": "564d04e4-bd1f-6d09-d30b-d202ec8f5446"
					},
					"primary_ip": {
						"description": "The IPv6 address of the first virtual NIC (vmk0) of the node",
						"type": "string"
					},
					"idrac_ip": {
						"description": "iDRAC IPv4 address of the node",
						"type": "string"
					},
					"idrac_ipv6": {
						"description": "Internal use only",
						"type": "string"
					},
					"ip": {
						"description": "IPv4 address of the node",
						"type": "string"
					},
					"ipv6": {
						"description": "Internal use only",
						"type": "string"
					},
					"asset_tag": {
						"description": "Asset tag of the node",
						"type": "string"
					},
					"serial_number": {
						"description": "Serial number of the node",
						"type": "string"
					},
					"primary": {
						"description": "Whether the node is the primary node",
						"type": "boolean"
					},
					"ssl_thumbprint": {
						"description": "SSL thumbprint of the node",
						"type": "string"
					},
					"ssh_thumbprint": {
						"description": "SSH thumbprint of the node",
						"type": "string"
					},
					"uuid": {
						"$ref": "#/components/schemas/DiscoveredNodeUuidInfo"
					},
					"hardware_profile": {
						"$ref": "#/components/schemas/DiscoveredNodeHardwareProfileInfo"
					},
					"disk_group_config": {
						"$ref": "#/components/schemas/DiscoveredNodeDiskGroupConfigInfo"
					},
					"storage_types": {
						"description": "Storage type of the node",
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"LOCAL",
								"EXTERNAL",
								"NONE",
								"UNKNOWN"
							],
							"example": "LOCAL"
						}
					},
					"configuration_state": {
						"description": "Configuration state of the node",
						"type": "string",
						"enum": [
							"UNCONFIGURED",
							"CONFIGURING",
							"CONFIGURED"
						]
					},
					"model": {
						"description": "Appliance model of the node",
						"type": "string"
					},
					"violations": {
						"description": "Messages about hardware profile violations",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"vlcm_software_spec": {
						"$ref": "#/components/schemas/VlcmImageDepotInfo"
					}
				},
				"x-examples": {
					"Example": {
						"id": {
							"appliance_id": "string",
							"position": 0,
							"total_supported_nodes": 0
						},
						"esxi_version": "string",
						"vxm_system_version": "7.0.200-26924297",
						"evo_uuid": "564d04e4-bd1f-6d09-d30b-d202ec8f5446",
						"primary_ip": "string",
						"idrac_ip": "string",
						"idrac_ipv6": "string",
						"ip": "string",
						"ipv6": "string",
						"asset_tag": "string",
						"serial_number": "string",
						"primary": true,
						"ssl_thumbprint": "string",
						"ssh_thumbprint": "string",
						"uuid": {
							"host": "a3890c73-c1b7-488f-b530-c94131ae202d"
						},
						"hardware_profile": {
							"cpu": {
								"cores": 0,
								"speed": 0
							},
							"memory": {
								"size": 0
							},
							"nics": [
								{
									"name": "string",
									"speed": 0,
									"port_info": "string",
									"product_name": "string"
								}
							],
							"disks": [
								{
									"ssd": true,
									"blocks": 0,
									"block_size": 0
								}
							]
						},
						"disk_group_config": {
							"recommendation": {
								"type": "2403",
								"description": "string"
							},
							"options": [
								{
									"type": "2403",
									"description": "string"
								}
							]
						},
						"storage_types": [
							"LOCAL"
						],
						"configuration_state": "UNCONFIGURED",
						"model": "string",
						"violations": [
							"string"
						],
						"vlcm_software_spec": {
							"base_image": {
								"version": "7.0.3"
							},
							"components": {
								"Intel-i40en": "2.1.5.0-1OEM.700.1.0.15843807",
								"Intel-icen": "1.6.2.0-1OEM.700.1.0.15843807"
							},
							"hardware_support": {
								"packages": {
									"com.vxrail.hsm": {
										"version": "8.0.000-27506022",
										"pkg": "vxrail-hsp"
									}
								}
							}
						}
					}
				}
			},
			"DiscoveredNodeDiskGroupConfigInfo": {
				"description": "Configuration information for the disk group, including recommendations and options. This object is only returned for VxRail 15G models that use Intel CPUs.",
				"type": "object",
				"required": [
					"recommendation",
					"options"
				],
				"properties": {
					"recommendation": {
						"$ref": "#/components/schemas/DiskGroupTypeAndDesInfo"
					},
					"options": {
						"description": "Disk group options",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DiskGroupTypeAndDesInfo"
						}
					}
				}
			},
			"DiskGroupTypeAndDesInfo": {
				"description": "Information about the disk group type and description",
				"type": "object",
				"properties": {
					"type": {
						"description": "The type of disk group configuration",
						"type": "string",
						"enum": [
							"1001",
							"1002",
							"2403",
							"2404",
							"2804"
						],
						"example": "2403"
					},
					"description": {
						"description": "Description of the disk group type",
						"type": "string"
					}
				}
			},
			"DiskInfo": {
				"description": "Information about the disk drives",
				"properties": {
					"id": {
						"description": "ID of the disk",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the disk",
						"type": "string"
					},
					"guid": {
						"description": "disk guid",
						"type": "string"
					},
					"disk_type": {
						"description": "Type of disk drive",
						"type": "string"
					},
					"protocol": {
						"description": "Type of transport protocol",
						"type": "string"
					},
					"enclosure": {
						"description": "Enclosure where the disk is installed",
						"type": "integer"
					},
					"bay": {
						"description": "Bay number of the disk",
						"type": "integer"
					},
					"slot": {
						"description": "Slot where the disk is installed",
						"type": "integer"
					},
					"missing": {
						"description": "Whether the disk health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"capacity": {
						"description": "Capacity of the disk",
						"type": "string"
					}
				}
			},
			"Host": {
				"description": "Information about a VxRail host and its associated subcomponents.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string",
						"example": "969WVL2"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Hostname of the host",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the VxRail system. Supported values are Critical, Error, Warning, and Healthy",
						"type": "string"
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host",
						"type": "string"
					},
					"boot_devices": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BootDevice"
						}
					},
					"nics": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Nic"
						}
					},
					"disks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DiskInfo"
						}
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfo"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "969WVL2",
						"slot": 0,
						"hostname": "string",
						"name": "string",
						"manufacturer": "string",
						"psnt": "string",
						"led_status": "string",
						"health": "string",
						"missing": true,
						"tpm_present": true,
						"operational_status": "string",
						"power_status": "string",
						"boot_devices": [
							{
								"id": "string",
								"sn": "string",
								"device_model": "string",
								"sata_type": "string",
								"power_on_hours": 0,
								"power_cycle_count": 0,
								"max_erase_count": 0,
								"avr_erase_count": 0,
								"capacity": "string",
								"health": "string",
								"firmware_version": "string",
								"bootdevice_type": "string",
								"block_size": "string",
								"slot": 1
							}
						],
						"nics": [
							{
								"id": "string",
								"mac": "string",
								"link_status": "string",
								"link_speed": "string",
								"slot": 0,
								"firmware_family_version": "string"
							}
						],
						"disks": [
							{
								"id": "string",
								"sn": "string",
								"guid": "string",
								"disk_type": "string",
								"protocol": "string",
								"enclosure": 0,
								"bay": 0,
								"slot": 0,
								"missing": true,
								"capacity": "string"
							}
						],
						"firmwareInfo": {
							"bios_revision": "string",
							"bmc_revision": "string",
							"hba_version": "string",
							"expander_bpf_version": "string",
							"nonexpander_bpf_version": "string",
							"boss_version": "string",
							"cpld_version": "string"
						}
					}
				}
			},
			"ClusterHostInfo": {
				"description": "Information about a VxRail host and its associated subcomponents.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the host.",
						"type": "string"
					},
					"serial_number": {
						"description": "Serial number of the host.",
						"type": "string",
						"example": "969WVL2"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed.",
						"type": "integer"
					},
					"host_name": {
						"description": "Indicates the hostname.",
						"type": "string"
					},
					"appliance_id": {
						"description": "Host appliance ID.",
						"type": "string"
					},
					"model": {
						"description": "Host model.",
						"type": "string"
					},
					"is_primary_node": {
						"description": "Whether the node is a primary node.",
						"type": "boolean"
					},
					"cluster_affinity": {
						"description": "Whether the node is installed in current cluster.",
						"type": "boolean"
					},
					"discovered_date": {
						"description": "Discovered date.",
						"type": "integer"
					},
					"bios_uuid": {
						"description": "BIOS UUID.",
						"type": "string"
					},
					"segment_label": {
						"description": "Segment label.",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host.",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the host.",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host.",
						"type": "string"
					},
					"health": {
						"description": "Health status of the VxRail system. Supported values are Critical, Error, Warning, and Healthy.",
						"type": "string"
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical).",
						"type": "boolean"
					},
					"ip_set": {
						"description": "IPv4 information.",
						"type": "object",
						"properties": {
							"management_ip": {
								"type": "string",
								"description": "IPv4 for management."
							},
							"vsan_ip": {
								"type": "string",
								"description": "IPv4 for vSAN."
							},
							"vmotion_ip": {
								"type": "string",
								"description": "IPv4 for vMotion."
							}
						}
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host.",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host.",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host.",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"serial_number": "969WVL2",
						"slot": 0,
						"host_name": "string",
						"appliance_id": "string",
						"model": "string",
						"is_primary_node": true,
						"cluster_affinity": true,
						"discovered_date": 1533460206,
						"bios_uuid": "string",
						"segment_label": "string",
						"manufacturer": "string",
						"psnt": "string",
						"led_status": "string",
						"health": "string",
						"missing": true,
						"ip_set": {
							"management_ip": "string",
							"vsan_ip": "string",
							"vmotion_ip": "string"
						},
						"tpm_present": true,
						"operational_status": "string",
						"power_status": "string"
					}
				}
			},
			"ClusterHostInfoV2": {
				"description": "Information about a VxRail host and its associated subcomponents.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the host.",
						"type": "string"
					},
					"serial_number": {
						"description": "Serial number of the host.",
						"type": "string",
						"example": "969WVL2"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed.",
						"type": "integer"
					},
					"host_name": {
						"description": "Indicates the hostname.",
						"type": "string"
					},
					"appliance_id": {
						"description": "Host appliance ID.",
						"type": "string"
					},
					"model": {
						"description": "Host model.",
						"type": "string"
					},
					"is_primary_node": {
						"description": "Whether the node is a primary node.",
						"type": "boolean"
					},
					"cluster_affinity": {
						"description": "Whether the node is installed in current cluster.",
						"type": "boolean"
					},
					"discovered_date": {
						"description": "Discovered date.",
						"type": "integer"
					},
					"bios_uuid": {
						"description": "BIOS UUID.",
						"type": "string"
					},
					"segment_label": {
						"description": "Segment label.",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host.",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the host.",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host.",
						"type": "string"
					},
					"health": {
						"description": "Health status of the VxRail system. Supported values are Critical, Error, Warning, and Healthy.",
						"type": "string"
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical).",
						"type": "boolean"
					},
					"ip_set": {
						"description": "IPv4 information.",
						"type": "object",
						"properties": {
							"management_ip": {
								"type": "string",
								"description": "IPv4 for management."
							},
							"vsan_ip": {
								"type": "string",
								"description": "IPv4 for vSAN."
							},
							"vmotion_ip": {
								"type": "string",
								"description": "IPv4 for vMotion."
							}
						}
					},
					"ip_set_ipv6": {
						"description": "Internal use only.",
						"type": "object",
						"properties": {
							"management_ip": {
								"type": "string",
								"description": "Internal use only."
							},
							"vsan_ip": {
								"type": "string",
								"description": "Internal use only."
							},
							"vmotion_ip": {
								"type": "string",
								"description": "Internal use only."
							}
						}
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host.",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host.",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host.",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"serial_number": "969WVL2",
						"slot": 0,
						"host_name": "string",
						"appliance_id": "string",
						"model": "string",
						"is_primary_node": true,
						"cluster_affinity": true,
						"discovered_date": 1533460206,
						"bios_uuid": "string",
						"segment_label": "string",
						"manufacturer": "string",
						"psnt": "string",
						"led_status": "string",
						"health": "string",
						"missing": true,
						"ip_set": {
							"management_ip": "string",
							"vsan_ip": "string",
							"vmotion_ip": "string"
						},
						"ip_set_ipv6": {
							"management_ip": "string",
							"vsan_ip": "string",
							"vmotion_ip": "string"
						},
						"tpm_present": true,
						"operational_status": "string",
						"power_status": "string"
					}
				}
			},
			"BootDevice": {
				"description": "Information about each boot device on the VxRail host.",
				"properties": {
					"id": {
						"description": "ID of the boot device",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the boot device",
						"type": "string"
					},
					"device_model": {
						"description": "Model number of the boot device",
						"type": "string"
					},
					"sata_type": {
						"description": "Type of disk drive of the device",
						"type": "string"
					},
					"power_on_hours": {
						"description": "Number of hours the device is powered on",
						"type": "integer"
					},
					"power_cycle_count": {
						"description": "Number of times of the device power cycled",
						"type": "integer"
					},
					"max_erase_count": {
						"description": "Maximum erase count for the device",
						"type": "integer"
					},
					"avr_erase_count": {
						"description": "Average erase count for the device",
						"type": "integer"
					},
					"capacity": {
						"description": "Capacity of the device disk",
						"type": "string"
					},
					"health": {
						"description": "Health status of the boot device (percentage)",
						"type": "string"
					},
					"firmware_version": {
						"description": "Version of the firmware for the boot device",
						"type": "string"
					},
					"bootdevice_type": {
						"description": "Type of boot device",
						"type": "string"
					},
					"block_size": {
						"description": "block size of boot device",
						"type": "string"
					},
					"slot": {
						"description": "block size of boot device",
						"type": "integer",
						"example": 1
					}
				}
			},
			"Nic": {
				"description": "Information about each NIC on the VxRail host",
				"properties": {
					"id": {
						"description": "ID of the NIC",
						"type": "string"
					},
					"mac": {
						"description": "MAC address of the NIC",
						"type": "string"
					},
					"link_status": {
						"description": "The link status of the NIC",
						"type": "string"
					},
					"link_speed": {
						"description": "The link speed of the NIC",
						"type": "string"
					},
					"slot": {
						"description": "The slot position of the NIC",
						"type": "integer"
					},
					"firmware_family_version": {
						"description": "Version of the firmware for the NIC",
						"type": "string"
					}
				}
			},
			"NicV2": {
				"description": "Information about each NIC on the VxRail host",
				"properties": {
					"id": {
						"description": "ID of the NIC",
						"type": "string"
					},
					"type": {
						"description": "type of the NIC",
						"type": "string"
					},
					"mac": {
						"description": "MAC address of the NIC",
						"type": "string"
					},
					"link_status": {
						"description": "The link status of the NIC",
						"type": "string"
					},
					"link_speed": {
						"description": "The link speed of the NIC",
						"type": "string"
					},
					"slot": {
						"description": "The slot position of the NIC",
						"type": "integer"
					},
					"port": {
						"description": "The port position of the NIC",
						"type": "integer"
					},
					"firmware_family_version": {
						"description": "Version of the firmware for the NIC",
						"type": "string"
					},
					"drivers": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NicDriverInfo"
						}
					}
				}
			},
			"NicV3": {
				"description": "Information about each NIC on the VxRail host.",
				"properties": {
					"id": {
						"description": "ID of the NIC.",
						"type": "string"
					},
					"type": {
						"description": "Type of the NIC.",
						"type": "string"
					},
					"mac": {
						"description": "MAC address of the NIC.",
						"type": "string"
					},
					"link_status": {
						"description": "The link status of the NIC.",
						"type": "string"
					},
					"link_speed": {
						"description": "The link speed of the NIC.",
						"type": "string"
					},
					"slot": {
						"description": "The slot position of the NIC.",
						"type": "integer"
					},
					"port": {
						"description": "The port position of the NIC.",
						"type": "integer"
					},
					"firmware_family_version": {
						"description": "Firmware version of the NIC.",
						"type": "string"
					},
					"wwnn": {
						"description": "World Wide Node Name (WWNN) of a Fibre Channel card.",
						"type": "string"
					},
					"wwpn": {
						"description": "World Wide Port Name (WWPN) of a Fibre Channel card.",
						"type": "string"
					},
					"drivers": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NicDriverInfo"
						}
					}
				}
			},
			"NicDriverInfo": {
				"description": "Information about each NIC driver on the VxRail host",
				"x-examples": {
					"Example": {
						"driver_name": "string",
						"driver_version": "string"
					}
				},
				"type": "object",
				"properties": {
					"driver_name": {
						"description": "Name of the NIC driver",
						"type": "string"
					},
					"driver_version": {
						"description": "Version of the NIC driver",
						"type": "string"
					}
				}
			},
			"HostV2": {
				"description": "Information about a VxRail host and the associated subcomponents.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string",
						"example": "969WVL2"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Hostname of the host",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the VxRail system. Supported values are Critical, Error, Warning, and Healthy",
						"type": "string"
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host",
						"type": "string"
					},
					"boot_devices": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BootDevice"
						}
					},
					"nics": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Nic"
						}
					},
					"disks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DiskInfo"
						}
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfo"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "969WVL2",
						"slot": 0,
						"hostname": "string",
						"name": "string",
						"manufacturer": "string",
						"psnt": "string",
						"led_status": "string",
						"health": "string",
						"missing": true,
						"tpm_present": true,
						"operational_status": "string",
						"power_status": "string",
						"boot_devices": [
							{
								"id": "string",
								"sn": "string",
								"device_model": "string",
								"sata_type": "string",
								"power_on_hours": 0,
								"power_cycle_count": 0,
								"max_erase_count": 0,
								"avr_erase_count": 0,
								"capacity": "string",
								"health": "string",
								"firmware_version": "string",
								"bootdevice_type": "string",
								"block_size": "string",
								"slot": 1
							}
						],
						"nics": [
							{
								"id": "string",
								"mac": "string",
								"link_status": "string",
								"link_speed": "string",
								"slot": 0,
								"firmware_family_version": "string"
							}
						],
						"disks": [
							{
								"id": "string",
								"sn": "string",
								"guid": "string",
								"disk_type": "string",
								"protocol": "string",
								"enclosure": 0,
								"bay": 0,
								"slot": 0,
								"missing": true,
								"capacity": "string"
							}
						],
						"firmwareInfo": {
							"bios_revision": "string",
							"bmc_revision": "string",
							"hba_version": "string",
							"expander_bpf_version": "string",
							"nonexpander_bpf_version": "string",
							"boss_version": "string",
							"cpld_version": "string"
						},
						"geo_location": {
							"rack_name": "rack1",
							"order_number": 1
						}
					}
				}
			},
			"HostV3": {
				"description": "Information about a VxRail host and its associated subcomponents.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string",
						"example": "969WVL2"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Hostname of the host",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the VxRail system. Supported values are Critical, Error, Warning, and Healthy",
						"type": "string"
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host",
						"type": "string"
					},
					"boot_devices": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BootDevice"
						}
					},
					"nics": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Nic"
						}
					},
					"disks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DiskInfoV2"
						}
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfoV2"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "969WVL2",
						"slot": 0,
						"hostname": "string",
						"name": "string",
						"manufacturer": "string",
						"psnt": "string",
						"led_status": "string",
						"health": "string",
						"missing": true,
						"tpm_present": true,
						"operational_status": "string",
						"power_status": "string",
						"boot_devices": [
							{
								"id": "string",
								"sn": "string",
								"device_model": "string",
								"sata_type": "string",
								"power_on_hours": 0,
								"power_cycle_count": 0,
								"max_erase_count": 0,
								"avr_erase_count": 0,
								"capacity": "string",
								"health": "string",
								"firmware_version": "string",
								"bootdevice_type": "string",
								"block_size": "string",
								"slot": 1
							}
						],
						"nics": [
							{
								"id": "string",
								"mac": "string",
								"link_status": "string",
								"link_speed": "string",
								"slot": 0,
								"firmware_family_version": "string"
							}
						],
						"disks": [
							{
								"id": "string",
								"sn": "string",
								"guid": "string",
								"manufacturer": "string",
								"model": "string",
								"disk_type": "string",
								"protocol": "string",
								"max_capable_speed": "string",
								"enclosure": 0,
								"bay": 0,
								"slot": 0,
								"disk_state": "string",
								"led_status": "string",
								"missing": true,
								"capacity": "string",
								"write_endurance": "string",
								"write_endurance_status": "string",
								"remaining_write_endurance_rate": "string",
								"firmware_revision": "string",
								"disk_claim_type": "non-vSAN"
							}
						],
						"firmwareInfo": {
							"bios_revision": "string",
							"bmc_revision": "string",
							"hba_version": "string",
							"expander_bpf_version": "string",
							"nonexpander_bpf_version": "string",
							"boss_version": "string",
							"cpld_version": "string",
							"idsdm_version": "string",
							"dcpm_version": "string"
						},
						"geo_location": {
							"rack_name": "rack1",
							"order_number": 1
						}
					}
				}
			},
			"DiskInfoV2": {
				"description": "Information about each disk installed in the VxRail host.",
				"properties": {
					"id": {
						"description": "ID of the disk",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the disk",
						"type": "string"
					},
					"guid": {
						"description": "Guid of the disk",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the disk",
						"type": "string"
					},
					"model": {
						"description": "Model of the disk",
						"type": "string"
					},
					"disk_type": {
						"description": "Type of disk drive",
						"type": "string"
					},
					"protocol": {
						"description": "Type of transport protocol",
						"type": "string"
					},
					"max_capable_speed": {
						"description": "Maximum capable speed of the disk",
						"type": "string"
					},
					"enclosure": {
						"description": "Enclosure where the disk is installed",
						"type": "integer"
					},
					"bay": {
						"description": "Bay number of the disk",
						"type": "integer"
					},
					"slot": {
						"description": "Slot where the disk is installed",
						"type": "integer"
					},
					"disk_state": {
						"description": "Health state of the disk",
						"type": "string"
					},
					"led_status": {
						"description": "State of the LED indicator for the disk",
						"type": "string"
					},
					"missing": {
						"description": "Whether the disk health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"capacity": {
						"description": "Capacity of the disk",
						"type": "string"
					},
					"write_endurance": {
						"description": "Write endurance of the disk (usage percentage)",
						"type": "string"
					},
					"write_endurance_status": {
						"description": "Status of the write endurance of the disk",
						"type": "string"
					},
					"remaining_write_endurance_rate": {
						"description": "Remaining write endurance of the disk (percentage remaining)",
						"type": "string"
					},
					"firmware_revision": {
						"description": "Version of the firmware for the disk",
						"type": "string"
					},
					"disk_claim_type": {
						"description": "Type of storage claimed for the disk. Disks can be claimed as non-vSAN or vSAN storage",
						"type": "string",
						"enum": [
							"non-vSAN",
							"vSAN",
							"unmanaged"
						]
					}
				}
			},
			"HostV4": {
				"description": "Information about a VxRail host and its associated subcomponents. Add drive_configuration field",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string",
						"example": "969WVL2"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Hostname of the host",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the VxRail system. Supported values are Critical, Error, Warning, and Healthy",
						"type": "string"
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host",
						"type": "string"
					},
					"boot_devices": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BootDeviceV2"
						}
					},
					"nics": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Nic"
						}
					},
					"disks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DiskInfoV2"
						}
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfoV2"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					},
					"drive_configuration": {
						"$ref": "#/components/schemas/DriveConfigurationInfo"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "969WVL2",
						"slot": 0,
						"hostname": "string",
						"name": "string",
						"manufacturer": "string",
						"psnt": "string",
						"led_status": "string",
						"health": "string",
						"missing": true,
						"tpm_present": true,
						"operational_status": "string",
						"power_status": "string",
						"boot_devices": [
							{
								"id": "string",
								"sn": "PHYH013201XX480K",
								"device_model": "SSDSCJJB480G8R",
								"sata_type": "string",
								"power_on_hours": 1,
								"power_cycle_count": 1,
								"max_erase_count": 1,
								"avr_erase_count": 1,
								"capacity": "480103981056",
								"health": "string",
								"firmware_version": "2.5.13.4008",
								"bootdevice_type": "string",
								"block_size": "512",
								"slot": 1,
								"status": "NORMAL",
								"part_number": "TW07FXC3PIHiT0440",
								"manufacturer": "INTEL",
								"controller_firmware": "2.5.13.4008",
								"controller_model": "BOSS-S2",
								"controller_status": "NORMAL"
							}
						],
						"nics": [
							{
								"id": "string",
								"mac": "string",
								"link_status": "string",
								"link_speed": "string",
								"slot": 0,
								"firmware_family_version": "string"
							}
						],
						"disks": [
							{
								"id": "string",
								"sn": "string",
								"guid": "string",
								"manufacturer": "string",
								"model": "string",
								"disk_type": "string",
								"protocol": "string",
								"max_capable_speed": "string",
								"enclosure": 0,
								"bay": 0,
								"slot": 0,
								"disk_state": "string",
								"led_status": "string",
								"missing": true,
								"capacity": "string",
								"write_endurance": "string",
								"write_endurance_status": "string",
								"remaining_write_endurance_rate": "string",
								"firmware_revision": "string",
								"disk_claim_type": "non-vSAN"
							}
						],
						"firmwareInfo": {
							"bios_revision": "string",
							"bmc_revision": "string",
							"hba_version": "string",
							"expander_bpf_version": "string",
							"nonexpander_bpf_version": "string",
							"boss_version": "string",
							"cpld_version": "string",
							"idsdm_version": "string",
							"dcpm_version": "string"
						},
						"geo_location": {
							"rack_name": "rack1",
							"order_number": 1
						},
						"drive_configuration": {
							"type": "2401"
						}
					}
				}
			},
			"BootDeviceV2": {
				"description": "Information about each boot device on the VxRail host. Added three new fields part_number, manufacturer, controller_firmware, controller_model, and controller_status",
				"properties": {
					"id": {
						"description": "ID of the boot device",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the boot device",
						"type": "string",
						"example": "PHYH013201XX480K"
					},
					"device_model": {
						"description": "Model number of the boot device",
						"type": "string",
						"example": "SSDSCJJB480G8R"
					},
					"sata_type": {
						"description": "Type of disk drive of the device",
						"type": "string"
					},
					"power_on_hours": {
						"description": "Number of hours the device is powered on",
						"type": "integer",
						"example": 1
					},
					"power_cycle_count": {
						"description": "Number of times the device is powered on and off.",
						"type": "integer",
						"example": 1
					},
					"max_erase_count": {
						"description": "Maximum erase count for the device",
						"type": "integer",
						"example": 1
					},
					"avr_erase_count": {
						"description": "Average erase count for the device",
						"type": "integer",
						"example": 1
					},
					"capacity": {
						"description": "Capacity of the device disk",
						"type": "string",
						"example": "480103981056"
					},
					"health": {
						"description": "Health status of the boot device (percentage)",
						"type": "string"
					},
					"firmware_version": {
						"description": "Firmware version of the boot device.",
						"type": "string",
						"example": "2.5.13.4008"
					},
					"bootdevice_type": {
						"description": "Type of boot device",
						"type": "string"
					},
					"block_size": {
						"description": "Block size of the boot device",
						"type": "string",
						"example": "512"
					},
					"slot": {
						"description": "Block size of the boot device",
						"type": "integer",
						"example": 1
					},
					"status": {
						"description": "Status of the boot device",
						"type": "string",
						"example": "NORMAL"
					},
					"part_number": {
						"description": "Part number of the boot device",
						"type": "string",
						"example": "TW07FXC3PIHiT0440"
					},
					"manufacturer": {
						"description": "Manufacturer of the boot device",
						"type": "string",
						"example": "INTEL"
					},
					"controller_firmware": {
						"description": "Controller firmware version of the boot device",
						"type": "string",
						"example": "2.5.13.4008"
					},
					"controller_model": {
						"description": "Controller model of the boot device",
						"type": "string",
						"example": "BOSS-S2"
					},
					"controller_status": {
						"description": "Controller status of the boot device",
						"type": "string",
						"example": "NORMAL"
					}
				}
			},
			"BootDeviceV3": {
				"description": "Information about each boot device on the VxRail host. Added two new fields; device_type and protocol.",
				"properties": {
					"id": {
						"description": "ID of the boot device",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the boot device",
						"type": "string",
						"example": "PHYH013201XX480K"
					},
					"device_model": {
						"description": "Model number of the boot device",
						"type": "string",
						"example": "SSDSCJJB480G8R"
					},
					"device_type": {
						"description": "Model type of the boot device",
						"type": "string",
						"example": "SSD"
					},
					"protocol": {
						"description": "Type of transport protocol",
						"type": "string",
						"example": "SATA"
					},
					"sata_type": {
						"description": "Type of disk drive of the device",
						"type": "string"
					},
					"power_on_hours": {
						"description": "Number of hours the device is powered on",
						"type": "integer",
						"example": 1
					},
					"power_cycle_count": {
						"description": "Number of times the device is powered on and off.",
						"type": "integer",
						"example": 1
					},
					"max_erase_count": {
						"description": "Maximum erase count for the device",
						"type": "integer",
						"example": 1
					},
					"avr_erase_count": {
						"description": "Average erase count for the device",
						"type": "integer",
						"example": 1
					},
					"capacity": {
						"description": "Capacity of the device disk",
						"type": "string",
						"example": "480103981056"
					},
					"health": {
						"description": "Health status of the boot device (percentage)",
						"type": "string"
					},
					"firmware_version": {
						"description": "Firmware version of the boot device.",
						"type": "string",
						"example": "2.5.13.4008"
					},
					"bootdevice_type": {
						"description": "Type of boot device",
						"type": "string"
					},
					"block_size": {
						"description": "Block size of the boot device",
						"type": "string",
						"example": "512"
					},
					"slot": {
						"description": "Slot number of the boot device",
						"type": "integer",
						"example": 1
					},
					"status": {
						"description": "Status of the boot device",
						"type": "string",
						"example": "NORMAL"
					},
					"part_number": {
						"description": "Part number of the boot device",
						"type": "string",
						"example": "TW07FXC3PIHiT0440"
					},
					"manufacturer": {
						"description": "Manufacturer of the boot device",
						"type": "string",
						"example": "INTEL"
					},
					"controller_firmware": {
						"description": "Controller firmware version of the boot device",
						"type": "string",
						"example": "2.5.13.4008"
					},
					"controller_model": {
						"description": "Controller model of the boot device",
						"type": "string",
						"example": "BOSS-S2"
					},
					"controller_status": {
						"description": "Controller status of the boot device",
						"type": "string",
						"example": "NORMAL"
					}
				}
			},
			"DriveConfigurationInfo": {
				"description": "Information about the drive configuration on the host.",
				"properties": {
					"type": {
						"description": "Type of disk group configuration",
						"type": "string",
						"example": "2401"
					}
				},
				"x-examples": {
					"Example": {
						"type": "2401"
					}
				}
			},
			"HostV5": {
				"description": "Information about a VxRail host and its associated subcomponents. HostV5 includes a new perc_version field",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string",
						"example": "969WVL2"
					},
					"type": {
						"description": "Node type",
						"type": "string",
						"enum": [
							"CLUSTER",
							"SATELLITE"
						],
						"example": "CLUSTER"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Hostname of the host",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the VxRail system. Supported values are Critical, Error, Warning, and Healthy",
						"type": "string"
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host",
						"type": "string"
					},
					"boot_devices": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BootDeviceV2"
						}
					},
					"nics": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Nic"
						}
					},
					"disks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DiskInfoV2"
						}
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfoV3"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					},
					"drive_configuration": {
						"$ref": "#/components/schemas/DriveConfigurationInfo"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "969WVL2",
						"type": "CLUSTER",
						"slot": 0,
						"hostname": "string",
						"name": "string",
						"manufacturer": "string",
						"psnt": "string",
						"led_status": "string",
						"health": "string",
						"missing": true,
						"tpm_present": true,
						"operational_status": "string",
						"power_status": "string",
						"boot_devices": [
							{
								"id": "string",
								"sn": "PHYH013201XX480K",
								"device_model": "SSDSCJJB480G8R",
								"sata_type": "string",
								"power_on_hours": 1,
								"power_cycle_count": 1,
								"max_erase_count": 1,
								"avr_erase_count": 1,
								"capacity": "480103981056",
								"health": "string",
								"firmware_version": "2.5.13.4008",
								"bootdevice_type": "string",
								"block_size": "512",
								"slot": 1,
								"status": "NORMAL",
								"part_number": "TW07FXC3PIHiT0440",
								"manufacturer": "INTEL",
								"controller_firmware": "2.5.13.4008",
								"controller_model": "BOSS-S2",
								"controller_status": "NORMAL"
							}
						],
						"nics": [
							{
								"id": "string",
								"mac": "string",
								"link_status": "string",
								"link_speed": "string",
								"slot": 0,
								"firmware_family_version": "string"
							}
						],
						"disks": [
							{
								"id": "string",
								"sn": "string",
								"guid": "string",
								"manufacturer": "string",
								"model": "string",
								"disk_type": "string",
								"protocol": "string",
								"max_capable_speed": "string",
								"enclosure": 0,
								"bay": 0,
								"slot": 0,
								"disk_state": "string",
								"led_status": "string",
								"missing": true,
								"capacity": "string",
								"write_endurance": "string",
								"write_endurance_status": "string",
								"remaining_write_endurance_rate": "string",
								"firmware_revision": "string",
								"disk_claim_type": "non-vSAN"
							}
						],
						"firmwareInfo": {
							"bios_revision": "string",
							"bmc_revision": "string",
							"hba_version": "string",
							"expander_bpf_version": "string",
							"nonexpander_bpf_version": "string",
							"boss_version": "string",
							"cpld_version": "string",
							"idsdm_version": "string",
							"dcpm_version": "string",
							"perc_version": "string"
						},
						"geo_location": {
							"rack_name": "rack1",
							"order_number": 1
						},
						"drive_configuration": {
							"type": "2401"
						}
					}
				}
			},
			"HostV6": {
				"description": "Information about a VxRail host and its associated subcomponents. HostV6 includes a new V2 Nic object.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string",
						"example": "969WVL2"
					},
					"type": {
						"description": "Node type",
						"type": "string",
						"enum": [
							"CLUSTER",
							"SATELLITE"
						],
						"example": "CLUSTER"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Hostname of the host",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the VxRail system. Supported values are Critical, Error, Warning, and Healthy",
						"type": "string"
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host",
						"type": "string"
					},
					"boot_devices": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BootDeviceV2"
						}
					},
					"nics": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NicV2"
						}
					},
					"disks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DiskInfoV2"
						}
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfoV3"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					},
					"drive_configuration": {
						"$ref": "#/components/schemas/DriveConfigurationInfo"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "969WVL2",
						"type": "CLUSTER",
						"slot": 0,
						"hostname": "string",
						"name": "string",
						"manufacturer": "string",
						"psnt": "string",
						"led_status": "string",
						"health": "string",
						"missing": true,
						"tpm_present": true,
						"operational_status": "string",
						"power_status": "string",
						"boot_devices": [
							{
								"id": "string",
								"sn": "PHYH013201XX480K",
								"device_model": "SSDSCJJB480G8R",
								"sata_type": "string",
								"power_on_hours": 1,
								"power_cycle_count": 1,
								"max_erase_count": 1,
								"avr_erase_count": 1,
								"capacity": "480103981056",
								"health": "string",
								"firmware_version": "2.5.13.4008",
								"bootdevice_type": "string",
								"block_size": "512",
								"slot": 1,
								"status": "NORMAL",
								"part_number": "TW07FXC3PIHiT0440",
								"manufacturer": "INTEL",
								"controller_firmware": "2.5.13.4008",
								"controller_model": "BOSS-S2",
								"controller_status": "NORMAL"
							}
						],
						"nics": [
							{
								"id": "string",
								"type": "string",
								"mac": "string",
								"link_status": "string",
								"link_speed": "string",
								"slot": 0,
								"port": 0,
								"firmware_family_version": "string",
								"drivers": [
									{
										"driver_name": "string",
										"driver_version": "string"
									}
								]
							}
						],
						"disks": [
							{
								"id": "string",
								"sn": "string",
								"guid": "string",
								"manufacturer": "string",
								"model": "string",
								"disk_type": "string",
								"protocol": "string",
								"max_capable_speed": "string",
								"enclosure": 0,
								"bay": 0,
								"slot": 0,
								"disk_state": "string",
								"led_status": "string",
								"missing": true,
								"capacity": "string",
								"write_endurance": "string",
								"write_endurance_status": "string",
								"remaining_write_endurance_rate": "string",
								"firmware_revision": "string",
								"disk_claim_type": "non-vSAN"
							}
						],
						"firmwareInfo": {
							"bios_revision": "string",
							"bmc_revision": "string",
							"hba_version": "string",
							"expander_bpf_version": "string",
							"nonexpander_bpf_version": "string",
							"boss_version": "string",
							"cpld_version": "string",
							"idsdm_version": "string",
							"dcpm_version": "string",
							"perc_version": "string"
						},
						"geo_location": {
							"rack_name": "rack1",
							"order_number": 1
						},
						"drive_configuration": {
							"type": "2401"
						}
					}
				}
			},
			"HostV7": {
				"description": "Information about a VxRail host and its associated subcomponents. Host include new object encryption_status to support SEKM.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the host",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host",
						"type": "string",
						"example": "969WVL2"
					},
					"type": {
						"description": "Node type",
						"type": "string",
						"enum": [
							"CLUSTER",
							"SATELLITE"
						],
						"example": "CLUSTER"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed",
						"type": "integer"
					},
					"hostname": {
						"description": "Hostname of the host",
						"type": "string"
					},
					"name": {
						"description": "Name of the host",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the host",
						"type": "string"
					},
					"led_status": {
						"description": "State of the chassis LED indicator for the host",
						"type": "string"
					},
					"health": {
						"description": "Health status of the VxRail system. Supported values are Critica, Error, Warning, and Healthy",
						"type": "string"
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host",
						"type": "string"
					},
					"boot_devices": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BootDeviceV2"
						}
					},
					"nics": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NicV2"
						}
					},
					"disks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DiskInfoV3"
						}
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfoV3"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					},
					"drive_configuration": {
						"$ref": "#/components/schemas/DriveConfigurationInfo"
					},
					"encryption_status": {
						"$ref": "#/components/schemas/EncryptionStatus"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "969WVL2",
						"type": "CLUSTER",
						"slot": 0,
						"hostname": "string",
						"name": "string",
						"manufacturer": "string",
						"psnt": "string",
						"led_status": "string",
						"health": "string",
						"missing": true,
						"tpm_present": true,
						"operational_status": "string",
						"power_status": "string",
						"boot_devices": [
							{
								"id": "string",
								"sn": "PHYH013201XX480K",
								"device_model": "SSDSCJJB480G8R",
								"sata_type": "string",
								"power_on_hours": 1,
								"power_cycle_count": 1,
								"max_erase_count": 1,
								"avr_erase_count": 1,
								"capacity": "480103981056",
								"health": "string",
								"firmware_version": "2.5.13.4008",
								"bootdevice_type": "string",
								"block_size": "512",
								"slot": 1,
								"status": "NORMAL",
								"part_number": "TW07FXC3PIHiT0440",
								"manufacturer": "INTEL",
								"controller_firmware": "2.5.13.4008",
								"controller_model": "BOSS-S2",
								"controller_status": "NORMAL"
							}
						],
						"nics": [
							{
								"id": "string",
								"type": "string",
								"mac": "string",
								"link_status": "string",
								"link_speed": "string",
								"slot": 0,
								"port": 0,
								"firmware_family_version": "string",
								"drivers": [
									{
										"driver_name": "string",
										"driver_version": "string"
									}
								]
							}
						],
						"disks": [
							{
								"id": "string",
								"sn": "string",
								"guid": "string",
								"manufacturer": "string",
								"model": "string",
								"disk_type": "string",
								"protocol": "string",
								"max_capable_speed": "string",
								"enclosure": 0,
								"bay": 0,
								"slot": 0,
								"disk_state": "string",
								"led_status": "string",
								"missing": true,
								"capacity": "string",
								"write_endurance": "string",
								"write_endurance_status": "string",
								"remaining_write_endurance_rate": "string",
								"firmware_revision": "string",
								"disk_claim_type": "non-vSAN",
								"encryption_ability": {
									"key": "SELF_ENCRYPTING_DRIVE",
									"value": "SelfEncryptingDrive"
								},
								"encryption_status": {
									"key": "UNLOCKED",
									"value": "Unlocked"
								}
							}
						],
						"firmwareInfo": {
							"bios_revision": "string",
							"bmc_revision": "string",
							"hba_version": "string",
							"expander_bpf_version": "string",
							"nonexpander_bpf_version": "string",
							"boss_version": "string",
							"cpld_version": "string",
							"idsdm_version": "string",
							"dcpm_version": "string",
							"perc_version": "string"
						},
						"geo_location": {
							"rack_name": "rack1",
							"order_number": 1
						},
						"drive_configuration": {
							"type": "2401"
						},
						"encryption_status": {
							"security_status": {
								"key": "ENABLED",
								"value": "Enabled"
							},
							"encryption_mode": {
								"key": "SEKM",
								"value": "SEKM"
							}
						}
					}
				}
			},
			"DiskInfoV3": {
				"description": "Information about each disk installed in the VxRail host. Added encryption_ability and encryption_status to support SEKM.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID of the disk",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the disk",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the disk",
						"type": "string"
					},
					"model": {
						"description": "Model of the disk",
						"type": "string"
					},
					"disk_type": {
						"description": "Type of disk drive",
						"type": "string"
					},
					"protocol": {
						"description": "Type of transport protocol",
						"type": "string"
					},
					"max_capable_speed": {
						"description": "Maximum capable speed of the disk",
						"type": "string"
					},
					"enclosure": {
						"description": "Enclosure where the disk is installed",
						"type": "integer"
					},
					"slot": {
						"description": "Slot where the disk is installed",
						"type": "integer"
					},
					"disk_state": {
						"description": "Health state of the disk",
						"type": "string"
					},
					"led_status": {
						"description": "State of the LED indicator for the disk",
						"type": "string"
					},
					"missing": {
						"description": "Whether the disk health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"capacity": {
						"description": "Capacity of the disk",
						"type": "string"
					},
					"write_endurance": {
						"description": "Write endurance of the disk (usage percentage)",
						"type": "string"
					},
					"write_endurance_status": {
						"description": "Status of write endurance of the disk",
						"type": "string"
					},
					"remaining_write_endurance_rate": {
						"description": "Remaining write endurance of the disk (percentage remaining)",
						"type": "string"
					},
					"firmware_revision": {
						"description": "Firmware version of the disk.",
						"type": "string"
					},
					"disk_claim_type": {
						"description": "Type of storage claimed for the disk. Disks can be claimed as non-vSAN or vSAN storage",
						"type": "string",
						"enum": [
							"non-vSAN",
							"vSAN",
							"unmanaged"
						]
					},
					"encryption_ability": {
						"$ref": "#/components/schemas/EncryptionAbility"
					},
					"encryption_status": {
						"$ref": "#/components/schemas/DiskEncryptionStatus"
					}
				}
			},
			"DiskInfoV4": {
				"description": "Information about each disk installed in the VxRail host. Add encryption_ability and encryption_status to support SEKM.",
				"properties": {
					"id": {
						"description": "ID of the disk",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the disk",
						"type": "string"
					},
					"type": {
						"description": "Type of the disk",
						"type": "string",
						"enum": [
							"base",
							"optional"
						]
					},
					"manufacturer": {
						"description": "Manufacturer of the disk",
						"type": "string"
					},
					"model": {
						"description": "Model of the disk",
						"type": "string"
					},
					"disk_type": {
						"description": "Type of disk drive",
						"type": "string"
					},
					"protocol": {
						"description": "Type of transport protocol",
						"type": "string"
					},
					"max_capable_speed": {
						"description": "Maximum capable speed of the disk",
						"type": "string"
					},
					"enclosure": {
						"description": "Enclosure where the disk is installed",
						"type": "integer"
					},
					"slot": {
						"description": "Slot where the disk is installed",
						"type": "integer"
					},
					"disk_state": {
						"description": "Health state of the disk",
						"type": "string"
					},
					"led_status": {
						"description": "Status of the LED indicator on the disk",
						"type": "string"
					},
					"missing": {
						"description": "Whether the disk health status is critical. Supported values are false (not critical) and true (critical)",
						"type": "boolean"
					},
					"capacity": {
						"description": "Capacity of the disk",
						"type": "string"
					},
					"write_endurance": {
						"description": "Write endurance of the disk (usage percentage)",
						"type": "string"
					},
					"write_endurance_status": {
						"description": "Status of the write endurance of the disk",
						"type": "string"
					},
					"remaining_write_endurance_rate": {
						"description": "Remaining write endurance of the disk (percentage remaining)",
						"type": "string"
					},
					"firmware_revision": {
						"description": "Firmware version of the disk.",
						"type": "string"
					},
					"disk_claim_type": {
						"description": "Type of storage claimed for the disk. Disks can be claimed as non-vSAN or vSAN storage",
						"type": "string",
						"enum": [
							"non-vSAN",
							"vSAN",
							"unmanaged"
						]
					},
					"encryption_ability": {
						"$ref": "#/components/schemas/EncryptionAbility"
					},
					"encryption_status": {
						"$ref": "#/components/schemas/DiskEncryptionStatus"
					}
				}
			},
			"EncryptionAbility": {
				"description": "The encryption abilities of this drive.",
				"type": "object",
				"properties": {
					"key": {
						"description": "The key of disk encryption ability.",
						"type": "string",
						"enum": [
							"NONE",
							"SELF_ENCRYPTING_DRIVE",
							"OTHER"
						],
						"example": "SELF_ENCRYPTING_DRIVE"
					},
					"value": {
						"description": "The value of disk encryption ability.",
						"type": "string",
						"example": "SelfEncryptingDrive"
					}
				}
			},
			"DiskEncryptionStatus": {
				"description": "The status of the encryption of this drive.",
				"type": "object",
				"properties": {
					"key": {
						"description": "The key of disk encryption status.",
						"type": "string",
						"enum": [
							"UNENCRYPTED",
							"UNLOCKED",
							"LOCKED",
							"FOREIGN"
						],
						"example": "UNLOCKED"
					},
					"value": {
						"description": "The value of disk encryption status.",
						"type": "string",
						"example": "Unlocked"
					}
				}
			},
			"EncryptionStatus": {
				"description": "Indicates encrpyption status on node level.",
				"type": "object",
				"properties": {
					"security_status": {
						"$ref": "#/components/schemas/SecurityStatus"
					},
					"encryption_mode": {
						"$ref": "#/components/schemas/EncryptionMode"
					}
				}
			},
			"SecurityStatus": {
				"description": "Indicates Security status on node level.",
				"type": "object",
				"properties": {
					"key": {
						"description": "Security status key by KMS.",
						"type": "string",
						"enum": [
							"DISABLED",
							"ENABLED",
							"FAILED",
							"UNVERIFIED_CHANGES_EXIST"
						],
						"example": "ENABLED"
					},
					"value": {
						"description": "The value of security status by KMS.",
						"type": "string",
						"example": "Enabled"
					}
				}
			},
			"EncryptionMode": {
				"description": "Indicates Encryption mode on node level.",
				"type": "object",
				"properties": {
					"key": {
						"description": "The key of EncryptionMode by KMS.",
						"type": "string",
						"enum": [
							"NONE",
							"iLKM",
							"SEKM"
						],
						"example": "SEKM"
					},
					"value": {
						"description": "The value of EncryptionMode by KMS.",
						"type": "string",
						"example": "SEKM"
					}
				}
			},
			"HostV8": {
				"description": "Information about the VxRail host and its subcomponents. The host includes a new object, encryption_status to support SEKM.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the host.",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host.",
						"type": "string",
						"example": "969WVL2"
					},
					"type": {
						"description": "Node type.",
						"type": "string",
						"enum": [
							"CLUSTER",
							"SATELLITE"
						],
						"example": "CLUSTER"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed.",
						"type": "integer"
					},
					"hostname": {
						"description": "Name of the host.",
						"type": "string"
					},
					"name": {
						"description": "Name of the host.",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host.",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the host.",
						"type": "string"
					},
					"led_status": {
						"description": "Status of the chassis LED indicator on the host.",
						"type": "string"
					},
					"health": {
						"description": "Health status of the VxRail system. Supported values are Critical, Error, Warning, and Healthy.",
						"type": "string"
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical).",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host.",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host.",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host.",
						"type": "string"
					},
					"boot_devices": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BootDeviceV2"
						}
					},
					"nics": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NicV3"
						}
					},
					"disks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DiskInfoV4"
						}
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfoV3"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					},
					"drive_configuration": {
						"$ref": "#/components/schemas/DriveConfigurationInfo"
					},
					"encryption_status": {
						"$ref": "#/components/schemas/EncryptionStatus"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"sn": "969WVL2",
						"type": "CLUSTER",
						"slot": 0,
						"hostname": "string",
						"name": "string",
						"manufacturer": "string",
						"psnt": "string",
						"led_status": "string",
						"health": "string",
						"missing": true,
						"tpm_present": true,
						"operational_status": "string",
						"power_status": "string",
						"boot_devices": [
							{
								"id": "string",
								"sn": "PHYH013201XX480K",
								"device_model": "SSDSCJJB480G8R",
								"sata_type": "string",
								"power_on_hours": 1,
								"power_cycle_count": 1,
								"max_erase_count": 1,
								"avr_erase_count": 1,
								"capacity": "480103981056",
								"health": "string",
								"firmware_version": "2.5.13.4008",
								"bootdevice_type": "string",
								"block_size": "512",
								"slot": 1,
								"status": "NORMAL",
								"part_number": "TW07FXC3PIHiT0440",
								"manufacturer": "INTEL",
								"controller_firmware": "2.5.13.4008",
								"controller_model": "BOSS-S2",
								"controller_status": "NORMAL"
							}
						],
						"nics": [
							{
								"id": "string",
								"type": "string",
								"mac": "string",
								"link_status": "string",
								"link_speed": "string",
								"slot": 0,
								"port": 0,
								"firmware_family_version": "string",
								"wwnn": "string",
								"wwpn": "string",
								"drivers": [
									{
										"driver_name": "string",
										"driver_version": "string"
									}
								]
							}
						],
						"disks": [
							{
								"id": "string",
								"sn": "string",
								"guid": "string",
								"manufacturer": "string",
								"model": "string",
								"disk_type": "string",
								"protocol": "string",
								"max_capable_speed": "string",
								"enclosure": 0,
								"bay": 0,
								"slot": 0,
								"disk_state": "string",
								"led_status": "string",
								"missing": true,
								"capacity": "string",
								"write_endurance": "string",
								"write_endurance_status": "string",
								"remaining_write_endurance_rate": "string",
								"firmware_revision": "string",
								"disk_claim_type": "non-vSAN",
								"encryption_ability": {
									"key": "SELF_ENCRYPTING_DRIVE",
									"value": "SelfEncryptingDrive"
								},
								"encryption_status": {
									"key": "UNLOCKED",
									"value": "Unlocked"
								}
							}
						],
						"firmwareInfo": {
							"bios_revision": "string",
							"bmc_revision": "string",
							"hba_version": "string",
							"expander_bpf_version": "string",
							"nonexpander_bpf_version": "string",
							"boss_version": "string",
							"cpld_version": "string",
							"idsdm_version": "string",
							"dcpm_version": "string",
							"perc_version": "string"
						},
						"geo_location": {
							"rack_name": "rack1",
							"order_number": 1
						},
						"drive_configuration": {
							"type": "2401"
						},
						"encryption_status": {
							"security_status": {
								"key": "ENABLED",
								"value": "Enabled"
							},
							"encryption_mode": {
								"key": "SEKM",
								"value": "SEKM"
							}
						}
					}
				}
			},
			"HostV10": {
				"description": "Information about VxRail host and its subcomponents. The host includes a new object, GpuInfoV1 to support the new PowerEdge server 15G model.",
				"type": "object",
				"properties": {
					"id": {
						"description": "ID number of the host.",
						"type": "string"
					},
					"sn": {
						"description": "Serial number of the host.",
						"type": "string",
						"example": "969WVL2"
					},
					"type": {
						"description": "Node type.",
						"type": "string",
						"enum": [
							"CLUSTER",
							"SATELLITE"
						],
						"example": "CLUSTER"
					},
					"slot": {
						"description": "Rack slot position where the VxRail host appliance is installed.",
						"type": "integer"
					},
					"hostname": {
						"description": "Indicates the hostname.",
						"type": "string"
					},
					"name": {
						"description": "Name of the host.",
						"type": "string"
					},
					"manufacturer": {
						"description": "Manufacturer of the host.",
						"type": "string"
					},
					"psnt": {
						"description": "Product serial number tag (PSNT) of the host.",
						"type": "string"
					},
					"led_status": {
						"description": "Status of the chassis LED indicator on the host.",
						"type": "string"
					},
					"health": {
						"description": "Health status of the VxRail system. Supported values are Critical, Error, Warning, and Healthy.",
						"type": "string"
					},
					"missing": {
						"description": "Whether the chassis health status is critical. Supported values are false (not critical) and true (critical).",
						"type": "boolean"
					},
					"tpm_present": {
						"description": "Whether a TPM security device is installed on the VxRail host.",
						"type": "boolean"
					},
					"operational_status": {
						"description": "Operational status of the host.",
						"type": "string"
					},
					"power_status": {
						"description": "Power supply status of the host.",
						"type": "string"
					},
					"boot_devices": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BootDeviceV3"
						}
					},
					"nics": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NicV3"
						}
					},
					"disks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DiskInfoV4"
						}
					},
					"firmwareInfo": {
						"$ref": "#/components/schemas/FirmwareInfoV3"
					},
					"gpus": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/GpuInfoV1"
						}
					},
					"part_number": {
						"description": "Part number of the target node.",
						"type": "string"
					},
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					},
					"drive_configuration": {
						"$ref": "#/components/schemas/DriveConfigurationInfo"
					},
					"encryption_status": {
						"$ref": "#/components/schemas/EncryptionStatus"
					}
				},
				"x-examples": {
					"Example": {
						"id": "V010104",
						"sn": "969WVL2",
						"type": "CLUSTER",
						"slot": 0,
						"hostname": "vcluster101-esx04.vv009.local",
						"name": "vcluster101-esx04.vv009.local",
						"manufacturer": "Dell Inc.",
						"psnt": "V0101040000000",
						"led_status": "Blue:On",
						"health": "Warning",
						"missing": true,
						"tpm_present": true,
						"operational_status": "normal",
						"power_status": "on",
						"part_number": "GST02CPRCM0S80G8S1YQ0A",
						"boot_devices": [
							{
								"id": null,
								"sn": "PHYH013201XX480K",
								"device_model": "SSDSCJJB480G8R",
								"sata_type": "SSD",
								"power_on_hours": 1,
								"power_cycle_count": 1,
								"max_erase_count": 1,
								"avr_erase_count": 1,
								"capacity": "480103981056",
								"health": "100%",
								"firmware_version": "2.5.13.4008",
								"bootdevice_type": "M.2 Riser",
								"block_size": "512",
								"slot": 1,
								"status": "NORMAL",
								"part_number": "TW07FXC3PIHiT0440",
								"manufacturer": "INTEL",
								"controller_firmware": "2.5.13.4008",
								"controller_model": "BOSS-S2",
								"controller_status": "NORMAL"
							}
						],
						"nics": [
							{
								"id": "00:50:56:a2:af:24",
								"type": "INTEGRATED",
								"mac": "00:50:56:a2:af:24",
								"link_status": "Up",
								"link_speed": "10Gbps",
								"slot": 0,
								"port": 0,
								"firmware_family_version": "21.5.9",
								"wwnn": "string",
								"wwpn": "string",
								"drivers": [
									{
										"driver_name": "i40en",
										"driver_version": "1.10.9.0"
									}
								]
							}
						],
						"disks": [
							{
								"id": "V010104DVSN00",
								"sn": "V010104DVSN00",
								"guid": "6000c29ea43f6dfb149e7f61763ce343",
								"manufacturer": "SAMSUNG",
								"model": "MZILS1T9HEJH0D3",
								"disk_type": "HDD",
								"protocol": "SAS",
								"max_capable_speed": "12 Gb/s",
								"enclosure": 0,
								"bay": 0,
								"slot": 0,
								"disk_state": "OK",
								"led_status": "Green:On",
								"missing": true,
								"capacity": "600.0GB",
								"write_endurance": "string",
								"write_endurance_status": "string",
								"remaining_write_endurance_rate": "string",
								"firmware_revision": "DSLA",
								"disk_claim_type": "non-vSAN",
								"encryption_ability": {
									"key": "SELF_ENCRYPTING_DRIVE",
									"value": "SelfEncryptingDrive"
								},
								"encryption_status": {
									"key": "UNLOCKED",
									"value": "Unlocked"
								}
							}
						],
						"firmwareInfo": {
							"bios_revision": "1.8.2",
							"bmc_revision": "6.00.30.00",
							"hba_version": "16.17.01.00",
							"expander_bpf_version": 3.72,
							"nonexpander_bpf_version": "string",
							"boss_version": "2.5.13.3024",
							"cpld_version": "1.0.2",
							"idsdm_version": 2,
							"dcpm_version": "string",
							"perc_version": "string"
						},
						"gpus": {
							"type": "GPU",
							"slot": 1,
							"vendor_description": "DellVideo provides video-specific data about supported GPU properties if a GPU is supported.",
							"supplier": "Matrox Electronics Systems Ltd."
						},
						"geo_location": {
							"rack_name": "rack1",
							"order_number": 1
						},
						"drive_configuration": {
							"type": "2401"
						},
						"encryption_status": {
							"security_status": {
								"key": "ENABLED",
								"value": "Enabled"
							},
							"encryption_mode": {
								"key": "SEKM",
								"value": "SEKM"
							}
						}
					}
				}
			},
			"FirmwareInfoV3": {
				"description": "Information about the firmware versions installed on the host.",
				"x-examples": {
					"Example": {
						"bios_revision": "string",
						"bmc_revision": "string",
						"hba_version": "string",
						"expander_bpf_version": "string",
						"nonexpander_bpf_version": "string",
						"boss_version": "string",
						"cpld_version": "string",
						"idsdm_version": "string",
						"dcpm_version": "string",
						"perc_version": "string"
					}
				},
				"type": "object",
				"properties": {
					"bios_revision": {
						"description": "Firmware version of the BIOS.",
						"type": "string"
					},
					"bmc_revision": {
						"description": "Firmware version of the baseboard management controller (BMC).",
						"type": "string"
					},
					"hba_version": {
						"description": "Firmware version of the host bus adapter (HBA).",
						"type": "string"
					},
					"expander_bpf_version": {
						"description": "Firmware version of the expander backplane.",
						"type": "string"
					},
					"nonexpander_bpf_version": {
						"description": "Firmware version of the non-expander storage backplane.",
						"type": "string"
					},
					"boss_version": {
						"description": "Firmware version of the BOSS card.",
						"type": "string"
					},
					"cpld_version": {
						"description": "Firmware version of the complex logical device (CPLD).",
						"type": "string"
					},
					"idsdm_version": {
						"description": "Firmware version of the IDSDM.",
						"type": "string"
					},
					"dcpm_version": {
						"description": "Firmware version of the DC Persistent Memory (DCPM).",
						"type": "string"
					},
					"perc_version": {
						"description": "Firmware version of PERC.",
						"type": "string"
					}
				}
			},
			"GpuInfoV1": {
				"description": "Information about the GPU of the host.",
				"x-examples": {
					"Example": {
						"type": "GPU",
						"slot": 1,
						"vendor_description": "Integrated Matrox G200eW3 Graphics Controller",
						"supplier": "Matrox Electronics Systems Ltd."
					}
				},
				"type": "object",
				"properties": {
					"type": {
						"description": "Indicates the GPU type.",
						"type": "string"
					},
					"slot": {
						"description": "GPU slot.",
						"type": "integer"
					},
					"vendor_description": {
						"description": "The description of the GPU provider.",
						"type": "string"
					},
					"supplier": {
						"description": "The brand of GPU.",
						"type": "string"
					}
				}
			},
			"HostUpdateSpec": {
				"description": "Information about the host to update.",
				"type": "object",
				"properties": {
					"geo_location": {
						"$ref": "#/components/schemas/GeoLocation"
					}
				},
				"x-examples": {
					"Example": {
						"geo_location": {
							"rack_name": "rack1",
							"order_number": 1
						}
					}
				}
			},
			"HostDiskSlotMappingRequest": {
				"type": "object",
				"required": [
					"host_serial_number",
					"customer_supplied"
				],
				"properties": {
					"host_serial_number": {
						"description": "Serial number of the host. This property is mandatory if the customer_supplied property is not supplied",
						"type": "string",
						"example": "969WVL2"
					},
					"customer_supplied": {
						"$ref": "#/components/schemas/CustomerSuppliedNodeInfo"
					}
				},
				"x-examples": {
					"Example": {
						"host_serial_number": "969WVL2",
						"customer_supplied": {
							"management_ip": "string",
							"current_root_password": "string",
							"diskgroup_type": "string"
						}
					}
				}
			},
			"HostShutdownSpec": {
				"description": "Information required to perform a host shutdown.",
				"type": "object",
				"required": [
					"dryrun",
					"evacuate_poweredoff_vms"
				],
				"properties": {
					"dryrun": {
						"description": "Perform a dry run to check whether it is safe to shutdown",
						"type": "boolean",
						"example": true
					},
					"evacuate_poweredoff_vms": {
						"description": "Evacuate powered off vms for this node",
						"type": "boolean",
						"example": true
					}
				},
				"x-examples": {
					"Example": {
						"dryrun": true,
						"evacuate_poweredoff_vms": true
					}
				}
			},
			"IdracUserInfo": {
				"description": "Information about the iDRAC user account.",
				"type": "object",
				"required": [
					"id",
					"name",
					"privilege"
				],
				"properties": {
					"id": {
						"description": "The ID of the user in iDRAC, value scope 3-16",
						"type": "integer"
					},
					"name": {
						"description": "The iDRAC username",
						"type": "string"
					},
					"privilege": {
						"description": "The iDRAC user privilege",
						"type": "string",
						"enum": [
							"ADMIN",
							"OPER",
							"READONLY",
							"NONE",
							"UNKNOWN"
						]
					}
				},
				"x-examples": {
					"Example": {
						"id": 0,
						"name": "string",
						"privilege": "ADMIN"
					}
				}
			},
			"IdracUserCreateSpec": {
				"description": "The iDRAC user account information.",
				"type": "object",
				"required": [
					"name",
					"password",
					"privilege"
				],
				"properties": {
					"id": {
						"description": "The iDRAC user slot ID",
						"type": "integer",
						"example": 5
					},
					"name": {
						"description": "The iDRAC user name",
						"type": "string",
						"example": "testuser"
					},
					"password": {
						"description": "The iDRAC user password",
						"type": "string",
						"example": "testpwd"
					},
					"privilege": {
						"description": "The permissions (privilege) of the iDRAC user.",
						"type": "string",
						"example": "ADMIN",
						"enum": [
							"ADMIN",
							"OPER",
							"READONLY"
						]
					}
				},
				"x-examples": {
					"Example": {
						"id": 5,
						"name": "testuser",
						"password": "testpwd",
						"privilege": "ADMIN"
					}
				}
			},
			"IdracUserUpdateSpec": {
				"description": "The iDRAC user account information.",
				"type": "object",
				"required": [
					"name",
					"password",
					"privilege"
				],
				"properties": {
					"name": {
						"description": "The iDRAC user name",
						"type": "string",
						"example": "newuser"
					},
					"password": {
						"description": "The iDRAC user password",
						"type": "string",
						"example": "newpwd"
					},
					"privilege": {
						"description": "The permissions (privilege) of the iDRAC user",
						"type": "string",
						"example": "ADMIN",
						"enum": [
							"ADMIN",
							"OPER",
							"READONLY"
						]
					}
				},
				"x-examples": {
					"Example": {
						"name": "newuser",
						"password": "newpwd",
						"privilege": "ADMIN"
					}
				}
			},
			"IdracNetworkInfo": {
				"description": "The iDRAC network information.",
				"type": "object",
				"required": [
					"ip",
					"dhcp_enabled",
					"vlan"
				],
				"properties": {
					"ip": {
						"description": "The IP information of the iDRAC",
						"type": "object",
						"properties": {
							"type": {
								"description": "The VLAN ID settings of the iDRAC",
								"type": "string",
								"enum": [
									"ipv4"
								]
							},
							"ip_address": {
								"description": "The MAC address of the iDRAC",
								"type": "string"
							},
							"netmask": {
								"description": "The netmask of the iDRAC",
								"type": "string"
							},
							"gateway": {
								"description": "The gateway address of the iDRAC",
								"type": "string"
							}
						}
					},
					"dhcp_enabled": {
						"description": "Whether DHCP service is enabled",
						"type": "boolean"
					},
					"vlan": {
						"description": "The IPv4 address of the iDRAC",
						"type": "object",
						"properties": {
							"vlan_id": {
								"description": "The VLAN ID setting of the iDRAC",
								"type": "integer"
							},
							"vlan_priority": {
								"description": "The VLAN priority setting of the iDRAC",
								"type": "integer"
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"ip": {
							"type": "ipv4",
							"ip_address": "string",
							"netmask": "string",
							"gateway": "string"
						},
						"dhcp_enabled": true,
						"vlan": {
							"vlan_id": 0,
							"vlan_priority": 0
						}
					}
				}
			},
			"IdracNetworkInfoWithIPv6": {
				"description": "The iDRAC network information for 7.0.350+",
				"type": "object",
				"required": [
					"ipv4",
					"ipv6",
					"vlan"
				],
				"properties": {
					"ipv4": {
						"description": "The IP information of the iDRAC",
						"type": "object",
						"properties": {
							"ip_address": {
								"description": "The MAC address of the iDRAC",
								"type": "string"
							},
							"netmask": {
								"description": "The netmask of the iDRAC",
								"type": "string"
							},
							"gateway": {
								"description": "The gateway address of the iDRAC",
								"type": "string"
							},
							"dhcp_enabled": {
								"description": "Whether DHCP service is enabled",
								"type": "boolean"
							}
						}
					},
					"ipv6": {
						"description": "Internal use only",
						"type": "object",
						"properties": {
							"ip_address": {
								"description": "Internal use only",
								"type": "string"
							},
							"prefix_length": {
								"description": "Internal use only",
								"type": "integer"
							},
							"gateway": {
								"description": "Internal use only",
								"type": "string"
							},
							"auto_config_enabled": {
								"description": "Internal use only",
								"type": "boolean"
							}
						}
					},
					"vlan": {
						"description": "The Vlan of the iDRAC",
						"type": "object",
						"properties": {
							"vlan_id": {
								"description": "The VLAN ID setting of the iDRAC",
								"type": "integer"
							},
							"vlan_priority": {
								"description": "The VLAN priority setting of the iDRAC",
								"type": "integer"
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"ipv4": {
							"ip_address": "string",
							"netmask": "string",
							"gateway": "string",
							"dhcp_enabled": true
						},
						"ipv6": {
							"ip_address": "string",
							"prefix_length": 0,
							"gateway": "string",
							"auto_config_enabled": true
						},
						"vlan": {
							"vlan_id": 0,
							"vlan_priority": 0
						}
					}
				}
			},
			"IdracNetworkSpec": {
				"description": "Information about the iDRAC IPv4 LAN settings.",
				"type": "object",
				"properties": {
					"ip": {
						"description": "The IP information of the iDRAC",
						"type": "object",
						"required": [
							"type",
							"ip_address",
							"netmask",
							"gateway"
						],
						"properties": {
							"type": {
								"description": "The VLAN ID settings of the iDRAC. Only IPv4 is supported in the current version",
								"type": "string",
								"example": "ipv4",
								"enum": [
									"ipv4"
								]
							},
							"ip_address": {
								"description": "The MAC address of the iDRAC",
								"type": "string",
								"example": "192.168.101.30"
							},
							"netmask": {
								"description": "The netmask of the iDRAC",
								"type": "string",
								"example": "255.255.255.0"
							},
							"gateway": {
								"description": "The gateway address of the iDRAC",
								"type": "string",
								"example": "192.168.101.1"
							}
						}
					},
					"dhcp_enabled": {
						"description": "Whether DHCP service enabled or not",
						"example": false,
						"type": "boolean"
					},
					"vlan": {
						"description": "The IPv4 address of the iDRAC",
						"type": "object",
						"required": [
							"vlan_id"
						],
						"properties": {
							"vlan_id": {
								"description": "The VLAN ID setting of the iDRAC. Set 0 to disable",
								"type": "integer",
								"example": 0
							},
							"vlan_priority": {
								"description": "The VLAN priority setting of the iDRAC. The default value is 0",
								"type": "integer",
								"default": 0
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"ip": {
							"type": "ipv4",
							"ip_address": "192.168.101.30",
							"netmask": "255.255.255.0",
							"gateway": "192.168.101.1"
						},
						"dhcp_enabled": false,
						"vlan": {
							"vlan_id": 0,
							"vlan_priority": 0
						}
					}
				}
			},
			"IdracNetworkIPv6Spec": {
				"description": "Information about the iDRAC IP LAN settings for 7.0.350+",
				"type": "object",
				"properties": {
					"ipv4": {
						"description": "The IP information of the iDRAC",
						"type": "object",
						"properties": {
							"ip_address": {
								"description": "The MAC address of the iDRAC",
								"type": "string",
								"example": "192.168.101.30"
							},
							"netmask": {
								"description": "The netmask of the iDRAC",
								"type": "string",
								"example": "255.255.255.0"
							},
							"gateway": {
								"description": "The gateway address of the iDRAC",
								"type": "string",
								"example": "192.168.101.1"
							},
							"dhcp_enabled": {
								"description": "Whether DHCP service enabled or not",
								"example": false,
								"type": "boolean"
							}
						}
					},
					"ipv6": {
						"description": "Internal use only",
						"type": "object",
						"properties": {
							"ip_address": {
								"description": "Internal use only",
								"type": "string",
								"example": "2001:db8:1ab:16::102"
							},
							"prefix_length": {
								"description": "Internal use only",
								"type": "integer",
								"example": 64
							},
							"gateway": {
								"description": "Internal use only",
								"type": "string",
								"example": "2001:db8:1ab:16::1"
							},
							"auto_config_enabled": {
								"description": "Internal use only",
								"example": false,
								"type": "boolean"
							}
						}
					},
					"vlan": {
						"description": "The IPv4 address of the iDRAC",
						"type": "object",
						"properties": {
							"vlan_id": {
								"description": "The VLAN ID setting of the iDRAC. Set 0 to disable",
								"type": "integer",
								"example": 0
							},
							"vlan_priority": {
								"description": "The VLAN priority setting of the iDRAC. The default value is 0",
								"type": "integer",
								"default": 0
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"ipv4": {
							"ip_address": "192.168.101.30",
							"netmask": "255.255.255.0",
							"gateway": "192.168.101.1",
							"dhcp_enabled": false
						},
						"ipv6": {
							"ip_address": "2001:db8:1ab:16::102",
							"prefix_length": 64,
							"gateway": "2001:db8:1ab:16::1",
							"auto_config_enabled": false
						},
						"vlan": {
							"vlan_id": 0,
							"vlan_priority": 0
						}
					}
				}
			},
			"NetworkVxMInfo": {
				"description": "Message and status of pre-installation static IP request",
				"type": "object",
				"required": [
					"state",
					"message"
				],
				"properties": {
					"state": {
						"type": "string",
						"description": "Current execution status"
					},
					"message": {
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"state": "PENDING",
						"message": "The request is sent successfully. Try the new VxRail Manager IP address after a couple of minutes, as the execution requires time to complete in the background."
					}
				}
			},
			"RequestStatusInfo": {
				"description": "Detailed status information of any long-running request.",
				"type": "object",
				"properties": {
					"id": {
						"description": "Each asynchronous (long-running) request needs to return a requestId which can be used to get the status of execution.",
						"type": "string"
					},
					"owner": {
						"description": "The owner of the request which is typically the user who issue the original request",
						"type": "string"
					},
					"state": {
						"description": "The current state of the execution",
						"type": "string",
						"enum": [
							"UNKNOWN",
							"STARTED",
							"IN_PROGRESS",
							"COMPLETED",
							"FAILED",
							"ABANDONED",
							"ABORTED"
						]
					},
					"error": {
						"description": "The error message if the execution state is ERROR",
						"type": "string"
					},
					"progress": {
						"description": "The progress of the current execution, ranging from 0 to 100",
						"type": "integer"
					},
					"start_time": {
						"description": "The start time of the current execution",
						"type": "integer",
						"format": "int64"
					},
					"end_time": {
						"description": "The end time of the current execution",
						"type": "integer",
						"format": "int64"
					},
					"target": {
						"description": "The target of the current execution",
						"type": "string"
					},
					"step": {
						"description": "The current step if the original request has been separated into multiple steps",
						"type": "string"
					},
					"detail": {
						"description": "The detailed status of a specific application",
						"type": "string"
					},
					"extension": {
						"description": "The application specific status information",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"owner": "string",
						"state": "IN_PROGRESS",
						"error": "string",
						"progress": 0,
						"start_time": 0,
						"end_time": 0,
						"target": "string",
						"step": "string",
						"detail": "string",
						"extension": "string"
					}
				}
			},
			"HealthPrecheckSpec_v1": {
				"description": "Input parameters for the health pre-check",
				"type": "object",
				"required": [
					"bundle_file_locator",
					"health_precheck_type",
					"vxrail",
					"vcenter"
				],
				"properties": {
					"bundle_file_locator": {
						"description": "The full path of the single upgrade bundle or first package of a multiple part upgrade bundle",
						"type": "string"
					},
					"health_precheck_type": {
						"description": "health pre-check type",
						"type": "string"
					},
					"vxrail": {
						"$ref": "#/components/schemas/VxRailManagerSpec"
					},
					"vcenter": {
						"$ref": "#/components/schemas/VcenterEmbeddedPSCSpec"
					},
					"witness": {
						"$ref": "#/components/schemas/WitnessSpec"
					},
					"upgrade_sequence": {
						"$ref": "#/components/schemas/UpgradeSequence"
					}
				},
				"x-examples": {
					"Example": {
						"bundle_file_locator": "string",
						"health_precheck_type": "string",
						"vxrail": {
							"vxm_root_user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"vcenter": {
							"vc_admin_user": {
								"username": "administrator",
								"password": "password"
							},
							"vcsa_root_user": {
								"username": "administrator",
								"password": "password"
							},
							"migration_spec": {
								"source_vcsa_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"target_vcsa_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"temporary_ip_setting": {
									"temporary_ip": "string",
									"gateway": "string",
									"netmask": "string"
								}
							}
						},
						"witness": {
							"witness_user": {
								"username": "administrator",
								"password": "password"
							},
							"auto_witness_upgrade": true
						},
						"upgrade_sequence": {
							"preferred_fault_domain_first": true
						}
					}
				}
			},
			"VxRailManagerSpec": {
				"description": "Information regarding the VxRail Manager",
				"type": "object",
				"required": [
					"vxm_root_user"
				],
				"properties": {
					"vxm_root_user": {
						"$ref": "#/components/schemas/UserSpec"
					}
				},
				"x-examples": {
					"Example": {
						"vxm_root_user": {
							"username": "administrator",
							"password": "password"
						}
					}
				}
			},
			"VcenterEmbeddedPSCSpec": {
				"description": "Information regarding the vCenter",
				"type": "object",
				"required": [
					"vc_admin_user"
				],
				"properties": {
					"vc_admin_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"vcsa_root_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"migration_spec": {
						"$ref": "#/components/schemas/VcenterEmbeddedPSCMigrationSpec"
					}
				},
				"x-examples": {
					"Example": {
						"vc_admin_user": {
							"username": "administrator",
							"password": "password"
						},
						"vcsa_root_user": {
							"username": "administrator",
							"password": "password"
						},
						"migration_spec": {
							"source_vcsa_host": {
								"name": "string",
								"user": {
									"username": "administrator",
									"password": "password"
								}
							},
							"target_vcsa_host": {
								"name": "string",
								"user": {
									"username": "administrator",
									"password": "password"
								}
							},
							"temporary_ip_setting": {
								"temporary_ip": "string",
								"gateway": "string",
								"netmask": "string"
							}
						}
					}
				}
			},
			"VcenterEmbeddedPSCMigrationSpec": {
				"description": "Information for the vCenter migration-based upgrade.",
				"type": "object",
				"required": [
					"source_vcsa_host",
					"target_vcsa_host",
					"temporary_ip_setting"
				],
				"properties": {
					"source_vcsa_host": {
						"$ref": "#/components/schemas/EsxiHostSpec"
					},
					"target_vcsa_host": {
						"$ref": "#/components/schemas/EsxiHostSpec"
					},
					"temporary_ip_setting": {
						"$ref": "#/components/schemas/TemporaryIpSettingSpec"
					}
				},
				"x-examples": {
					"Example": {
						"source_vcsa_host": {
							"name": "string",
							"user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"target_vcsa_host": {
							"name": "string",
							"user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"temporary_ip_setting": {
							"temporary_ip": "string",
							"gateway": "string",
							"netmask": "string"
						}
					}
				}
			},
			"EsxiHostSpec": {
				"description": "ESXi host information.",
				"properties": {
					"name": {
						"description": "Hostname of the ESXi host.",
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/UserSpec"
					}
				},
				"x-examples": {
					"Example": {
						"name": "string",
						"user": {
							"username": "administrator",
							"password": "password"
						}
					}
				}
			},
			"TemporaryIpSettingSpec": {
				"description": "Temporary IP settings for the vCenter upgrade",
				"required": [
					"temporary_ip",
					"gateway",
					"netmask"
				],
				"properties": {
					"temporary_ip": {
						"description": "Temporary IP to be used during the vCenter upgrade",
						"type": "string"
					},
					"gateway": {
						"description": "Gateway to be used during the vCenter upgrade",
						"type": "string"
					},
					"netmask": {
						"description": "Netmask to be used during the vCenter upgrade",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"temporary_ip": "string",
						"gateway": "string",
						"netmask": "string"
					}
				}
			},
			"WitnessSpec": {
				"description": "(Optional) Information regarding the witness for a stretched cluster, including a vSAN 2-node cluster. The witness object only applies to a cluster when vLCM is not enabled.",
				"type": "object",
				"required": [
					"auto_witness_upgrade"
				],
				"properties": {
					"witness_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"auto_witness_upgrade": {
						"description": "Whether VxRail will automatically upgrade the witness node",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"witness_user": {
							"username": "administrator",
							"password": "password"
						},
						"auto_witness_upgrade": true
					}
				}
			},
			"UpgradeSequence": {
				"description": "(Optional) Stretched cluster upgrade sequence selection. Note: For a standard cluster and vSAN 2-node cluster, this option should not be specified. The UpgradeSequence object only applies to a cluster when vLCM is not enabled.",
				"type": "object",
				"x-examples": {
					"Example": {
						"preferred_fault_domain_first": true
					}
				},
				"properties": {
					"preferred_fault_domain_first": {
						"description": "Whether to upgrade preferred fault domain hosts first",
						"type": "boolean"
					}
				},
				"required": [
					"preferred_fault_domain_first"
				]
			},
			"AsyncLcmRequestSuccessResponse": {
				"type": "object",
				"x-examples": {
					"Example": {
						"request_id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
						"error_code": 2001,
						"message": "string"
					}
				},
				"description": "Asynchronous LCM request response",
				"properties": {
					"request_id": {
						"type": "string",
						"format": "uuid",
						"example": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
						"description": "Request ID of the response"
					},
					"error_code": {
						"type": "integer",
						"minimum": 2001,
						"maximum": 2999,
						"description": "Error code of the response"
					},
					"message": {
						"type": "string",
						"description": "Response message."
					}
				}
			},
			"LcmErrorResponse": {
				"type": "object",
				"description": "LCM error response",
				"properties": {
					"error_code": {
						"type": "integer",
						"minimum": 2001,
						"maximum": 2999,
						"description": "Error code of the response"
					},
					"message": {
						"type": "string",
						"description": "Message of the response"
					},
					"knowledge_base": {
						"type": "integer",
						"description": "Knowledge base ID number of the response"
					}
				}
			},
			"UpgradeSpec_v1": {
				"description": "Input parameters for the upgrade",
				"type": "object",
				"required": [
					"bundle_file_locator",
					"vxrail",
					"vcenter"
				],
				"properties": {
					"bundle_file_locator": {
						"description": "The full path of the single upgrade bundle or first package of multiple part upgrade bundle",
						"type": "string"
					},
					"vxrail": {
						"$ref": "#/components/schemas/VxRailManagerSpec"
					},
					"vcenter": {
						"$ref": "#/components/schemas/VcenterSpec"
					}
				},
				"x-examples": {
					"Example": {
						"bundle_file_locator": "string",
						"vxrail": {
							"vxm_root_user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"vcenter": {
							"vc_admin_user": {
								"username": "administrator",
								"password": "password"
							},
							"vcsa_root_user": {
								"username": "administrator",
								"password": "password"
							},
							"psc_root_user": {
								"username": "administrator",
								"password": "password"
							},
							"migration_spec": {
								"source_vcsa_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"source_psc_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"target_vcsa_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"temporary_ip_setting": {
									"temporary_ip": "string",
									"gateway": "string",
									"netmask": "string"
								}
							}
						}
					}
				}
			},
			"VcenterSpec": {
				"description": "Information regarding the vCenter",
				"type": "object",
				"required": [
					"vc_admin_user"
				],
				"properties": {
					"vc_admin_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"vcsa_root_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"psc_root_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"migration_spec": {
						"$ref": "#/components/schemas/VcenterMigrationSpec"
					}
				},
				"x-examples": {
					"Example": {
						"vc_admin_user": {
							"username": "administrator",
							"password": "password"
						},
						"vcsa_root_user": {
							"username": "administrator",
							"password": "password"
						},
						"psc_root_user": {
							"username": "administrator",
							"password": "password"
						},
						"migration_spec": {
							"source_vcsa_host": {
								"name": "string",
								"user": {
									"username": "administrator",
									"password": "password"
								}
							},
							"source_psc_host": {
								"name": "string",
								"user": {
									"username": "administrator",
									"password": "password"
								}
							},
							"target_vcsa_host": {
								"name": "string",
								"user": {
									"username": "administrator",
									"password": "password"
								}
							},
							"temporary_ip_setting": {
								"temporary_ip": "string",
								"gateway": "string",
								"netmask": "string"
							}
						}
					}
				}
			},
			"VcenterMigrationSpec": {
				"description": "Information for vCenter migration based upgrade.",
				"type": "object",
				"required": [
					"source_vcsa_host",
					"source_psc_host",
					"target_vcsa_host",
					"temporary_ip_setting"
				],
				"properties": {
					"source_vcsa_host": {
						"$ref": "#/components/schemas/EsxiHostSpec"
					},
					"source_psc_host": {
						"$ref": "#/components/schemas/EsxiHostSpec"
					},
					"target_vcsa_host": {
						"$ref": "#/components/schemas/EsxiHostSpec"
					},
					"temporary_ip_setting": {
						"$ref": "#/components/schemas/TemporaryIpSettingSpec"
					}
				},
				"x-examples": {
					"Example": {
						"source_vcsa_host": {
							"name": "string",
							"user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"source_psc_host": {
							"name": "string",
							"user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"target_vcsa_host": {
							"name": "string",
							"user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"temporary_ip_setting": {
							"temporary_ip": "string",
							"gateway": "string",
							"netmask": "string"
						}
					}
				}
			},
			"UpgradeSpec_v2": {
				"description": "Input parameters for the upgrade",
				"type": "object",
				"required": [
					"bundle_file_locator",
					"vxrail",
					"vcenter"
				],
				"properties": {
					"bundle_file_locator": {
						"description": "The full path of the single upgrade bundle or first package of multiple part upgrade bundle",
						"type": "string"
					},
					"vxrail": {
						"$ref": "#/components/schemas/VxRailManagerSpec"
					},
					"vcenter": {
						"$ref": "#/components/schemas/VcenterSpec"
					},
					"witness": {
						"$ref": "#/components/schemas/WitnessSpec"
					},
					"upgrade_sequence": {
						"$ref": "#/components/schemas/UpgradeSequence"
					}
				},
				"x-examples": {
					"Example": {
						"bundle_file_locator": "string",
						"vxrail": {
							"vxm_root_user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"vcenter": {
							"vc_admin_user": {
								"username": "administrator",
								"password": "password"
							},
							"vcsa_root_user": {
								"username": "administrator",
								"password": "password"
							},
							"psc_root_user": {
								"username": "administrator",
								"password": "password"
							},
							"migration_spec": {
								"source_vcsa_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"source_psc_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"target_vcsa_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"temporary_ip_setting": {
									"temporary_ip": "string",
									"gateway": "string",
									"netmask": "string"
								}
							}
						},
						"witness": {
							"witness_user": {
								"username": "administrator",
								"password": "password"
							},
							"auto_witness_upgrade": true
						},
						"upgrade_sequence": {
							"preferred_fault_domain_first": true
						}
					}
				}
			},
			"UpgradeSpec_v3": {
				"description": "Input parameters for the upgrade",
				"type": "object",
				"required": [
					"bundle_file_locator",
					"vxrail",
					"vcenter"
				],
				"properties": {
					"bundle_file_locator": {
						"description": "The full path of the single upgrade bundle or first package of a multiple part upgrade bundle. [Note] Multi-part upgrades must follow required naming conventions -- (1) The first file (the installer file) contains \"installer\" in the name. (2) Users must not rename any files belonging to the multi-part bundle.",
						"type": "string"
					},
					"vxrail": {
						"$ref": "#/components/schemas/VxRailManagerSpec"
					},
					"vcenter": {
						"$ref": "#/components/schemas/VcenterEmbeddedPSCSpec"
					},
					"witness": {
						"$ref": "#/components/schemas/WitnessSpec"
					},
					"upgrade_sequence": {
						"$ref": "#/components/schemas/UpgradeSequence"
					}
				},
				"x-examples": {
					"Example": {
						"bundle_file_locator": "string",
						"vxrail": {
							"vxm_root_user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"vcenter": {
							"vc_admin_user": {
								"username": "administrator",
								"password": "password"
							},
							"vcsa_root_user": {
								"username": "administrator",
								"password": "password"
							},
							"migration_spec": {
								"source_vcsa_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"target_vcsa_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"temporary_ip_setting": {
									"temporary_ip": "string",
									"gateway": "string",
									"netmask": "string"
								}
							}
						},
						"witness": {
							"witness_user": {
								"username": "administrator",
								"password": "password"
							},
							"auto_witness_upgrade": true
						},
						"upgrade_sequence": {
							"preferred_fault_domain_first": true
						}
					}
				}
			},
			"UpgradeSpec_v4": {
				"description": "Input parameters for the upgrade",
				"type": "object",
				"required": [
					"bundle_file_locator",
					"vxrail",
					"vcenter"
				],
				"properties": {
					"bundle_file_locator": {
						"description": "The full path of the single upgrade bundle or first package of a multiple part upgrade bundle. [Note] Multi-part upgrades must follow required naming conventions -- (1) The first file (the installer file) contains \"installer\" in the name. (2) Users must not rename any files belonging to the multi-part bundle.",
						"type": "string"
					},
					"vxrail": {
						"$ref": "#/components/schemas/VxRailManagerSpec"
					},
					"vcenter": {
						"$ref": "#/components/schemas/VcenterEmbeddedPSCSpecV4"
					},
					"witness": {
						"$ref": "#/components/schemas/WitnessSpec"
					},
					"upgrade_sequence": {
						"$ref": "#/components/schemas/UpgradeSequence"
					},
					"target_hosts": {
						"description": "(Optional) Hosts to be upgraded. The target_hosts object only applies to a cluster when vLCM is enabled.",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HostBaseSpec"
						}
					}
				},
				"x-examples": {
					"Example": {
						"bundle_file_locator": "string",
						"vxrail": {
							"vxm_root_user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"vcenter": {
							"vc_admin_user": {
								"username": "administrator",
								"password": "password"
							},
							"vcsa_root_user": {
								"username": "administrator",
								"password": "password"
							},
							"migration_spec": {
								"source_vcsa_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"target_vcsa_host": {
									"name": "string",
									"user": {
										"username": "administrator",
										"password": "password"
									}
								},
								"temporary_ip_setting": {
									"temporary_ip": "string",
									"gateway": "string",
									"netmask": "string"
								}
							}
						},
						"witness": {
							"witness_user": {
								"username": "administrator",
								"password": "password"
							},
							"auto_witness_upgrade": true
						},
						"upgrade_sequence": {
							"preferred_fault_domain_first": true
						},
						"target_hosts": [
							{
								"name": "string"
							}
						]
					}
				}
			},
			"UpgradeSpecV5": {
				"description": "Input parameters for the upgrade",
				"type": "object",
				"required": [
					"bundle_file_locator",
					"vxrail",
					"vcenter"
				],
				"properties": {
					"bundle_file_locator": {
						"description": "The full path of the single upgrade bundle or first package of a multiple part upgrade bundle. Multiple part upgrades must follow the mentioned criteria -- (1) The first file (the installer file) contains \"installer\" in the name. (2) Do not rename any files belonging to the multiple part bundle.",
						"type": "string"
					},
					"vxrail": {
						"$ref": "#/components/schemas/VxRailManagerSpec"
					},
					"vcenter": {
						"$ref": "#/components/schemas/VcenterEmbeddedPSCSpecV4"
					},
					"witness": {
						"$ref": "#/components/schemas/WitnessSpec"
					},
					"upgrade_sequence": {
						"$ref": "#/components/schemas/UpgradeSequence"
					},
					"target_hosts": {
						"description": "(Optional) Hosts to be upgraded. The target_hosts object only applies to a cluster when vLCM is enabled.",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HostBaseSpec"
						}
					},
					"update_rules": {
						"type": "object",
						"properties": {
							"skip_failed_hosts": {
								"type": "boolean",
								"example": false
							},
							"missing_file_check": {
								"type": "boolean",
								"example": true
							},
							"ecosystem_check": {
								"$ref": "#/components/schemas/LcmEcosystemCheckSpec"
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"bundle_file_locator": "string",
						"vxrail": {
							"vxm_root_user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"vcenter": {
							"vc_admin_user": {
								"username": "administrator",
								"password": "password"
							},
							"vcsa_root_user": {
								"username": "administrator",
								"password": "password"
							},
							"migration_spec": {
								"source_vcsa_host": {
									"name": "string"
								},
								"target_vcsa_host": {
									"name": "string"
								},
								"temporary_ip_setting": {
									"temporary_ip": "string",
									"gateway": "string",
									"netmask": "string"
								}
							}
						},
						"witness": {
							"witness_user": {
								"username": "administrator",
								"password": "password"
							},
							"auto_witness_upgrade": true
						},
						"upgrade_sequence": {
							"preferred_fault_domain_first": true
						},
						"target_hosts": [
							{
								"name": "string"
							}
						],
						"update_rules": {
							"missing_file_check": true,
							"skip_failed_hosts": false,
							"ecosystem_check": {
								"continue_with_incompatible": true,
								"accepted_components": [
									"RP44VM"
								]
							}
						}
					}
				}
			},
			"UpgradeSpecV6": {
				"description": "Input parameters for the upgrade",
				"type": "object",
				"required": [
					"bundle_file_locator",
					"vxrail",
					"vcenter"
				],
				"properties": {
					"bundle_file_locator": {
						"description": "The full path of the single upgrade bundle or first package of a multiple part upgrade bundle. Multiple part upgrades must follow the mentioned criteria -- (1) The first file (the installer file) contains \"installer\" in the name. (2) Do not rename any files belonging to the multiple part bundle.",
						"type": "string"
					},
					"vxrail": {
						"$ref": "#/components/schemas/VxRailManagerSpec"
					},
					"vcenter": {
						"$ref": "#/components/schemas/VcenterEmbeddedPSCSpecV5"
					},
					"witness": {
						"$ref": "#/components/schemas/WitnessSpec"
					},
					"upgrade_sequence": {
						"$ref": "#/components/schemas/UpgradeSequence"
					},
					"target_hosts": {
						"description": "(Optional) Hosts to be upgraded. The target_hosts object only applies to a cluster when vLCM is enabled.",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HostBaseSpec"
						}
					},
					"update_rules": {
						"type": "object",
						"properties": {
							"ecosystem_check": {
								"$ref": "#/components/schemas/LcmEcosystemCheckSpec"
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"bundle_file_locator": "string",
						"vxrail": {
							"vxm_root_user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"vcenter": {
							"vc_admin_user": {
								"username": "administrator",
								"password": "password"
							},
							"vcsa_root_user": {
								"username": "administrator",
								"password": "password"
							},
							"vc_mgmt_user": {
								"username": "management@vsphere.local",
								"password": "password"
							},
							"migration_spec": {
								"source_vcsa_host": {
									"name": "string"
								},
								"target_vcsa_host": {
									"name": "string"
								},
								"temporary_ip_setting": {
									"temporary_ip": "string",
									"gateway": "string",
									"netmask": "string"
								}
							}
						},
						"witness": {
							"witness_user": {
								"username": "administrator",
								"password": "password"
							},
							"auto_witness_upgrade": true
						},
						"upgrade_sequence": {
							"preferred_fault_domain_first": true
						},
						"target_hosts": [
							{
								"name": "string"
							}
						],
						"update_rules": {
							"missing_file_check": true,
							"skip_failed_hosts": false,
							"ecosystem_check": {
								"continue_with_incompatible": true,
								"accepted_components": [
									"RP44VM"
								]
							}
						}
					}
				}
			},
			"LcmEcosystemCheckSpec": {
				"description": "Pre-check rule for ecosystem components. Set \"continue_with_incompatible\" as false to enable the ecosystem pre-check or set as true and enter a minimum of one component to determine which components should skip the check. If the value is not set then, LCM will ignore the all the incompatible check for the ecosystem components.",
				"type": "object",
				"properties": {
					"continue_with_incompatible": {
						"type": "boolean",
						"example": true
					},
					"components": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/EcosystemComponentsSpec"
						}
					}
				}
			},
			"EcosystemComponentsSpec": {
				"type": "string",
				"example": "RP4VM",
				"enum": [
					"RP4VM",
					"INTERNAL_SRS",
					"EXTERNAL_SRS",
					"WITNESS"
				]
			},
			"VcenterEmbeddedPSCSpecV4": {
				"description": "Information regarding the vCenter",
				"type": "object",
				"required": [
					"vc_admin_user"
				],
				"properties": {
					"vc_admin_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"vcsa_root_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"migration_spec": {
						"$ref": "#/components/schemas/VcenterEmbeddedPSCMigrationSpec_V4"
					}
				},
				"x-examples": {
					"Example": {
						"vc_admin_user": {
							"username": "administrator",
							"password": "password"
						},
						"vcsa_root_user": {
							"username": "administrator",
							"password": "password"
						},
						"migration_spec": {
							"source_vcsa_host": {
								"name": "string",
								"user": {
									"username": "administrator",
									"password": "password"
								}
							},
							"target_vcsa_host": {
								"name": "string",
								"user": {
									"username": "administrator",
									"password": "password"
								}
							},
							"temporary_ip_setting": {
								"temporary_ip": "string",
								"gateway": "string",
								"netmask": "string"
							}
						}
					}
				}
			},
			"VcenterEmbeddedPSCSpecV5": {
				"description": "Information regarding the vCenter",
				"type": "object",
				"required": [
					"vc_admin_user",
					"vc_mgmt_user"
				],
				"properties": {
					"vc_admin_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"vcsa_root_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"vc_mgmt_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"migration_spec": {
						"$ref": "#/components/schemas/VcenterEmbeddedPSCMigrationSpec_V4"
					}
				},
				"x-examples": {
					"Example": {
						"vc_admin_user": {
							"username": "administrator",
							"password": "password"
						},
						"vcsa_root_user": {
							"username": "administrator",
							"password": "password"
						},
						"vc_mgmt_user": {
							"username": "management@vsphere.local",
							"password": "password"
						},
						"migration_spec": {
							"source_vcsa_host": {
								"name": "string"
							},
							"target_vcsa_host": {
								"name": "string"
							},
							"temporary_ip_setting": {
								"temporary_ip": "string",
								"gateway": "string",
								"netmask": "string"
							}
						}
					}
				}
			},
			"VcenterEmbeddedPSCMigrationSpec_V4": {
				"description": "Information for vCenter migration-based upgrade.",
				"type": "object",
				"required": [
					"source_vcsa_host",
					"target_vcsa_host",
					"temporary_ip_setting"
				],
				"properties": {
					"source_vcsa_host": {
						"$ref": "#/components/schemas/EsxiHostSpec"
					},
					"target_vcsa_host": {
						"$ref": "#/components/schemas/EsxiHostSpec"
					},
					"temporary_ip_setting": {
						"$ref": "#/components/schemas/TemporaryIpSettingSpec"
					}
				},
				"x-examples": {
					"Example": {
						"source_vcsa_host": {
							"name": "string",
							"user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"target_vcsa_host": {
							"name": "string",
							"user": {
								"username": "administrator",
								"password": "password"
							}
						},
						"temporary_ip_setting": {
							"temporary_ip": "string",
							"gateway": "string",
							"netmask": "string"
						}
					}
				}
			},
			"HostBaseSpec": {
				"description": "(Optional) Hosts to be upgraded. The target_hosts object only applies to a cluster when vLCM is enabled.",
				"x-examples": {
					"Example": {
						"name": "string"
					}
				},
				"type": "object",
				"properties": {
					"name": {
						"description": "Name of the ESXi host.",
						"type": "string"
					}
				}
			},
			"GenerateReportSuccessResponse": {
				"type": "object",
				"properties": {
					"request_id": {
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"request_id": "string"
					}
				}
			},
			"InternalErrorResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string"
					}
				}
			},
			"StaticIPSettingsSpec": {
				"description": "Specification for setting the static IP address.",
				"type": "object",
				"required": [
					"ip",
					"gateway",
					"netmask",
					"vlan_id"
				],
				"properties": {
					"ip": {
						"description": "The static IP address to be set for VxRail Manager",
						"type": "string"
					},
					"gateway": {
						"description": "The network gateway address to be used for VxRail Manager",
						"type": "string"
					},
					"netmask": {
						"description": "The subnet mask to be used for VxRail Manager",
						"type": "string"
					},
					"vlan_id": {
						"description": "The VLAN ID to be used for VxRail Manager",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"ip": "string",
						"gateway": "string",
						"netmask": "string",
						"vlan_id": "string"
					}
				}
			},
			"StaticIPSettingsSpecV2": {
				"description": "Specification for setting the static IP address.",
				"type": "object",
				"required": [
					"vlan_id"
				],
				"properties": {
					"ip": {
						"description": "The static IP address to be set for VxRail Manager",
						"type": "string"
					},
					"gateway": {
						"description": "The network gateway address to be used for VxRail Manager",
						"type": "string"
					},
					"netmask": {
						"description": "The subnet mask to be used for VxRail Manager",
						"type": "string"
					},
					"vlan_id": {
						"description": "The VLAN ID to be used for VxRail Manager",
						"type": "string"
					},
					"ipv6": {
						"description": "Internal use only",
						"type": "string"
					},
					"gateway_ipv6": {
						"description": "Internal use only",
						"type": "string"
					},
					"prefix_length_ipv6": {
						"description": "Internal use only",
						"type": "integer"
					}
				},
				"x-examples": {
					"Example": {
						"ip": "string",
						"gateway": "string",
						"netmask": "string",
						"vlan_id": "string",
						"ipv6": "string",
						"gateway_ipv6": "string",
						"prefix_length_ipv6": 0
					}
				}
			},
			"HeartbeatInfo": {
				"description": "The information about heartbeat, including the status and system configuration.",
				"type": "object",
				"required": [
					"status"
				],
				"properties": {
					"id": {
						"description": "ID of the heartbeat",
						"type": "integer"
					},
					"status": {
						"description": "Status of the heartbeat",
						"type": "string",
						"enum": [
							"SUCCESS",
							"FAIL",
							"ESRS_INACTIVE",
							"INACTIVE"
						]
					},
					"beginTime": {
						"description": "The timestamp that status data started to be collected",
						"type": "string",
						"format": "date-time"
					},
					"endTime": {
						"description": "The timestamp that status data stopped being collected",
						"type": "string",
						"format": "date-time"
					},
					"message": {
						"description": "Status message for the heartbeat",
						"type": "string"
					},
					"data": {
						"description": "The system configuration data of the heartbeat",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"id": 0,
						"status": "SUCCESS",
						"beginTime": "2019-08-24T14:15:22Z",
						"endTime": "2019-08-24T14:15:22Z",
						"message": "string",
						"data": "string"
					}
				}
			},
			"KnowledgeBaseInfo": {
				"type": "object",
				"required": [
					"homeURL"
				],
				"properties": {
					"homeURL": {
						"description": "The home URL of the VxRail Support Knowledge Base",
						"type": "string"
					},
					"articlesLink": {
						"description": "The link for retrieving KB articles",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"homeURL": "string",
						"articlesLink": "string"
					}
				}
			},
			"ArticleInfo": {
				"description": "The article in Knowledge Base.",
				"type": "object",
				"required": [
					"id",
					"title",
					"url",
					"author",
					"date"
				],
				"properties": {
					"id": {
						"description": "ID of the article",
						"type": "string"
					},
					"title": {
						"description": "Title of the article",
						"type": "string"
					},
					"url": {
						"description": "URL of the article",
						"type": "string"
					},
					"author": {
						"description": "Author of the article",
						"type": "string"
					},
					"date": {
						"description": "Date that the article was posted",
						"type": "integer"
					},
					"products": {
						"description": "Products that the article relates to",
						"type": "string"
					},
					"audience": {
						"description": "Audience level of the article",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"title": "string",
						"url": "string",
						"author": "string",
						"date": 0,
						"products": "string",
						"audience": "string"
					}
				}
			},
			"CommunityInfo": {
				"type": "object",
				"required": [
					"homeURL"
				],
				"properties": {
					"homeURL": {
						"description": "The home URL of the VxRail community resources",
						"type": "string"
					},
					"messagesLink": {
						"description": "The link for retrieving messages",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"homeURL": "string",
						"messagesLink": "string"
					}
				}
			},
			"MessageInfo": {
				"description": "The message in Community.",
				"type": "object",
				"required": [
					"id",
					"type",
					"title",
					"url",
					"author",
					"date"
				],
				"properties": {
					"id": {
						"description": "ID of the message",
						"type": "string"
					},
					"type": {
						"description": "Type of the message",
						"type": "string"
					},
					"title": {
						"description": "Title of the message",
						"type": "string"
					},
					"url": {
						"description": "URL of the message",
						"type": "string"
					},
					"author": {
						"description": "Author of the message",
						"type": "string"
					},
					"date": {
						"description": "Date that the message was posted",
						"type": "integer"
					},
					"tags": {
						"description": "Informational tags about the message",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"status": {
						"description": "Status of the message",
						"type": "string"
					},
					"viewCount": {
						"description": "How many times the message has been viewed",
						"type": "integer"
					},
					"replyCount": {
						"description": "The number of comments posted on the message",
						"type": "integer"
					},
					"resolved": {
						"description": "The resolve status of message",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"type": "string",
						"title": "string",
						"url": "string",
						"author": "string",
						"date": 0,
						"tags": [
							"string"
						],
						"status": "string",
						"viewCount": 0,
						"replyCount": 0,
						"resolved": "string"
					}
				}
			},
			"SupportAccountInfo": {
				"description": "The support account which is persisted in the VxRail Manager database.",
				"type": "object",
				"required": [
					"username"
				],
				"properties": {
					"username": {
						"description": "Username for the support account",
						"type": "string"
					},
					"password": {
						"description": "Password for the support account",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"username": "string",
						"password": "string"
					}
				}
			},
			"SupportAccountSpec": {
				"description": "The username and password of the support account.",
				"type": "object",
				"required": [
					"username",
					"password"
				],
				"properties": {
					"username": {
						"description": "Username for the support account",
						"type": "string"
					},
					"password": {
						"description": "Password for the support account",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"username": "string",
						"password": "string"
					}
				}
			},
			"LogInfo": {
				"description": "The information about the log.",
				"type": "object",
				"properties": {
					"id": {
						"description": "The unique identifier for the log",
						"type": "string"
					},
					"types": {
						"description": "The type of component included in the log",
						"type": "string",
						"enum": [
							"vxm",
							"vcenter",
							"esxi",
							"idrac",
							"ptagent",
							"witness"
						]
					},
					"nodes": {
						"description": "An array of serial numbers for the nodes included in the log",
						"type": "array",
						"items": {
							"type": "string",
							"example": "JHN3S62"
						}
					},
					"creation_time": {
						"description": "Time that the support log was created",
						"type": "integer"
					},
					"path": {
						"description": "The file path of the log",
						"type": "string"
					},
					"size": {
						"description": "The size of the log",
						"type": "integer"
					},
					"details": {
						"description": "An array of details about the logs",
						"type": "array",
						"items": {
							"type": "string",
							"example": "Failed to generate idrac log bundle on JHN3S62 due to the node is not idrac log supported."
						}
					}
				},
				"x-examples": {
					"Example": {
						"id": "string",
						"types": "vxm",
						"nodes": [
							"JHN3S62"
						],
						"creation_time": 0,
						"path": "string",
						"size": 0,
						"details": [
							"Failed to generate idrac log bundle on JHN3S62 due to the node is not idrac log supported."
						]
					}
				}
			},
			"LogSpec": {
				"description": "The types of components and nodes for the log bundle collection.",
				"type": "object",
				"required": [
					"types"
				],
				"properties": {
					"types": {
						"description": "An array of the components included in the log",
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"vxm",
								"vcenter",
								"esxi",
								"idrac",
								"ptagent",
								"witness"
							]
						}
					},
					"nodes": {
						"description": "An array of serial numbers for the nodes included in the log",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"autoclean": {
						"description": "Whether to auto clean log bundles if VxRail Manager is at capacity",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"types": [
							"vxm"
						],
						"nodes": [
							"string"
						],
						"autoclean": true
					}
				}
			},
			"ServiceRequestInfo": {
				"description": "The url for service request.",
				"type": "object",
				"properties": {
					"url": {
						"description": "The URL for opening an SR",
						"type": "string"
					},
					"appliance_psnt": {
						"description": "The PSNT of the VxRail appliance",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"url": "string",
						"appliance_psnt": "string"
					}
				}
			},
			"ChatInfo": {
				"description": "Chat information",
				"type": "object",
				"properties": {
					"url": {
						"description": "The URL for the chat session",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"url": "string"
					}
				}
			},
			"SupportContactInfo": {
				"type": "object",
				"required": [
					"first_name",
					"last_name",
					"email",
					"company",
					"phone",
					"site_id"
				],
				"properties": {
					"first_name": {
						"description": "First name of the support administrator",
						"type": "string"
					},
					"last_name": {
						"description": "Last name of the support administrator",
						"type": "string"
					},
					"email": {
						"description": "Email address of the support account",
						"type": "string"
					},
					"company": {
						"description": "Company name",
						"type": "string"
					},
					"phone": {
						"description": "Phone number of the support administrator",
						"type": "string"
					},
					"site_id": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"default_site_id": {
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"first_name": "string",
						"last_name": "string",
						"email": "string",
						"company": "string",
						"phone": "string",
						"site_id": [
							"string"
						],
						"default_site_id": "string"
					}
				}
			},
			"VxmSystemInfo": {
				"description": "Information about the VxRail system",
				"type": "object",
				"required": [
					"description",
					"version",
					"health",
					"network_connected",
					"vc_connected",
					"cluster_type",
					"number_of_host",
					"is_external_vc",
					"logical_view_status"
				],
				"properties": {
					"description": {
						"description": "Description of the VxRail system",
						"type": "string"
					},
					"version": {
						"description": "Software version of the VxRail appliance",
						"type": "string"
					},
					"installed_time": {
						"description": "Time that the VxRail appliance software was installed",
						"type": "integer"
					},
					"health": {
						"description": "Health status of the VxRail system",
						"type": "string"
					},
					"network_connected": {
						"description": "Whether the host is connected to the internet",
						"type": "boolean"
					},
					"vc_connected": {
						"description": "Whether the vCenter is connected",
						"type": "boolean"
					},
					"upgrade_status": {
						"description": "The upgrade status of the VxRail appliance software",
						"type": "string",
						"enum": [
							"CANCELLED",
							"DOWNLOADED",
							"DOWNLOADING",
							"ERR_DOWNLOAD",
							"ERR_PROFILE_PRECHECKER",
							"ERR_UPGRADED",
							"ERR_UPGRADE_PRECHECKER",
							"ERR_UPLOAD",
							"HAS_NEWER",
							"LATEST",
							"PROFILE_PRECHECKED",
							"UPGRADED",
							"UPGRADE_PRECHECKING",
							"UPGRADING",
							"UPLOADED",
							"UPLOADING"
						]
					},
					"installed_components": {
						"description": "Software components installed in the VxRail system",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/InstalledComponent"
						}
					},
					"cluster_type": {
						"description": "Cluster configuration of the VxRail system",
						"type": "string"
					},
					"number_of_host": {
						"description": "Number of hosts in the cluster",
						"type": "integer"
					},
					"is_external_vc": {
						"description": "Whether the vCenter is an external vCenter",
						"type": "boolean"
					},
					"logical_view_status": {
						"description": "Whether the VxRail Manager logical view is enabled",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"description": "string",
						"version": "string",
						"installed_time": 0,
						"health": "string",
						"network_connected": true,
						"vc_connected": true,
						"upgrade_status": "CANCELLED",
						"installed_components": [
							{
								"component": "string",
								"name": "string",
								"description": "string",
								"current_version": "string",
								"upgrade_status": "CANCELLED",
								"baseline": "string",
								"installed_time": 0,
								"incompatibilities": [
									"string"
								],
								"multiple_version": true,
								"baseline_drifted": true,
								"supported": true
							}
						],
						"cluster_type": "string",
						"number_of_host": 0,
						"is_external_vc": true,
						"logical_view_status": true
					}
				}
			},
			"InstalledComponent": {
				"description": "Information about software components installed in the VxRail system",
				"type": "object",
				"required": [
					"name",
					"description",
					"current_version"
				],
				"properties": {
					"component": {
						"description": "Type of software component installed",
						"type": "string"
					},
					"name": {
						"description": "Installed component name",
						"type": "string"
					},
					"description": {
						"description": "Installed component description",
						"type": "string"
					},
					"current_version": {
						"description": "Installed component version",
						"type": "string"
					},
					"upgrade_status": {
						"description": "Description of the upgrade status of the installed software component",
						"type": "string",
						"enum": [
							"CANCELLED",
							"DOWNLOADED",
							"DOWNLOADING",
							"ERR_DOWNLOAD",
							"ERR_PROFILE_PRECHECKER",
							"ERR_UPGRADED",
							"ERR_UPGRADE_PRECHECKER",
							"ERR_UPLOAD",
							"HAS_NEWER",
							"LATEST",
							"PROFILE_PRECHECKED",
							"UPGRADED",
							"UPGRADE_PRECHECKING",
							"UPGRADING",
							"UPLOADED",
							"UPLOADING"
						]
					},
					"baseline": {
						"description": "Software version of component at the time the component was initially installed",
						"type": "string"
					},
					"installed_time": {
						"description": "The time that the software component was initially installed (in milliseconds)",
						"type": "integer"
					},
					"incompatibilities": {
						"description": "A list of other software components that the installed component is incompatible with",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"multiple_version": {
						"description": "Whether the software component has different versions installed in other nodes in the cluster",
						"type": "boolean"
					},
					"baseline_drifted": {
						"description": "Whether the current configuration of the installed software component is different than the initial configuration",
						"type": "boolean"
					},
					"supported": {
						"description": "Whether the current version of the installed software component is supported",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"component": "string",
						"name": "string",
						"description": "string",
						"current_version": "string",
						"upgrade_status": "CANCELLED",
						"baseline": "string",
						"installed_time": 0,
						"incompatibilities": [
							"string"
						],
						"multiple_version": true,
						"baseline_drifted": true,
						"supported": true
					}
				}
			},
			"VxmSystemInfoV2": {
				"description": "Information about the VxRail system",
				"type": "object",
				"required": [
					"description",
					"version",
					"health",
					"network_connected",
					"vc_connected",
					"deployment_type",
					"number_of_host",
					"is_external_vc",
					"logical_view_status"
				],
				"properties": {
					"description": {
						"description": "Description of the VxRail system",
						"type": "string"
					},
					"version": {
						"description": "Software version of the VxRail appliance",
						"type": "string"
					},
					"installed_time": {
						"description": "Time that the VxRail appliance software was installed",
						"type": "integer"
					},
					"health": {
						"description": "Health status of the VxRail system",
						"type": "string"
					},
					"network_connected": {
						"description": "Whether the host is connected to the internet",
						"type": "boolean"
					},
					"vc_connected": {
						"description": "Whether the vCenter is connected",
						"type": "boolean"
					},
					"upgrade_status": {
						"description": "The upgrade status of the VxRail appliance software",
						"type": "string",
						"enum": [
							"CANCELLED",
							"DOWNLOADED",
							"DOWNLOADING",
							"ERR_DOWNLOAD",
							"ERR_PROFILE_PRECHECKER",
							"ERR_UPGRADED",
							"ERR_UPGRADE_PRECHECKER",
							"ERR_UPLOAD",
							"HAS_NEWER",
							"LATEST",
							"PROFILE_PRECHECKED",
							"UPGRADED",
							"UPGRADE_PRECHECKING",
							"UPGRADING",
							"UPLOADED",
							"UPLOADING"
						]
					},
					"installed_components": {
						"description": "Software components installed in the VxRail system",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/InstalledComponent"
						}
					},
					"deployment_type": {
						"description": "Information about the cluster deployment type",
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"STANDARD",
								"VSAN_2_NODE",
								"VSAN_2_NODE_STRETCHED_CLUSTER",
								"COMPUTE",
								"STRETCHED_CLUSTER",
								"DIMENSION",
								"VCF",
								"VVD",
								"VVD_VxRail",
								"VCF_VxRail"
							]
						}
					},
					"number_of_host": {
						"description": "Number of hosts in the cluster",
						"type": "integer"
					},
					"is_external_vc": {
						"description": "Whether the vCenter is an external vCenter",
						"type": "boolean"
					},
					"logical_view_status": {
						"description": "Whether the VxRail Manager logical view is enabled",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"description": "string",
						"version": "string",
						"installed_time": 0,
						"health": "string",
						"network_connected": true,
						"vc_connected": true,
						"upgrade_status": "CANCELLED",
						"installed_components": [
							{
								"component": "string",
								"name": "string",
								"description": "string",
								"current_version": "string",
								"upgrade_status": "CANCELLED",
								"baseline": "string",
								"installed_time": 0,
								"incompatibilities": [
									"string"
								],
								"multiple_version": true,
								"baseline_drifted": true,
								"supported": true
							}
						],
						"deployment_type": [
							"STANDARD"
						],
						"number_of_host": 0,
						"is_external_vc": true,
						"logical_view_status": true
					}
				}
			},
			"VxmSystemInfoV3": {
				"description": "Information about the VxRail system",
				"type": "object",
				"required": [
					"description",
					"version",
					"health",
					"network_connected",
					"vc_connected",
					"deployment_type",
					"number_of_host",
					"is_external_vc",
					"logical_view_status"
				],
				"properties": {
					"description": {
						"description": "Description of the VxRail system",
						"type": "string"
					},
					"version": {
						"description": "Software version of the VxRail appliance",
						"type": "string"
					},
					"installed_time": {
						"description": "Time that the VxRail appliance software was installed",
						"type": "integer"
					},
					"health": {
						"description": "Health status of the VxRail system",
						"type": "string"
					},
					"network_connected": {
						"description": "Whether the host is connected to the internet",
						"type": "boolean"
					},
					"vc_connected": {
						"description": "Whether the vCenter is connected",
						"type": "boolean"
					},
					"upgrade_status": {
						"description": "The upgrade status of the VxRail appliance software",
						"type": "string",
						"enum": [
							"CANCELLED",
							"DOWNLOADED",
							"DOWNLOADING",
							"ERR_DOWNLOAD",
							"ERR_PROFILE_PRECHECKER",
							"ERR_UPGRADED",
							"ERR_UPGRADE_PRECHECKER",
							"ERR_UPLOAD",
							"HAS_NEWER",
							"LATEST",
							"PROFILE_PRECHECKED",
							"UPGRADED",
							"UPGRADE_PRECHECKING",
							"UPGRADING",
							"UPLOADED",
							"UPLOADING"
						]
					},
					"installed_components": {
						"description": "Software components installed in the VxRail system",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/InstalledComponent"
						}
					},
					"deployment_type": {
						"description": "Information about the type of cluster deployed",
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"STANDARD",
								"VSAN_2_NODE",
								"VSAN_2_NODE_STRETCHED_CLUSTER",
								"COMPUTE",
								"STRETCHED_CLUSTER",
								"DIMENSION",
								"VCF",
								"VVD",
								"VVD_VxRail",
								"VCF_VxRail"
							]
						}
					},
					"number_of_host": {
						"description": "Number of hosts in the cluster",
						"type": "integer"
					},
					"is_external_vc": {
						"description": "Whether the vCenter is an external vCenter",
						"type": "boolean"
					},
					"logical_view_status": {
						"description": "Whether the VxRail Manager logical view is enabled",
						"type": "boolean"
					},
					"shared_storage": {
						"description": "Information about shared storage in the VxRail cluster, currently only primary storage will be return.",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SharedStorage"
						}
					}
				},
				"x-examples": {
					"Example": {
						"description": "string",
						"version": "string",
						"installed_time": 0,
						"health": "string",
						"network_connected": true,
						"vc_connected": true,
						"upgrade_status": "CANCELLED",
						"installed_components": [
							{
								"component": "string",
								"name": "string",
								"description": "string",
								"current_version": "string",
								"upgrade_status": "CANCELLED",
								"baseline": "string",
								"installed_time": 0,
								"incompatibilities": [
									"string"
								],
								"multiple_version": true,
								"baseline_drifted": true,
								"supported": true
							}
						],
						"deployment_type": [
							"STANDARD"
						],
						"number_of_host": 0,
						"is_external_vc": true,
						"logical_view_status": true,
						"shared_storage": [
							{
								"name": "string",
								"type": "VSAN",
								"protocol": "FC",
								"is_primary": true,
								"datastore_id": "string"
							}
						]
					}
				}
			},
			"SharedStorage": {
				"description": "Information about shared storage in the VxRail cluster",
				"type": "object",
				"required": [
					"name",
					"type",
					"is_primary"
				],
				"properties": {
					"name": {
						"description": "The shared datastore name",
						"type": "string"
					},
					"type": {
						"description": "The shared datastore type",
						"type": "string",
						"enum": [
							"VSAN",
							"VMFS",
							"NFS",
							"VVOL",
							"HCI_MESH",
							"VSAN_ESA"
						]
					},
					"protocol": {
						"description": "The storage protocol used by the host",
						"type": "string",
						"enum": [
							"FC",
							"SCSI",
							"NFS",
							"VSAN",
							"OTHER",
							"FC-NVMe",
							"TCP-NVMe",
							"ISCSI",
							"UNKNOWN"
						]
					},
					"is_primary": {
						"description": "Whether the datastore is the primary datastore where VxRail Manager is deployed on it",
						"type": "boolean"
					},
					"datastore_id": {
						"description": "The storage moid used by the host",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"name": "string",
						"type": "VSAN",
						"protocol": "FC",
						"is_primary": true,
						"datastore_id": "string"
					}
				}
			},
			"VxmSystemInfoV4": {
				"description": "Information about the VxRail system",
				"type": "object",
				"required": [
					"description",
					"version",
					"health",
					"network_connected",
					"vc_connected",
					"deployment_type",
					"cluster_host_count",
					"satellite_host_count",
					"is_external_vc",
					"logical_view_status"
				],
				"properties": {
					"description": {
						"description": "Description of the VxRail system",
						"type": "string"
					},
					"version": {
						"description": "Software version of the VxRail appliance",
						"type": "string"
					},
					"installed_time": {
						"description": "Time that the VxRail appliance software was installed",
						"type": "integer"
					},
					"health": {
						"description": "Health status of the VxRail system",
						"type": "string"
					},
					"network_connected": {
						"description": "Whether the host is connected to the internet",
						"type": "boolean"
					},
					"vc_connected": {
						"description": "Whether the vCenter is connected",
						"type": "boolean"
					},
					"upgrade_status": {
						"description": "The upgrade status of the VxRail appliance software",
						"type": "string",
						"enum": [
							"CANCELLED",
							"DOWNLOADED",
							"DOWNLOADING",
							"ERR_DOWNLOAD",
							"ERR_PROFILE_PRECHECKER",
							"ERR_UPGRADED",
							"ERR_UPGRADE_PRECHECKER",
							"ERR_UPLOAD",
							"HAS_NEWER",
							"LATEST",
							"PROFILE_PRECHECKED",
							"UPGRADED",
							"UPGRADE_PRECHECKING",
							"UPGRADING",
							"UPLOADED",
							"UPLOADING"
						]
					},
					"installed_components": {
						"description": "Software components installed in the VxRail system",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/InstalledComponent"
						}
					},
					"deployment_type": {
						"description": "Information about the type of cluster deployed",
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"STANDARD",
								"VSAN_2_NODE",
								"VSAN_2_NODE_STRETCHED_CLUSTER",
								"COMPUTE",
								"STRETCHED_CLUSTER",
								"DIMENSION",
								"VCF",
								"VVD",
								"VVD_VxRail",
								"VCF_VxRail"
							]
						}
					},
					"cluster_host_count": {
						"description": "Number of hosts in the cluster",
						"type": "integer"
					},
					"satellite_host_count": {
						"description": "Number of VxRail managed satellite nodes"
					},
					"is_external_vc": {
						"description": "Whether the vCenter is an external vCenter",
						"type": "boolean"
					},
					"logical_view_status": {
						"description": "Whether the VxRail Manager logical view is enabled",
						"type": "boolean"
					},
					"shared_storage": {
						"description": "Information about shared storage in the VxRail cluster",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SharedStorage"
						}
					}
				},
				"x-examples": {
					"Example": {
						"description": "string",
						"version": "string",
						"installed_time": 0,
						"health": "string",
						"network_connected": true,
						"vc_connected": true,
						"upgrade_status": "CANCELLED",
						"installed_components": [
							{
								"component": "string",
								"name": "string",
								"description": "string",
								"current_version": "string",
								"upgrade_status": "CANCELLED",
								"baseline": "string",
								"installed_time": 0,
								"incompatibilities": [
									"string"
								],
								"multiple_version": true,
								"baseline_drifted": true,
								"supported": true
							}
						],
						"deployment_type": [
							"STANDARD"
						],
						"cluster_host_count": 0,
						"satellite_host_count": null,
						"is_external_vc": true,
						"logical_view_status": true,
						"shared_storage": [
							{
								"name": "string",
								"type": "VSAN",
								"protocol": "FC",
								"is_primary": true,
								"datastore_id": "string"
							}
						]
					}
				}
			},
			"DNSInfo": {
				"description": "Information about DNS servers for the cluster.",
				"type": "object",
				"required": [
					"servers",
					"is_internal"
				],
				"properties": {
					"servers": {
						"description": "A list of IP addresses for the DNS servers",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"is_internal": {
						"description": "Whether the DNS server is integrated (internal) or external. If is_internal is true, only one IP address (the IP address for VxRail Manager) is returned for the servers parameter.",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"servers": [
							"string"
						],
						"is_internal": true
					}
				}
			},
			"DNSInfoSpec": {
				"description": "Information to set the DNS servers for the cluster. The \"vcenter\" object is required when \"components\" is set to \"ALL\".",
				"type": "object",
				"required": [
					"components",
					"vcenter",
					"servers"
				],
				"properties": {
					"components": {
						"description": "Indicates which DNS servers are updated. Supported values are \"VXM\" or \"ALL\". \"ALL\" is the default. If ALL is set, all DNS servers in the cluster are replaced. If VXM is set, only the DNS server for VxRail Manager is replaced.",
						"type": "string"
					},
					"vcenter": {
						"$ref": "#/components/schemas/User"
					},
					"servers": {
						"description": "A list of IP addresses for the DNS servers",
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"x-examples": {
					"Example": {
						"components": "string",
						"vcenter": {
							"username": "string",
							"password": "string"
						},
						"servers": [
							"string"
						]
					}
				}
			},
			"User": {
				"description": "User account credentials",
				"type": "object",
				"required": [
					"username",
					"password"
				],
				"properties": {
					"username": {
						"description": "Username of the account",
						"type": "string"
					},
					"password": {
						"description": "Password of the account",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"username": "string",
						"password": "string"
					}
				}
			},
			"NTPInfo": {
				"description": "Information about the NTP servers.",
				"type": "object",
				"required": [
					"servers"
				],
				"properties": {
					"servers": {
						"description": "A list of IP addresses for the NTP servers",
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"x-examples": {
					"Example": {
						"servers": [
							"string"
						]
					}
				}
			},
			"NTPInfoSpec": {
				"description": "Information to set the NTP servers for the cluster. The \"vcenter\" object is required when \"components\" is set to \"ALL\".",
				"type": "object",
				"required": [
					"components",
					"vcenter",
					"servers"
				],
				"properties": {
					"components": {
						"description": "Indicates which NTP servers are updated. Supported values are \"VXM\" or \"ALL\". \"ALL\" is the default. If ALL is set, all NTP servers in the cluster are replaced. If VXM is set, only the NTP server for VxRail Manager is replaced.",
						"type": "string"
					},
					"vcenter": {
						"$ref": "#/components/schemas/User"
					},
					"servers": {
						"description": "A list of IP addresses for the NTP servers",
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"x-examples": {
					"Example": {
						"components": "string",
						"vcenter": {
							"username": "string",
							"password": "string"
						},
						"servers": [
							"string"
						]
					}
				}
			},
			"PrimaryStorageSpec": {
				"description": "Properties for provisioning a dynamic node cluster",
				"type": "object",
				"required": [
					"primary_storage_name"
				],
				"properties": {
					"primary_storage_type": {
						"description": "Primary storage type that is mounted on the dynamic node cluster",
						"type": "string",
						"enum": [
							"VSAN_HCI_MESH",
							"EXTERNAL"
						]
					},
					"primary_storage_name": {
						"description": "Name of primary storage where VxRail Manager will be migrated to",
						"type": "string"
					},
					"storage_policy_profile_name": {
						"description": "The storage policy that will be applied to VxRail Manager",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"primary_storage_type": "VSAN_HCI_MESH",
						"primary_storage_name": "string",
						"storage_policy_profile_name": "string"
					}
				}
			},
			"ClusterPortgroup": {
				"description": "Details about the portgroup",
				"type": "object",
				"required": [
					"name",
					"type",
					"portgroup_key",
					"portgroup_vlan",
					"vds_name",
					"vds_uuid",
					"vds_moid"
				],
				"properties": {
					"name": {
						"description": "The name of the portgroup",
						"type": "string"
					},
					"type": {
						"description": "The type of portgroup",
						"type": "string"
					},
					"portgroup_key": {
						"description": "The key of the portgroup",
						"type": "string"
					},
					"portgroup_vlan": {
						"description": "The VLAN ID of the portgroup",
						"type": "integer"
					},
					"vds_name": {
						"description": "The name of the VDS",
						"type": "string"
					},
					"vds_uuid": {
						"description": "The UUID of the VDS",
						"type": "string"
					},
					"vds_moid": {
						"description": "The Managed Object ID (MOID) of the VDS",
						"type": "string"
					}
				}
			},
			"InternetMode": {
				"description": "Whether the system network is a darksite",
				"type": "object",
				"required": [
					"is_dark_site"
				],
				"properties": {
					"is_dark_site": {
						"description": "Whether the system network is a darksite.",
						"type": "boolean"
					}
				},
				"x-examples": {
					"Example": {
						"is_dark_site": true
					}
				}
			},
			"ProxySettings": {
				"description": "Settings for the proxy server",
				"type": "object",
				"required": [
					"server",
					"port",
					"type"
				],
				"properties": {
					"server": {
						"description": "IP address or host name of the proxy server",
						"type": "string"
					},
					"port": {
						"description": "Port of the proxy server",
						"type": "integer"
					},
					"type": {
						"description": "Type of proxy server. Supported types are HTTP and SOCKS.",
						"type": "string"
					},
					"username": {
						"description": "Username credentials for the proxy server",
						"type": "string"
					},
					"socks_version": {
						"description": "Version of the Socks proxy server. This parameter is mandatory if the proxy type is SOCKS",
						"type": "integer"
					}
				},
				"x-examples": {
					"Example": {
						"server": "string",
						"port": 0,
						"type": "string",
						"username": "string",
						"socks_version": 0
					}
				}
			},
			"ProxySettingsSpec": {
				"description": "Configurable parameters for the proxy server",
				"type": "object",
				"required": [
					"proxy_spec"
				],
				"properties": {
					"esrs_pwd": {
						"description": "Password for the SRS. If internal SRS is enabled, the password is required.",
						"type": "string",
						"example": "ESRS_PASSWORD"
					},
					"proxy_spec": {
						"description": "Details of the proxy.",
						"type": "object",
						"required": [
							"server",
							"port",
							"type"
						],
						"properties": {
							"server": {
								"description": "IP address and host name of the proxy server",
								"type": "string"
							},
							"port": {
								"description": "Port of the proxy server",
								"type": "integer"
							},
							"username": {
								"description": "Username credentials for the proxy server",
								"type": "string"
							},
							"pwd": {
								"description": "Password credentials for the proxy server",
								"type": "string"
							},
							"type": {
								"description": "Type of proxy server. Supported types are HTTP and SOCKS.",
								"type": "string",
								"enum": [
									"HTTP",
									"SOCKS"
								]
							},
							"socks_version": {
								"description": "Version of the Socks proxy server. This parameter is mandatory if the proxy type is SOCKS.",
								"type": "integer"
							}
						}
					}
				},
				"x-examples": {
					"Example": {
						"esrs_pwd": "ESRS_PASSWORD",
						"proxy_spec": {
							"server": "string",
							"port": 0,
							"username": "string",
							"pwd": "string",
							"type": "HTTP",
							"socks_version": 0
						}
					}
				}
			},
			"VxRailCredential": {
				"description": "Information regarding credentials for VxRail Manager",
				"type": "object",
				"properties": {
					"vxm_root_user": {
						"$ref": "#/components/schemas/User"
					}
				},
				"x-examples": {
					"Example": {
						"vxm_root_user": {
							"username": "string",
							"password": "string"
						}
					}
				}
			},
			"VcenterCredential": {
				"description": "Information regarding credentials for the vCenter",
				"type": "object",
				"properties": {
					"vc_admin_user": {
						"$ref": "#/components/schemas/User"
					},
					"vcsa_root_user": {
						"$ref": "#/components/schemas/User"
					},
					"psc_root_user": {
						"$ref": "#/components/schemas/User"
					}
				},
				"x-examples": {
					"Example": {
						"vc_admin_user": {
							"username": "string",
							"password": "string"
						},
						"vcsa_root_user": {
							"username": "string",
							"password": "string"
						},
						"psc_root_user": {
							"username": "string",
							"password": "string"
						}
					}
				}
			},
			"EsxiHostCredential": {
				"description": "The access information for the ESXi hosts.",
				"type": "object",
				"required": [
					"sn",
					"root_user"
				],
				"properties": {
					"sn": {
						"description": "Serial number of the ESXi host.",
						"type": "string"
					},
					"root_user": {
						"$ref": "#/components/schemas/User"
					}
				},
				"x-examples": {
					"Example": {
						"sn": "string",
						"root_user": {
							"username": "string",
							"password": "string"
						}
					}
				}
			},
			"WitnessNodeCredential": {
				"description": "Information regarding the witness credentials for stretched clusters, including 2-node vSAN clusters",
				"type": "object",
				"required": [
					"witness_user"
				],
				"properties": {
					"witness_user": {
						"$ref": "#/components/schemas/User"
					}
				},
				"x-examples": {
					"Example": {
						"witness_user": {
							"username": "string",
							"password": "string"
						}
					}
				}
			},
			"AccountCredential": {
				"description": "Specification of management account.",
				"type": "object",
				"required": [
					"component",
					"username",
					"password"
				],
				"properties": {
					"component": {
						"description": "The type of component to be updated",
						"type": "string",
						"enum": [
							"esxi"
						]
					},
					"hostname": {
						"description": "Hostname of the ESXi component",
						"type": "string",
						"example": "exvc113.externalvc.com"
					},
					"username": {
						"description": "The username for the management account",
						"type": "string"
					},
					"password": {
						"description": "The password for the management account to be stored in VxRail Manager",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"component": "esxi",
						"hostname": "exvc113.externalvc.com",
						"username": "string",
						"password": "string"
					}
				}
			},
			"UpdatedManagementAccount": {
				"description": "Information about the requested management account update.",
				"type": "object",
				"required": [
					"component",
					"hostname",
					"status"
				],
				"properties": {
					"component": {
						"description": "The component type",
						"type": "string",
						"example": "vc or esxi"
					},
					"hostname": {
						"description": "The hostname of the vCenter or ESXi host",
						"type": "string"
					},
					"status": {
						"description": "Information about whether the password update is successful or failed",
						"type": "string"
					},
					"message": {
						"description": "Informational message about the update",
						"type": "string"
					}
				}
			},
			"AccountCredentialV2": {
				"description": "Specification of management account.",
				"type": "object",
				"required": [
					"component",
					"username",
					"password"
				],
				"properties": {
					"component": {
						"description": "The type of component to be updated",
						"type": "string",
						"enum": [
							"vc",
							"esxi"
						]
					},
					"hostname": {
						"description": "The hostname of the vCenter or ESXi host",
						"type": "string",
						"example": "exvc113.externalvc.com"
					},
					"username": {
						"description": "The username for the management account",
						"type": "string"
					},
					"password": {
						"description": "The password for the management account to be stored in VxRail Manager",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"component": "vc",
						"hostname": "exvc113.externalvc.com",
						"username": "string",
						"password": "string"
					}
				}
			},
			"PrecheckVersion": {
				"type": "object",
				"properties": {
					"version": {
						"type": "string",
						"example": "1.0.600"
					}
				},
				"x-examples": {
					"Example": {
						"version": "1.0.600"
					}
				}
			},
			"PrecheckErrorResponse": {
				"type": "object",
				"properties": {
					"message_code": {
						"type": "string",
						"example": "VXR304HCSER0001"
					},
					"message": {
						"type": "string",
						"example": "Failed to run precheck due to another precheck process is running"
					}
				}
			},
			"ProfileInfo": {
				"description": "Profile information",
				"type": "object",
				"required": [
					"profile",
					"description"
				],
				"properties": {
					"profile": {
						"description": "Profile type",
						"type": "string",
						"enum": [
							"BUNDLE_INTEGRITY_CHECK",
							"PRE_UPGRADE",
							"PROACTIVE_HEALTH",
							"NODE_EXPANSION"
						],
						"example": "PRE_UPGRADE"
					},
					"description": {
						"type": "string",
						"example": "This is used to check pre-upgrade issues before performing VxRail System upgrade."
					}
				},
				"x-examples": {
					"Example": {
						"profile": "PRE_UPGRADE",
						"description": "This is used to check pre-upgrade issues before performing VxRail System upgrade."
					}
				}
			},
			"PrecheckSpec": {
				"description": "Input parameters for precheck. If profile is PROACTIVE_HEALTH, its requst body is '{\"profile\":\"PROACTIVE_HEALTH\"}'. If profile is NODE_EXPANSION, its request body is '{\"profile\":\"NODE_EXPANSION\",\"node_list\":[{\"sn\":\"3W56GN\",\"ip\":\"192.168.0.101\",\"root_user\":\"xxx\",\"root_password\":\"x\"}]}'. If profile is PRE_UPGRADE, its request body is '{\"profile\":\"PRE_UPGRADE\",\"vxm_root_user\":{\"username\":\"xxx\",\"password\":\"x\"},\"vc_admin_user\":{\"username\":\"xxx\",\"password\":\"x\"},\"vc_root_user\":{\"username\":\"xxx\",\"password\":\"x\"},\"migration_spec\":{\"temporary_ip_setting\":{\"vc_temporary_ip\":\"192.168.0.102\",\"vc_temporary_gateway\":\"192.168.0.1\",\"vc_temporary_netmask\":\"255.255.255.0\"}},\"witness_spec\":{\"auto_witness_upgrade\":true,\"witness_root_user\":{\"username\":\"xxx\",\"password\":\"x\"}}}'; witness_spec is not specified when do not need to upgrade witness node; migration_spec is not specified if vCenter is not upgraded for major version.",
				"type": "object",
				"required": [
					"profile"
				],
				"properties": {
					"profile": {
						"type": "string",
						"description": "profile name",
						"enum": [
							"PRE_UPGRADE",
							"PROACTIVE_HEALTH",
							"NODE_EXPANSION"
						]
					},
					"vxm_root_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"vc_admin_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"vc_root_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"witness_spec": {
						"$ref": "#/components/schemas/WitnessSpec"
					},
					"migration_spec": {
						"$ref": "#/components/schemas/MigrationSpec"
					},
					"node_list": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NodeSpec"
						}
					}
				},
				"x-examples": {
					"Example": {
						"profile": "PRE_UPGRADE",
						"vxm_root_user": {
							"username": "administrator",
							"password": "password"
						},
						"vc_admin_user": {
							"username": "administrator",
							"password": "password"
						},
						"vc_root_user": {
							"username": "administrator",
							"password": "password"
						},
						"witness_spec": {
							"witness_user": {
								"username": "administrator",
								"password": "password"
							},
							"auto_witness_upgrade": true
						},
						"migration_spec": {
							"temporary_ip_setting": {
								"vc_temporary_ip": "string",
								"vc_temporary_gateway": "string",
								"vc_temporary_netmask": "string"
							}
						},
						"node_list": [
							{
								"sn": "string",
								"version": "string",
								"ip": "string",
								"root_user": "root",
								"root_password": "string"
							}
						]
					}
				}
			},
			"MigrationSpec": {
				"type": "object",
				"properties": {
					"temporary_ip_setting": {
						"$ref": "#/components/schemas/TemporaryIpSetting"
					}
				},
				"x-examples": {
					"Example": {
						"temporary_ip_setting": {
							"vc_temporary_ip": "string",
							"vc_temporary_gateway": "string",
							"vc_temporary_netmask": "string"
						}
					}
				}
			},
			"TemporaryIpSetting": {
				"description": "Temporary IP settings for the vCenter upgrade",
				"type": "object",
				"properties": {
					"vc_temporary_ip": {
						"type": "string"
					},
					"vc_temporary_gateway": {
						"type": "string"
					},
					"vc_temporary_netmask": {
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"vc_temporary_ip": "string",
						"vc_temporary_gateway": "string",
						"vc_temporary_netmask": "string"
					}
				}
			},
			"NodeSpec": {
				"description": "Information regarding the new node to be added",
				"type": "object",
				"properties": {
					"sn": {
						"description": "serial number of node",
						"type": "string"
					},
					"version": {
						"description": "install version of node",
						"type": "string"
					},
					"ip": {
						"description": "node ip address",
						"type": "string"
					},
					"root_user": {
						"type": "string",
						"example": "root"
					},
					"root_password": {
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"sn": "string",
						"version": "string",
						"ip": "string",
						"root_user": "root",
						"root_password": "string"
					}
				}
			},
			"AsyncPrecheckSuccessResponse": {
				"type": "object",
				"properties": {
					"request_id": {
						"description": "It is used to query the precheck result by calling /v1/system/prechecks/{id}/result.",
						"type": "string",
						"example": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47"
					}
				},
				"x-examples": {
					"Example": {
						"request_id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47"
					}
				}
			},
			"PrecheckReportsInfo": {
				"type": "object",
				"properties": {
					"report_list": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PrecheckReport"
						}
					}
				},
				"x-examples": {
					"Example": {
						"report_list": [
							{
								"id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
								"profile": "string",
								"status": "IN-PROGRESS [IN-PROGRESS,COMPLETED]",
								"progress": "50%",
								"total_severity": "OK [OK, WARN, ERROR, CRITICAL]",
								"complete_check_count": 25,
								"total_success_count": 22,
								"total_warn_count": 0,
								"total_error_count": 3,
								"results": {
									"host_checks": [
										{
											"host_id": "c2-esx01",
											"checks": [
												{
													"status": "COMPLETED",
													"check_id": "vcsa_state_check",
													"start_time": "string",
													"end_time": "string",
													"plugin_name": "string",
													"plugin_version": "1.0.100",
													"result": {
														"severity": "OK [OK, WARN, ERROR, CRITICAL]",
														"messages": [
															{
																"id": "VXR304RADAR0003",
																"kb": "string",
																"action": "Ensure there are not critical alarms existing on VCSA.",
																"alphaid": "check_script_failed",
																"symptom": "There are critical alarms existing on VCSA.",
																"severity": "Error [Ok, Warn, Error, Critical]"
															}
														]
													}
												}
											]
										}
									],
									"general_checks": [
										{
											"status": "COMPLETED",
											"check_id": "vcsa_state_check",
											"start_time": "string",
											"end_time": "string",
											"plugin_name": "string",
											"plugin_version": "1.0.100",
											"result": {
												"severity": "OK [OK, WARN, ERROR, CRITICAL]",
												"messages": [
													{
														"id": "VXR304RADAR0003",
														"kb": "string",
														"action": "Ensure there are not critical alarms existing on VCSA.",
														"alphaid": "check_script_failed",
														"symptom": "There are critical alarms existing on VCSA.",
														"severity": "Error [Ok, Warn, Error, Critical]"
													}
												]
											}
										}
									]
								}
							}
						]
					}
				}
			},
			"PrecheckReport": {
				"type": "object",
				"properties": {
					"id": {
						"description": "Request ID (request_id) of the pre-check operation",
						"type": "string",
						"example": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47"
					},
					"profile": {
						"description": "profile name",
						"type": "string"
					},
					"status": {
						"description": "Pre-check status",
						"type": "string",
						"example": "IN-PROGRESS [IN-PROGRESS,COMPLETED]"
					},
					"progress": {
						"description": "Pre-check progress",
						"type": "string",
						"example": "50%"
					},
					"total_severity": {
						"description": "Severity level of the pre-check status",
						"type": "string",
						"example": "OK [OK, WARN, ERROR, CRITICAL]"
					},
					"complete_check_count": {
						"description": "Number of pre-check tasks completed",
						"type": "integer",
						"example": 25
					},
					"total_success_count": {
						"description": "Number of pre-check tasks successfully completed",
						"type": "integer",
						"example": 22
					},
					"total_warn_count": {
						"description": "Total number of pre-check warnings",
						"type": "integer",
						"example": 0
					},
					"total_error_count": {
						"description": "Total number of pre-check errors",
						"type": "integer",
						"example": 3
					},
					"results": {
						"$ref": "#/components/schemas/PrecheckReportItem"
					}
				},
				"x-examples": {
					"Example": {
						"id": "ba8901c1-913b-4a2b-9b62-d358bcc2ed47",
						"profile": "string",
						"status": "IN-PROGRESS [IN-PROGRESS,COMPLETED]",
						"progress": "50%",
						"total_severity": "OK [OK, WARN, ERROR, CRITICAL]",
						"complete_check_count": 25,
						"total_success_count": 22,
						"total_warn_count": 0,
						"total_error_count": 3,
						"results": {
							"host_checks": [
								{
									"host_id": "c2-esx01",
									"checks": [
										{
											"status": "COMPLETED",
											"check_id": "vcsa_state_check",
											"start_time": "string",
											"end_time": "string",
											"plugin_name": "string",
											"plugin_version": "1.0.100",
											"result": {
												"severity": "OK [OK, WARN, ERROR, CRITICAL]",
												"messages": [
													{
														"id": "VXR304RADAR0003",
														"kb": "string",
														"action": "Ensure there are not critical alarms existing on VCSA.",
														"alphaid": "check_script_failed",
														"symptom": "There are critical alarms existing on VCSA.",
														"severity": "Error [Ok, Warn, Error, Critical]"
													}
												]
											}
										}
									]
								}
							],
							"general_checks": [
								{
									"status": "COMPLETED",
									"check_id": "vcsa_state_check",
									"start_time": "string",
									"end_time": "string",
									"plugin_name": "string",
									"plugin_version": "1.0.100",
									"result": {
										"severity": "OK [OK, WARN, ERROR, CRITICAL]",
										"messages": [
											{
												"id": "VXR304RADAR0003",
												"kb": "string",
												"action": "Ensure there are not critical alarms existing on VCSA.",
												"alphaid": "check_script_failed",
												"symptom": "There are critical alarms existing on VCSA.",
												"severity": "Error [Ok, Warn, Error, Critical]"
											}
										]
									}
								}
							]
						}
					}
				}
			},
			"PrecheckReportItem": {
				"type": "object",
				"properties": {
					"host_checks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HostCheckItem"
						}
					},
					"general_checks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CheckItem"
						}
					}
				},
				"x-examples": {
					"Example": {
						"host_checks": [
							{
								"host_id": "c2-esx01",
								"checks": [
									{
										"status": "COMPLETED",
										"check_id": "vcsa_state_check",
										"start_time": "string",
										"end_time": "string",
										"plugin_name": "string",
										"plugin_version": "1.0.100",
										"result": {
											"severity": "OK [OK, WARN, ERROR, CRITICAL]",
											"messages": [
												{
													"id": "VXR304RADAR0003",
													"kb": "string",
													"action": "Ensure there are not critical alarms existing on VCSA.",
													"alphaid": "check_script_failed",
													"symptom": "There are critical alarms existing on VCSA.",
													"severity": "Error [Ok, Warn, Error, Critical]"
												}
											]
										}
									}
								]
							}
						],
						"general_checks": [
							{
								"status": "COMPLETED",
								"check_id": "vcsa_state_check",
								"start_time": "string",
								"end_time": "string",
								"plugin_name": "string",
								"plugin_version": "1.0.100",
								"result": {
									"severity": "OK [OK, WARN, ERROR, CRITICAL]",
									"messages": [
										{
											"id": "VXR304RADAR0003",
											"kb": "string",
											"action": "Ensure there are not critical alarms existing on VCSA.",
											"alphaid": "check_script_failed",
											"symptom": "There are critical alarms existing on VCSA.",
											"severity": "Error [Ok, Warn, Error, Critical]"
										}
									]
								}
							}
						]
					}
				}
			},
			"HostCheckItem": {
				"type": "object",
				"properties": {
					"host_id": {
						"description": "esxi host name",
						"type": "string",
						"example": "c2-esx01"
					},
					"checks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CheckItem"
						}
					}
				},
				"x-examples": {
					"Example": {
						"host_id": "c2-esx01",
						"checks": [
							{
								"status": "COMPLETED",
								"check_id": "vcsa_state_check",
								"start_time": "string",
								"end_time": "string",
								"plugin_name": "string",
								"plugin_version": "1.0.100",
								"result": {
									"severity": "OK [OK, WARN, ERROR, CRITICAL]",
									"messages": [
										{
											"id": "VXR304RADAR0003",
											"kb": "string",
											"action": "Ensure there are not critical alarms existing on VCSA.",
											"alphaid": "check_script_failed",
											"symptom": "There are critical alarms existing on VCSA.",
											"severity": "Error [Ok, Warn, Error, Critical]"
										}
									]
								}
							}
						]
					}
				}
			},
			"CheckItem": {
				"type": "object",
				"properties": {
					"status": {
						"description": "Execution status of the pre-check",
						"type": "string",
						"example": "COMPLETED"
					},
					"check_id": {
						"description": "Check ID",
						"type": "string",
						"example": "vcsa_state_check"
					},
					"start_time": {
						"description": "Start time of the pre-check",
						"type": "string"
					},
					"end_time": {
						"description": "end time of check",
						"type": "string"
					},
					"plugin_name": {
						"description": "Plugin check name",
						"type": "string"
					},
					"plugin_version": {
						"description": "plugin check version",
						"type": "string",
						"example": "1.0.100"
					},
					"result": {
						"$ref": "#/components/schemas/CheckItemResult"
					}
				},
				"x-examples": {
					"Example": {
						"status": "COMPLETED",
						"check_id": "vcsa_state_check",
						"start_time": "string",
						"end_time": "string",
						"plugin_name": "string",
						"plugin_version": "1.0.100",
						"result": {
							"severity": "OK [OK, WARN, ERROR, CRITICAL]",
							"messages": [
								{
									"id": "VXR304RADAR0003",
									"kb": "string",
									"action": "Ensure there are not critical alarms existing on VCSA.",
									"alphaid": "check_script_failed",
									"symptom": "There are critical alarms existing on VCSA.",
									"severity": "Error [Ok, Warn, Error, Critical]"
								}
							]
						}
					}
				}
			},
			"CheckItemResult": {
				"type": "object",
				"properties": {
					"severity": {
						"description": "Severity of message",
						"type": "string",
						"example": "OK [OK, WARN, ERROR, CRITICAL]"
					},
					"messages": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MessageData"
						}
					}
				},
				"x-examples": {
					"Example": {
						"severity": "OK [OK, WARN, ERROR, CRITICAL]",
						"messages": [
							{
								"id": "VXR304RADAR0003",
								"kb": "string",
								"action": "Ensure there are not critical alarms existing on VCSA.",
								"alphaid": "check_script_failed",
								"symptom": "There are critical alarms existing on VCSA.",
								"severity": "Error [Ok, Warn, Error, Critical]"
							}
						]
					}
				}
			},
			"MessageData": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"example": "VXR304RADAR0003"
					},
					"kb": {
						"description": "kb number",
						"type": "string"
					},
					"action": {
						"type": "string",
						"example": "Ensure there are not critical alarms existing on VCSA."
					},
					"alphaid": {
						"type": "string",
						"example": "check_script_failed"
					},
					"symptom": {
						"type": "string",
						"example": "There are critical alarms existing on VCSA."
					},
					"severity": {
						"type": "string",
						"example": "Error [Ok, Warn, Error, Critical]"
					}
				}
			},
			"TelemetryTierSetting": {
				"type": "object",
				"required": [
					"level"
				],
				"properties": {
					"level": {
						"description": "The telemetry tier level that is currently set",
						"type": "string",
						"enum": [
							"NONE",
							"LIGHT",
							"BASIC",
							"ADVANCED"
						]
					}
				},
				"x-examples": {
					"Example": {
						"level": "NONE"
					}
				}
			},
			"ClusterModeInfo": {
				"description": "vCenter and PSC mode information.",
				"type": "object",
				"required": [
					"vc_mode",
					"psc_mode"
				],
				"properties": {
					"vc_mode": {
						"description": "vCenter mode",
						"type": "string",
						"enum": [
							"EMBEDDED",
							"EXTERNAL"
						]
					},
					"psc_mode": {
						"description": "PSC mode",
						"type": "string",
						"enum": [
							"EMBEDDED",
							"EXTERNAL"
						]
					}
				},
				"x-examples": {
					"Example": {
						"vc_mode": "EMBEDDED",
						"psc_mode": "EMBEDDED"
					}
				}
			},
			"VcConversionSpec": {
				"description": "Information needed to update the vCenter or PSC mode to embedded or external.",
				"type": "object",
				"required": [
					"vc_admin_user",
					"vc_mode",
					"psc_mode"
				],
				"properties": {
					"vc_admin_user": {
						"$ref": "#/components/schemas/UserSpec"
					},
					"vc_mode": {
						"description": "Target vCenter mode",
						"type": "string",
						"enum": [
							"EXTERNAL",
							"EMBEDDED"
						]
					},
					"psc_mode": {
						"description": "Target PSC mode",
						"type": "string",
						"enum": [
							"EMBEDDED",
							"EXTERNAL"
						]
					}
				},
				"x-examples": {
					"Example": {
						"vc_admin_user": {
							"username": "administrator",
							"password": "password"
						},
						"vc_mode": "EXTERNAL",
						"psc_mode": "EMBEDDED"
					}
				}
			},
			"404-Nocontent": {
				"type": "object",
				"required": [
					"message"
				],
				"properties": {
					"message_code": {
						"type": "string"
					},
					"error_code": {
						"type": "integer",
						"format": "int32"
					},
					"message": {
						"type": "string"
					}
				}
			},
			"500-Nocontent": {
				"type": "object",
				"required": [
					"message"
				],
				"properties": {
					"message_code": {
						"type": "string"
					},
					"error_code": {
						"type": "integer",
						"format": "int32"
					},
					"message": {
						"type": "string"
					}
				}
			},
			"400-Nocontent": {
				"type": "object",
				"required": [
					"message"
				],
				"properties": {
					"message_code": {
						"type": "string"
					},
					"error_code": {
						"type": "integer",
						"format": "int32"
					},
					"message": {
						"type": "string"
					}
				}
			},
			"202-Nocontent": {
				"type": "object",
				"properties": {
					"request_id": {
						"type": "string"
					},
					"message_code": {
						"type": "string"
					},
					"error_code": {
						"type": "integer",
						"format": "int32"
					},
					"message": {
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"request_id": "SBI_1333",
						"message_code": "string",
						"error_code": 0,
						"message": "string"
					}
				}
			},
			"HostFolderLCMSpec": {
				"title": "HostFolderLCMSpec",
				"type": "object",
				"x-examples": {
					"example-upgrade": {
						"action": "UPGRADE",
						"host_folder_id": "group-h13",
						"target_version": "8.0.000",
						"control": {
							"failure_rate": 20,
							"concurrent_size": 20
						}
					},
					"example-stage": {
						"action": "STAGE",
						"host_folder_id": "group-h13",
						"target_version": "8.0.000"
					},
					"Example": {
						"action": "UPGRADE",
						"host_folder_id": "group-h13",
						"target_version": "8.0.000",
						"control": {
							"failure_rate": 20,
							"concurrent_size": 20
						}
					}
				},
				"properties": {
					"action": {
						"type": "string",
						"example": "UPGRADE",
						"enum": [
							"UPGRADE",
							"STAGE"
						],
						"description": "STAGE will transfer the upgrade bundle to the nodes but will not initiate the upgrade procedure. UPGRADE will initiate the upgrade procedure."
					},
					"host_folder_id": {
						"type": "string",
						"description": "host folder id",
						"example": "group-h13"
					},
					"target_version": {
						"type": "string",
						"description": "The target VxRail system version",
						"example": "8.0.000"
					},
					"control": {
						"$ref": "#/components/schemas/HostFolderLCMControlSpec"
					}
				},
				"required": [
					"action",
					"host_folder_id",
					"target_version"
				]
			},
			"HostFolderLCMControlSpec": {
				"title": "HostFolderLCMControlSpec",
				"type": "object",
				"description": "Special control of LCM upgrade runtime.",
				"x-examples": {
					"Example": {
						"failure_rate": 20,
						"concurrent_size": 20
					}
				},
				"properties": {
					"failure_rate": {
						"type": "integer",
						"minimum": 1,
						"maximum": 100,
						"default": 20,
						"example": 20,
						"description": "The failure rate of LCM batch job.\nfailure_rate = failed nodes count / total nodes count. This parameter is only valid for UPGRADE requests.\nExample: value 20 means the failure rate is 20%."
					},
					"concurrent_size": {
						"type": "integer",
						"minimum": 1,
						"maximum": 30,
						"example": 20,
						"default": 20,
						"description": "Number of nodes that can be upgraded in parallel. This parameter is only valid for UPGRADE requests."
					}
				}
			},
			"BandwidthThrottlingInfo": {
				"title": "BandwidthThrottlingInfo",
				"type": "object",
				"x-examples": {
					"None": {
						"level": "None"
					},
					"Basic": {
						"level": "Basic"
					},
					"Medium": {
						"level": "Medium"
					},
					"Advanced": {
						"level": "Advanced"
					}
				},
				"description": "Bandwidth throttling information",
				"properties": {
					"level": {
						"type": "string",
						"description": "Bandwidth throttling level"
					}
				}
			},
			"ManagementAccountV1": {
				"description": "Information about vCenter management account or ESXi host account.",
				"type": "object",
				"required": [
					"component",
					"username"
				],
				"properties": {
					"component": {
						"description": "Component type can be \"ESXI\" or \"VC\".",
						"type": "string",
						"enum": [
							"ESXI",
							"VC"
						]
					},
					"hostname": {
						"description": "ESXi host name. ESXi host name can be empty if component is \"VC\".",
						"type": "string"
					},
					"username": {
						"description": "vCenter management account or ESXi host account user name.",
						"type": "string"
					}
				},
				"x-examples": {
					"Example": {
						"component": "ESXI",
						"hostname": "vcluster101-esx02.vv003.local",
						"username": "vxmmanagement"
					}
				}
			}
		},
		"responses": {
			"200": {
				"description": "The request is successful."
			},
			"202": {
				"description": "The request has been accepted for processing, but the processing has not been completed.",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"required": [
								"request_id"
							],
							"properties": {
								"request_id": {
									"type": "string",
									"example": "5ffe7062-a590-45b8-a172-8d2cf119562e"
								}
							}
						},
						"examples": {
							"Example": {
								"value": {
									"request_id": "5ffe7062-a590-45b8-a172-8d2cf119562e"
								}
							}
						}
					}
				}
			},
			"400": {
				"description": "The request could not be understood by the server due to malformed syntax.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						},
						"example": {
							"message": "Invalid request parameter(s)."
						}
					}
				}
			},
			"401": {
				"description": "The request requires user authentication.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						},
						"example": {
							"message": "The provided vCenter credentials are not valid."
						}
					}
				}
			},
			"403": {
				"description": "The server understood the request, but is refusing to fulfill it.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						},
						"example": {
							"message": "Access Denied."
						}
					}
				}
			},
			"404": {
				"description": "The server has not found anything matching the Request-URI.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						},
						"example": {
							"message": "Resource not found."
						}
					}
				}
			},
			"409": {
				"description": "The request could not be completed due to a conflict with the current state of the target resource.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						}
					}
				}
			},
			"500": {
				"description": "A general error occurred.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						},
						"example": {
							"message": "The server failed to complete the request due to internal error. Please try again later."
						}
					}
				}
			},
			"SystemInfo": {
				"description": "Get system information successfully.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/VxmSystemInfo"
						},
						"example": {
							"description": "A hyperconverged infrastructure appliance that combines VMware compute, networking and storage into one single system for ease of deployment and management.",
							"version": "4.7.000-5969304",
							"installed_time": 1528275533,
							"health": "Critical",
							"network_connected": true,
							"vc_connected": true,
							"cluster_type": "TWO_NODE_ROBO",
							"number_of_host": 2,
							"is_external_vc": true,
							"logical_view_status": true,
							"installed_components": [
								{
									"component": "DellPTAgent",
									"name": "Dell PTAgent",
									"description": "Dell PTAgent installed on ESXi",
									"current_version": "1.0-0",
									"installed_time": 1528275533,
									"multiple_version": true,
									"baseline_drifted": true,
									"supported": true
								},
								{
									"component": "Esx",
									"name": "VMware ESXi",
									"description": "VMware ESXi is the industry-leading, purpose-built bare-metal hypervisor. ESXi installs directly onto your physical server enabling it to be partitioned into multiple logical servers referred to as virtual machines.",
									"current_version": "6.5.0-5969303",
									"installed_time": 1528275533,
									"multiple_version": false,
									"baseline_drifted": true,
									"supported": true
								},
								{
									"component": "VxRail",
									"name": "VxRail Manager",
									"description": "The management component that orchestrates the deployment and management of VxRail system.",
									"current_version": "4.7.000-5969303",
									"installed_time": 1528275533,
									"multiple_version": false,
									"baseline_drifted": true
								},
								{
									"component": "Vcenter",
									"name": "VMware vCenter Server Appliance",
									"description": "Centralized visibility, proactive management and extensibility for VMware vSphere from a single console VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments, so you can automate and deliver a virtual infrastructure with confidence.",
									"current_version": "6.5.0-5973321",
									"installed_time": 1528275533,
									"multiple_version": false,
									"baseline_drifted": true
								},
								{
									"component": "VxRailVib",
									"name": "VxRail Manager VIB",
									"description": "VxRail Manager agent installed on ESXi.",
									"current_version": "4.5.0-5018707",
									"installed_time": 1528275533,
									"multiple_version": false,
									"baseline_drifted": true,
									"supported": true
								}
							]
						}
					}
				}
			},
			"SystemInfoV2": {
				"description": "Get system information successfully.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/VxmSystemInfoV2"
						},
						"example": {
							"description": "A hyperconverged infrastructure appliance that combines VMware compute, networking and storage into one single system for ease of deployment and management.",
							"version": "4.7.000-5969304",
							"installed_time": 1528275533,
							"health": "Critical",
							"network_connected": true,
							"vc_connected": true,
							"deployment_type": [
								"STANDARD",
								"VCF"
							],
							"space_efficiency": "dedupAndCompression",
							"number_of_host": 2,
							"is_external_vc": true,
							"logical_view_status": true,
							"installed_components": [
								{
									"component": "DellPTAgent",
									"name": "Dell PTAgent",
									"description": "Dell PTAgent installed on ESXi",
									"current_version": "1.0-0",
									"installed_time": 1528275533,
									"multiple_version": true,
									"baseline_drifted": true,
									"supported": true
								},
								{
									"component": "Esx",
									"name": "VMware ESXi",
									"description": "VMware ESXi is the industry-leading, purpose-built bare-metal hypervisor. ESXi installs directly onto your physical server enabling it to be partitioned into multiple logical servers referred to as virtual machines.",
									"current_version": "6.5.0-5969303",
									"installed_time": 1528275533,
									"multiple_version": false,
									"baseline_drifted": true,
									"supported": true
								},
								{
									"component": "VxRail",
									"name": "VxRail Manager",
									"description": "The management component that orchestrates the deployment and management of VxRail system.",
									"current_version": "4.7.000-5969303",
									"installed_time": 1528275533,
									"multiple_version": false,
									"baseline_drifted": true
								},
								{
									"component": "Vcenter",
									"name": "VMware vCenter Server Appliance",
									"description": "Centralized visibility, proactive management and extensibility for VMware vSphere from a single console VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments, so you can automate and deliver a virtual infrastructure with confidence.",
									"current_version": "6.5.0-5973321",
									"installed_time": 1528275533,
									"multiple_version": false,
									"baseline_drifted": true
								},
								{
									"component": "VxRailVib",
									"name": "VxRail Manager VIB",
									"description": "VxRail Manager agent installed on ESXi.",
									"current_version": "4.5.0-5018707",
									"installed_time": 1528275533,
									"multiple_version": false,
									"baseline_drifted": true,
									"supported": true
								}
							]
						}
					}
				}
			},
			"SystemInfoV3": {
				"description": "Get system information successfully.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/VxmSystemInfoV3"
						},
						"example": {
							"description": "A hyperconverged infrastructure appliance that combines VMware compute, networking and storage into one single system for ease of deployment and management.",
							"version": "7.0.120-26639202",
							"installed_time": 1599014694234,
							"health": "Healthy",
							"network_connected": true,
							"vc_connected": true,
							"deployment_type": [
								"COMPUTE",
								"VCF"
							],
							"number_of_host": 3,
							"is_external_vc": true,
							"logical_view_status": true,
							"installed_components": [
								{
									"component": "DellPTAgent",
									"name": "Dell PTAgent",
									"description": "Dell PTAgent installed on ESXi",
									"current_version": "1.0-0",
									"installed_time": 1598955454464,
									"multiple_version": true,
									"baseline_drifted": true,
									"supported": true
								},
								{
									"component": "Esx",
									"name": "VMware ESXi",
									"description": "VMware ESXi is the industry-leading, purpose-built bare-metal hypervisor. ESXi installs directly onto your physical server enabling it to be partitioned into multiple logical servers referred to as virtual machines.",
									"current_version": "7.0.1-16555998",
									"installed_time": 1598955061248,
									"multiple_version": false,
									"baseline_drifted": true,
									"supported": true
								},
								{
									"component": "VxRail",
									"name": "VxRail Manager",
									"description": "The management component that orchestrates the deployment and management of VxRail system.",
									"current_version": "7.0.120-26639202",
									"installed_time": 1528275533,
									"multiple_version": false,
									"baseline_drifted": true
								},
								{
									"component": "Vcenter",
									"name": "VMware vCenter Server Appliance",
									"description": "Centralized visibility, proactive management and extensibility for VMware vSphere from a single console VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments, so you can automate and deliver a virtual infrastructure with confidence.",
									"current_version": "7.0.1-16556018",
									"installed_time": 1598955323392,
									"multiple_version": false,
									"baseline_drifted": true
								},
								{
									"component": "VxRailVib",
									"name": "VxRail Manager VIB",
									"description": "VxRail Manager agent installed on ESXi.",
									"current_version": "7.0.120-16708660",
									"installed_time": 1598955323392,
									"multiple_version": false,
									"baseline_drifted": true,
									"supported": true
								}
							],
							"shared_storage": [
								{
									"name": "fc-storage",
									"type": "VMFS",
									"protocol": "FC",
									"is_primary": true,
									"datastore_id": "datastore-1408"
								}
							]
						}
					}
				}
			},
			"SystemInfoV4": {
				"description": "Get system information successfully.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/VxmSystemInfoV4"
						},
						"example": {
							"description": "A hyperconverged infrastructure appliance that combines VMware compute, networking and storage into one single system for ease of deployment and management.",
							"version": "7.0.120-26639202",
							"installed_time": 1599014694234,
							"health": "Healthy",
							"network_connected": true,
							"vc_connected": true,
							"deployment_type": [
								"COMPUTE",
								"VCF"
							],
							"cluster_host_count": 3,
							"satellite_host_count": 120,
							"is_external_vc": true,
							"logical_view_status": true,
							"installed_components": [
								{
									"component": "DellPTAgent",
									"name": "Dell PTAgent",
									"description": "Dell PTAgent installed on ESXi",
									"current_version": "1.0-0",
									"installed_time": 1598955454464,
									"multiple_version": true,
									"baseline_drifted": true,
									"supported": true
								},
								{
									"component": "Esx",
									"name": "VMware ESXi",
									"description": "VMware ESXi is the industry-leading, purpose-built bare-metal hypervisor. ESXi installs directly onto your physical server enabling it to be partitioned into multiple logical servers referred to as virtual machines.",
									"current_version": "7.0.1-16555998",
									"installed_time": 1598955061248,
									"multiple_version": false,
									"baseline_drifted": true,
									"supported": true
								},
								{
									"component": "VxRail",
									"name": "VxRail Manager",
									"description": "The management component that orchestrates the deployment and management of VxRail system.",
									"current_version": "7.0.120-26639202",
									"installed_time": 1528275533,
									"multiple_version": false,
									"baseline_drifted": true
								},
								{
									"component": "Vcenter",
									"name": "VMware vCenter Server Appliance",
									"description": "Centralized visibility, proactive management and extensibility for VMware vSphere from a single console VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments, so you can automate and deliver a virtual infrastructure with confidence.",
									"current_version": "7.0.1-16556018",
									"installed_time": 1598955323392,
									"multiple_version": false,
									"baseline_drifted": true
								},
								{
									"component": "VxRailVib",
									"name": "VxRail Manager VIB",
									"description": "VxRail Manager agent installed on ESXi.",
									"current_version": "7.0.120-16708660",
									"installed_time": 1598955323392,
									"multiple_version": false,
									"baseline_drifted": true,
									"supported": true
								}
							],
							"shared_storage": [
								{
									"name": "fc-storage",
									"type": "VMFS",
									"protocol": "FC",
									"is_primary": true,
									"datastore_id": "datastore-1408"
								}
							]
						}
					}
				}
			},
			"SystemInfoV5": {
				"description": "Get system information successfully.",
				"content": {
					"application/json": {
						"schema": {
							"description": "Information about the VxRail system.",
							"type": "object",
							"required": [
								"description",
								"version",
								"health",
								"network_connected",
								"vc_connected",
								"deployment_type",
								"cluster_host_count",
								"satellite_host_count",
								"is_external_vc",
								"logical_view_status"
							],
							"properties": {
								"description": {
									"description": "Description of the VxRail system.",
									"type": "string"
								},
								"version": {
									"description": "Software version of the VxRail appliance.",
									"type": "string"
								},
								"installed_time": {
									"description": "Installation time of the VxRail appliance software.",
									"type": "integer"
								},
								"health": {
									"description": "Health status of the VxRail system.",
									"type": "string"
								},
								"network_connected": {
									"description": "Connection status of the host with the internet.",
									"type": "boolean"
								},
								"vc_connected": {
									"description": "vCenter connection status.",
									"type": "boolean"
								},
								"upgrade_status": {
									"description": "The upgrade status of the VxRail appliance software.",
									"type": "string",
									"enum": [
										"CANCELLED",
										"DOWNLOADED",
										"DOWNLOADING",
										"ERR_DOWNLOAD",
										"ERR_PROFILE_PRECHECKER",
										"ERR_UPGRADED",
										"ERR_UPGRADE_PRECHECKER",
										"ERR_UPLOAD",
										"HAS_NEWER",
										"LATEST",
										"PROFILE_PRECHECKED",
										"UPGRADED",
										"UPGRADE_PRECHECKING",
										"UPGRADING",
										"UPLOADED",
										"UPLOADING"
									]
								},
								"installed_components": {
									"description": "Software components installed in the VxRail system.",
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/InstalledComponent"
									}
								},
								"deployment_type": {
									"description": "Information about the type of cluster deployed.",
									"type": "array",
									"items": {
										"type": "string",
										"enum": [
											"STANDARD",
											"VSAN_2_NODE",
											"VSAN_2_NODE_STRETCHED_CLUSTER",
											"DYNAMIC_NODE",
											"STRETCHED_CLUSTER",
											"DIMENSION",
											"VCF",
											"VVD",
											"VVD_VxRail",
											"VCF_VxRail"
										]
									}
								},
								"cluster_host_count": {
									"description": "Number of hosts in the cluster.",
									"type": "integer"
								},
								"satellite_host_count": {
									"description": "Number of VxRail managed satellite nodes."
								},
								"is_external_vc": {
									"description": "Whether the vCenter is external.",
									"type": "boolean"
								},
								"logical_view_status": {
									"description": "Enabled status of the VxRail manager logical view.",
									"type": "boolean"
								},
								"shared_storage": {
									"description": "Information about shared storage in the VxRail cluster.",
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SharedStorage"
									}
								}
							}
						},
						"example": {
							"description": "A hyperconverged infrastructure appliance that combines VMware compute, networking and storage into one single system for ease of deployment and management.",
							"version": "7.0.120-26639202",
							"installed_time": 1599014694234,
							"health": "Healthy",
							"network_connected": true,
							"vc_connected": true,
							"deployment_type": [
								"DYNAMIC_NODE",
								"VCF"
							],
							"cluster_host_count": 3,
							"satellite_host_count": 120,
							"is_external_vc": true,
							"logical_view_status": true,
							"installed_components": [
								{
									"component": "DellPTAgent",
									"name": "Dell PTAgent",
									"description": "Dell PTAgent installed on ESXi",
									"current_version": "1.0-0",
									"installed_time": 1598955454464,
									"multiple_version": true,
									"baseline_drifted": true,
									"supported": true
								},
								{
									"component": "Esx",
									"name": "VMware ESXi",
									"description": "VMware ESXi is the industry-leading, purpose-built bare-metal hypervisor. ESXi installs directly onto your physical server enabling it to be partitioned into multiple logical servers referred to as virtual machines.",
									"current_version": "7.0.1-16555998",
									"installed_time": 1598955061248,
									"multiple_version": false,
									"baseline_drifted": true,
									"supported": true
								},
								{
									"component": "VxRail",
									"name": "VxRail Manager",
									"description": "The management component that orchestrates the deployment and management of VxRail system.",
									"current_version": "7.0.120-26639202",
									"installed_time": 1528275533,
									"multiple_version": false,
									"baseline_drifted": true
								},
								{
									"component": "Vcenter",
									"name": "VMware vCenter Server Appliance",
									"description": "Centralized visibility, proactive management and extensibility for VMware vSphere from a single console VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments. It helps to automate and deliver a virtual infrastructure.",
									"current_version": "7.0.1-16556018",
									"installed_time": 1598955323392,
									"multiple_version": false,
									"baseline_drifted": true
								},
								{
									"component": "VxRailVib",
									"name": "VxRail Manager VIB",
									"description": "VxRail Manager agent installed on ESXi.",
									"current_version": "7.0.120-16708660",
									"installed_time": 1598955323392,
									"multiple_version": false,
									"baseline_drifted": true,
									"supported": true
								}
							],
							"shared_storage": [
								{
									"name": "fc-storage",
									"type": "VMFS",
									"protocol": "FC",
									"is_primary": true,
									"datastore_id": "datastore-1408"
								}
							]
						}
					}
				}
			},
			"AvailableHostsInfo": {
				"description": "Discover available hosts.",
				"content": {
					"application/json": {
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/DiscoveredNodeInfo"
							}
						},
						"examples": {
							"example-1": {
								"value": [
									{
										"id": "V0601040000000-01-01",
										"psnt": "V0601040000000",
										"slot": 1,
										"model": "VxRail P470F",
										"serial_number": "V060104",
										"appliance_id": "V0601040000000",
										"is_primary_node": false,
										"cluster_affinity": false,
										"discovered_date": 1533460206,
										"bios_uuid": "420e8b96-4602-9d96-35b9-906808c40985"
									},
									{
										"id": "JHN2K820000000-01-01",
										"psnt": "JHN2K820000000",
										"slot": 1,
										"model": "VxRail P470F",
										"serial_number": "JHN2K82",
										"appliance_id": "JHN2K820000000",
										"is_primary_node": true,
										"cluster_affinity": false,
										"discovered_date": 1533460206,
										"bios_uuid": "420ecd88-86ef-f775-f4d8-a101540bb5c4"
									}
								]
							}
						}
					}
				}
			},
			"ClusterHostsInfo": {
				"description": "Get configured hosts in the cluster.",
				"content": {
					"application/json": {
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ClusterHostInfo"
							},
							"example": [
								{
									"id": "VXRAILVIP470F2-01-01",
									"serial_number": "9HHNHL2",
									"psnt": "9HHNHL20000000",
									"host_name": "delle09156-01.localdomain.local",
									"appliance_id": "VXRAILVIP470F2",
									"slot": 1,
									"manufacturer": "Dell Inc.",
									"model": "VxRail P470F",
									"operational_status": "powering_off",
									"health": "Error",
									"power_status": "on",
									"led_status": "Blue:On",
									"tpm_present": false,
									"is_primary_node": true,
									"missing": false,
									"ip_set": {
										"management_ip": "192.168.106.182",
										"vsan_ip": "192.168.113.182",
										"vmotion_ip": "192.168.123.182"
									},
									"discovered_date": 1533460206,
									"cluster_affinity": true,
									"bios_uuid": "420e8b96-4602-9d96-35b9-906808c40985",
									"segment_label": "initial_segment"
								},
								{
									"id": "VXRAILVIP470F1-01-01",
									"serial_number": "9HHNHL3",
									"psnt": "9HHNHL30000000",
									"host_name": "delle09156-02.localdomain.local",
									"appliance_id": "VXRAILVIP470F3",
									"slot": 1,
									"manufacturer": "Dell Inc.",
									"model": "VxRail P470F",
									"operational_status": "powering_off",
									"health": "Error",
									"power_status": "on",
									"led_status": "Blue:On",
									"tpm_present": false,
									"is_primary_node": true,
									"missing": false,
									"ip_set": {
										"management_ip": "192.168.106.183",
										"vsan_ip": "192.168.113.183",
										"vmotion_ip": "192.168.123.183"
									},
									"discovered_date": 1533460206,
									"cluster_affinity": true,
									"bios_uuid": "420ecd88-86ef-f775-f4d8-a101540bb5c4",
									"segment_label": "initial_segment"
								}
							]
						},
						"examples": {
							"Example": {
								"value": [
									{
										"id": "VXRAILVIP470F2-01-01",
										"serial_number": "9HHNHL2",
										"psnt": "9HHNHL20000000",
										"host_name": "delle09156-01.localdomain.local",
										"appliance_id": "VXRAILVIP470F2",
										"slot": 1,
										"manufacturer": "Dell Inc.",
										"model": "VxRail P470F",
										"operational_status": "powering_off",
										"health": "Error",
										"power_status": "on",
										"led_status": "Blue:On",
										"tpm_present": false,
										"is_primary_node": true,
										"missing": false,
										"ip_set": {
											"management_ip": "192.168.106.182",
											"vsan_ip": "192.168.113.182",
											"vmotion_ip": "192.168.123.182"
										},
										"discovered_date": 1533460206,
										"cluster_affinity": true,
										"bios_uuid": "420e8b96-4602-9d96-35b9-906808c40985",
										"segment_label": "initial_segment"
									},
									{
										"id": "VXRAILVIP470F1-01-01",
										"serial_number": "9HHNHL3",
										"psnt": "9HHNHL30000000",
										"host_name": "delle09156-02.localdomain.local",
										"appliance_id": "VXRAILVIP470F3",
										"slot": 1,
										"manufacturer": "Dell Inc.",
										"model": "VxRail P470F",
										"operational_status": "powering_off",
										"health": "Error",
										"power_status": "on",
										"led_status": "Blue:On",
										"tpm_present": false,
										"is_primary_node": true,
										"missing": false,
										"ip_set": {
											"management_ip": "192.168.106.183",
											"vsan_ip": "192.168.113.183",
											"vmotion_ip": "192.168.123.183"
										},
										"discovered_date": 1533460206,
										"cluster_affinity": true,
										"bios_uuid": "420ecd88-86ef-f775-f4d8-a101540bb5c4",
										"segment_label": "initial_segment"
									}
								]
							}
						}
					}
				}
			},
			"ClusterHostsInfoV2": {
				"description": "Get configured hosts in the cluster.",
				"content": {
					"application/json": {
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ClusterHostInfoV2"
							},
							"example": [
								{
									"id": "VXRAILVIP470F2-01-01",
									"serial_number": "9HHNHL2",
									"psnt": "9HHNHL20000000",
									"host_name": "delle09156-01.localdomain.local",
									"appliance_id": "VXRAILVIP470F2",
									"slot": 1,
									"manufacturer": "Dell Inc.",
									"model": "VxRail P470F",
									"operational_status": "powering_off",
									"health": "Error",
									"power_status": "on",
									"led_status": "Blue:On",
									"tpm_present": false,
									"is_primary_node": true,
									"missing": false,
									"ip_set": {
										"management_ip": "192.168.106.182",
										"vsan_ip": "192.168.113.182",
										"vmotion_ip": "192.168.123.182"
									},
									"ip_set_ipv6": {
										"management_ip": "2001:db8:1ab:16::101",
										"vsan_ip": "2001:db8:1ab:17::101",
										"vmotion_ip": "2001:db8:1ab:18::101"
									},
									"discovered_date": 1533460206,
									"cluster_affinity": true,
									"bios_uuid": "420e8b96-4602-9d96-35b9-906808c40985",
									"segment_label": "initial_segment"
								},
								{
									"id": "VXRAILVIP470F1-01-01",
									"serial_number": "9HHNHL3",
									"psnt": "9HHNHL30000000",
									"host_name": "delle09156-02.localdomain.local",
									"appliance_id": "VXRAILVIP470F3",
									"slot": 1,
									"manufacturer": "Dell Inc.",
									"model": "VxRail P470F",
									"operational_status": "powering_off",
									"health": "Error",
									"power_status": "on",
									"led_status": "Blue:On",
									"tpm_present": false,
									"is_primary_node": true,
									"missing": false,
									"ip_set": {
										"management_ip": "192.168.106.183",
										"vsan_ip": "192.168.113.183",
										"vmotion_ip": "192.168.123.183"
									},
									"ip_set_ipv6": {
										"management_ip": "2001:db8:1ab:16::101",
										"vsan_ip": "2001:db8:1ab:17::101",
										"vmotion_ip": "2001:db8:1ab:18::101"
									},
									"discovered_date": 1533460206,
									"cluster_affinity": true,
									"bios_uuid": "420ecd88-86ef-f775-f4d8-a101540bb5c4",
									"segment_label": "initial_segment"
								}
							]
						},
						"examples": {
							"Example": {
								"value": [
									{
										"id": "VXRAILVIP470F2-01-01",
										"serial_number": "9HHNHL2",
										"psnt": "9HHNHL20000000",
										"host_name": "delle09156-01.localdomain.local",
										"appliance_id": "VXRAILVIP470F2",
										"slot": 1,
										"manufacturer": "Dell Inc.",
										"model": "VxRail P470F",
										"operational_status": "powering_off",
										"health": "Error",
										"power_status": "on",
										"led_status": "Blue:On",
										"tpm_present": false,
										"is_primary_node": true,
										"missing": false,
										"ip_set": {
											"management_ip": "192.168.106.182",
											"vsan_ip": "192.168.113.182",
											"vmotion_ip": "192.168.123.182"
										},
										"ip_set_ipv6": {
											"management_ip": "2001:db8:1ab:16::101",
											"vsan_ip": "2001:db8:1ab:17::101",
											"vmotion_ip": "2001:db8:1ab:18::101"
										},
										"discovered_date": 1533460206,
										"cluster_affinity": true,
										"bios_uuid": "420e8b96-4602-9d96-35b9-906808c40985",
										"segment_label": "initial_segment"
									},
									{
										"id": "VXRAILVIP470F1-01-01",
										"serial_number": "9HHNHL3",
										"psnt": "9HHNHL30000000",
										"host_name": "delle09156-02.localdomain.local",
										"appliance_id": "VXRAILVIP470F3",
										"slot": 1,
										"manufacturer": "Dell Inc.",
										"model": "VxRail P470F",
										"operational_status": "powering_off",
										"health": "Error",
										"power_status": "on",
										"led_status": "Blue:On",
										"tpm_present": false,
										"is_primary_node": true,
										"missing": false,
										"ip_set": {
											"management_ip": "192.168.106.183",
											"vsan_ip": "192.168.113.183",
											"vmotion_ip": "192.168.123.183"
										},
										"ip_set_ipv6": {
											"management_ip": "2001:db8:1ab:16::101",
											"vsan_ip": "2001:db8:1ab:17::101",
											"vmotion_ip": "2001:db8:1ab:18::101"
										},
										"discovered_date": 1533460206,
										"cluster_affinity": true,
										"bios_uuid": "420ecd88-86ef-f775-f4d8-a101540bb5c4",
										"segment_label": "initial_segment"
									}
								]
							}
						}
					}
				}
			},
			"DNSInfo": {
				"description": "Get DNS of VxRail cluster",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/DNSInfo"
						},
						"example": {
							"servers": [
								"192.168.10.222",
								"8.8.8.8"
							],
							"is_internal": false
						}
					}
				}
			},
			"NTPInfo": {
				"description": "Information about the NTP servers for the cluster.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/NTPInfo"
						},
						"example": {
							"servers": [
								"172.16.1.167"
							]
						}
					}
				}
			},
			"ClusterPortgroupInfo": {
				"description": "Get the pnics uplink slot information for the cluster nodes.",
				"content": {
					"application/json": {
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ClusterPortgroup"
							}
						},
						"example": [
							{
								"name": "VSAN_PG",
								"type": "VSAN",
								"portgroup_key": "dvportgroup-30",
								"portgroup_vlan": 100,
								"vds_name": "abc",
								"vds_moid": "dvs-24",
								"vds_uuid": "50 22 85 24 1a 89 42 e5-94 03 e0 d3 a6 50 7a a8"
							},
							{
								"name": "VMotion_PG",
								"type": "VMOTION",
								"portgroup_key": "dvportgroup-28",
								"portgroup_vlan": 200,
								"vds_name": "abc",
								"vds_moid": "dvs-24",
								"vds_uuid": "50 22 85 24 1a 89 42 e5-94 03 e0 d3 a6 50 7a a8"
							},
							{
								"name": "Management_PG",
								"type": "MANAGEMENT",
								"portgroup_key": "dvportgroup-26",
								"portgroup_vlan": 100,
								"vds_name": "abc",
								"vds_moid": "dvs-24",
								"vds_uuid": "50 22 85 24 1a 89 42 e5-94 03 e0 d3 a6 50 7a a8"
							},
							{
								"name": "VxRail_Management_PG",
								"type": "VXRAILDISCOVERY",
								"portgroup_key": "dvportgroup-27",
								"portgroup_vlan": 3939,
								"vds_name": "abc",
								"vds_moid": "dvs-24",
								"vds_uuid": "50 22 85 24 1a 89 42 e5-94 03 e0 d3 a6 50 7a a8"
							},
							{
								"name": "WITNESS_PG",
								"type": "WITNESS",
								"portgroup_key": "dvportgroup-30",
								"portgroup_vlan": 300,
								"vds_name": "abc",
								"vds_moid": "dvs-24",
								"vds_uuid": "50 22 85 24 1a 89 42 e5-94 03 e0 d3 a6 50 7a a8"
							},
							{
								"name": "VXRAIL_SYSTEM_PG",
								"type": "VXRAILSYSTEMVM",
								"portgroup_key": "dvportgroup-31",
								"portgroup_vlan": 0,
								"vds_name": "abc",
								"vds_moid": "dvs-24",
								"vds_uuid": "50 22 85 24 1a 89 42 e5-94 03 e0 d3 a6 50 7a a8"
							}
						]
					}
				}
			},
			"InternetModeInfo": {
				"description": "Get system installed component successfully.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/InternetMode"
						},
						"example": {
							"is_dark_site": true
						}
					}
				}
			},
			"ProxySettingsInfo": {
				"description": "Retrieved proxy settings successfully.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ProxySettings"
						},
						"examples": {
							"Example": {
								"value": {
									"server": "string",
									"port": 0,
									"type": "string",
									"username": "string",
									"socks_version": 0
								}
							}
						}
					}
				}
			},
			"404-NotFoundProxySetting": {
				"description": "Failed to find proxy settings.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						},
						"example": {
							"error-code": 804,
							"message": "Could not find proxy settings."
						}
					}
				}
			},
			"500-NetworkTimeoutInfo": {
				"description": "Network connection timed out.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						},
						"example": {
							"message": "Network connection timed out."
						}
					}
				}
			},
			"400-InvalidProxySettingsInfo": {
				"description": "Invalid proxy settings.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						},
						"example": {
							"error-code": 800,
							"message": "Proxy settings are not correct. Proxy server and port are mandatory and username and password are optional."
						}
					}
				}
			},
			"400-InvalidCsr": {
				"description": "The request could not be understood by the server due to malformed syntax.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						},
						"examples": {
							"Example-1": {
								"value": {
									"error_code": 100001,
									"message": "Missing parameters {param_name}."
								}
							},
							"Example-2": {
								"value": {
									"error_code": 100002,
									"message": "The format in the {param_name} field is invalid."
								}
							}
						}
					}
				}
			},
			"400-InvalidCertificate": {
				"description": "The request could not be understood by the server due to malformed syntax.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						},
						"examples": {
							"Example-1": {
								"value": {
									"error_code": 100001,
									"message": "Missing parameters {param_name}."
								}
							},
							"Example-2": {
								"value": {
									"error_code": 100004,
									"message": "Certificate content format error."
								}
							},
							"Example-3": {
								"value": {
									"error_code": 100005,
									"message": "Cannot find the embedded private key."
								}
							},
							"Example-4": {
								"value": {
									"error_code": 100006,
									"message": "Certificate is expired."
								}
							},
							"Example-5": {
								"value": {
									"error_code": 100007,
									"message": "The signature algorithm of the certificate is not supported."
								}
							},
							"Example-6": {
								"value": {
									"error_code": 100008,
									"message": "The certificate does not meet the criteria with 'SSL server' purpose."
								}
							},
							"Example-7": {
								"value": {
									"error_code": 100009,
									"message": "Private key does not match the certificate."
								}
							},
							"Example-8": {
								"value": {
									"error_code": 100010,
									"message": "Password is invalid."
								}
							},
							"Example-9": {
								"value": {
									"error_code": 100012,
									"message": "Certificate issuer mismatch."
								}
							},
							"Example-10": {
								"value": {
									"error_code": 100013,
									"message": "Private key should be in the RSA format."
								}
							},
							"Example-11": {
								"value": {
									"error_code": 100018,
									"message": "Certificate is not yet validated."
								}
							}
						}
					}
				}
			},
			"TelemetryTierSettingInfo": {
				"description": "Successful operation.",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/TelemetryTierSetting"
						},
						"example": {
							"level": "BASIC"
						}
					}
				}
			},
			"ManagementAccountV1Info": {
				"description": "Information about vCenter management account or ESXi host account.",
				"content": {
					"application/json": {
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ManagementAccountV1"
							}
						},
						"example": [
							{
								"component": "ESXI",
								"hostname": "vcluster101-esx02.vv003.local",
								"username": "vxmmanagement"
							}
						]
					}
				}
			}
		},
		"examples": {
			"SystemInitialization": {
				"value": {
					"version": "7.0.240",
					"global": {
						"ntp_servers": [
							"10.0.0.1",
							"10.0.0.2"
						],
						"dns_servers": [
							"172.23.1.167"
						],
						"syslog_servers": [
							"172.23.1.189"
						],
						"top_level_domain": "vvlarge.local",
						"cluster_type": "STANDARD",
						"cluster_management_netmask": "255.255.0.0",
						"cluster_management_gateway": "172.23.1.167",
						"cluster_vsan_netmask": "255.255.0.0",
						"cluster_vmotion_netmask": "255.255.0.0",
						"cluster_systemvm_network": "255.255.255.0",
						"cluster_systemvm_gateway": "172.16.2.167"
					},
					"hosts": [
						{
							"host_psnt": "V0817010000000",
							"hostname": "vcluster817-esx01",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "172.23.26.101"
								},
								{
									"type": "VSAN",
									"ip": "172.23.26.136"
								},
								{
									"type": "VMOTION",
									"ip": "172.23.26.211"
								}
							],
							"storage": {
								"slot_claims": [
									{
										"usage": "non-vSAN",
										"values": [
											{
												"slots": "3,6,7-8"
											}
										]
									}
								]
							},
							"geo_location": {
								"rack-name": "",
								"position": 1
							}
						},
						{
							"host_psnt": "V0817020000000",
							"hostname": "vcluster817-esx02",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "172.23.26.102"
								},
								{
									"type": "VSAN",
									"ip": "172.23.26.137"
								},
								{
									"type": "vmotion",
									"ip": "172.23.26.212"
								}
							],
							"geo_location": {
								"rack_name": "",
								"position": 2
							}
						},
						{
							"host_psnt": "V0817030000000",
							"hostname": "vcluster817-esx03",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "172.23.26.103"
								},
								{
									"type": "VSAN",
									"ip": "172.23.26.138"
								},
								{
									"type": "VMOTION",
									"ip": "172.23.26.213"
								}
							],
							"geo_location": {
								"rack_name": "",
								"position": 3
							}
						}
					],
					"vcenter": {
						"customer_supplied": true,
						"customer_supplied_vc_name": "vcsa.vvlarge.local",
						"datacenter_name": "VxRail-Datacenter",
						"cluster_name": "VxRail-Cluster",
						"accounts": {
							"administrator": {
								"username": "administrator@vsphere.local"
							},
							"management": {
								"username": ""
							}
						},
						"auto_accept_vc_cert": true
					},
					"vxrail_manager": {
						"name": "vcluster817-vxm",
						"ip": "172.23.26.200",
						"accounts": {
							"root": {
								"username": "root"
							},
							"service": {
								"username": "mystic"
							},
							"support": {
								"username": "service"
							}
						}
					},
					"network": {
						"nic_profile": "FOUR_HIGH_SPEED",
						"systemvm_portgroup_binding_type": "STATIC_BINDING",
						"management_portgroup_binding_type": "STATIC_BINDING",
						"vds": [
							{
								"mtu": 9000,
								"portgroups": [
									{
										"type": "VSAN",
										"vlan_id": 0,
										"vmk_mtu": 9000
									},
									{
										"type": "MANAGEMENT",
										"vlan_id": 0,
										"vmk_mtu": 1500
									},
									{
										"type": "VMOTION",
										"vlan_id": 0,
										"vmk_mtu": 9000
									},
									{
										"type": "VXRAILDISCOVERY",
										"vlan_id": 3939,
										"vmk_mtu": 1500
									},
									{
										"type": "VXRAILSYSTEMVM",
										"vlan_id": 3939,
										"vmk_mtu": 1500
									}
								]
							}
						]
					},
					"storage": {
						"disk_group_type": "2404"
					}
				}
			},
			"SystemInitializationV6": {
				"value": {
					"version": "8.0.000",
					"global": {
						"ip_version": "IPV6",
						"ntp_servers": [
							"2001:db8:1ab:16::202",
							"2001:db8:1ab:16::203"
						],
						"dns_servers": [
							"2001:db8:1ab:16::202"
						],
						"syslog_servers": [
							"2001:db8:1ab:16::204"
						],
						"top_level_domain": "vvlarge.local",
						"cluster_type": "STANDARD",
						"cluster_management_prefix_length_ipv6": 64,
						"cluster_management_gateway_ipv6": "2001:db8:1ab:16::1",
						"cluster_vsan_prefix_legnth_ipv6": 64,
						"cluster_vmotion_prefix_length_ipv6": 64,
						"cluster_systemvm_prefix_length_ipv6": 64,
						"cluster_systemvm_gateway_ipv6": "2001:db8:1ab:20::1"
					},
					"hosts": [
						{
							"host_psnt": "V0817010000000",
							"hostname": "vcluster817-esx01",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ipv6": "2001:db8:1ab:16::101"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:17::101"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:18::101"
								}
							],
							"storage": {
								"slot_claims": [
									{
										"usage": "non-vSAN",
										"values": [
											{
												"slots": "3,6,7-8"
											}
										]
									}
								]
							},
							"geo_location": {
								"rack-name": "",
								"position": 1
							}
						},
						{
							"host_psnt": "V0817020000000",
							"hostname": "vcluster817-esx02",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ipv6": "2001:db8:1ab:16::102"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:17::102"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:18::102"
								}
							],
							"geo_location": {
								"rack_name": "",
								"position": 2
							}
						},
						{
							"host_psnt": "V0817030000000",
							"hostname": "vcluster817-esx03",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ipv6": "2001:db8:1ab:16::103"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:17::103"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:18::103"
								}
							],
							"geo_location": {
								"rack_name": "",
								"position": 3
							}
						}
					],
					"vcenter": {
						"customer_supplied": true,
						"customer_supplied_vc_name": "vcsa.vvlarge.local",
						"datacenter_name": "VxRail-Datacenter",
						"cluster_name": "VxRail-Cluster",
						"accounts": {
							"administrator": {
								"username": "administrator@vsphere.local"
							},
							"management": {
								"username": ""
							}
						},
						"auto_accept_vc_cert": true
					},
					"vxrail_manager": {
						"name": "vcluster817-vxm",
						"ipv6": "2001:db8:1ab:16::200",
						"accounts": {
							"root": {
								"username": "root"
							},
							"service": {
								"username": "mystic"
							},
							"support": {
								"username": "service"
							}
						}
					},
					"network": {
						"nic_profile": "FOUR_HIGH_SPEED",
						"systemvm_portgroup_binding_type": "STATIC_BINDING",
						"management_portgroup_binding_type": "STATIC_BINDING",
						"vds": [
							{
								"mtu": 9000,
								"portgroups": [
									{
										"type": "VSAN",
										"vlan_id": 0,
										"vmk_mtu": 9000
									},
									{
										"type": "MANAGEMENT",
										"vlan_id": 0,
										"vmk_mtu": 1500
									},
									{
										"type": "VMOTION",
										"vlan_id": 0,
										"vmk_mtu": 9000
									},
									{
										"type": "VXRAILDISCOVERY",
										"vlan_id": 3939,
										"vmk_mtu": 1500
									},
									{
										"type": "VXRAILSYSTEMVM",
										"vlan_id": 3939,
										"vmk_mtu": 1500
									}
								]
							}
						]
					},
					"storage": {
						"disk_group_type": "2404"
					}
				}
			},
			"SystemInitializationCustomerSuppliedHosts": {
				"value": {
					"version": "7.0.240",
					"global": {
						"ntp_servers": [
							"10.0.0.1",
							"10.0.0.2"
						],
						"dns_servers": [
							"172.23.1.167"
						],
						"syslog_servers": [
							"172.23.1.189"
						],
						"top_level_domain": "vvlarge.local",
						"cluster_type": "STANDARD",
						"cluster_management_netmask": "255.255.0.0",
						"cluster_management_gateway": "172.23.1.167",
						"cluster_vsan_netmask": "255.255.0.0",
						"cluster_vmotion_netmask": "255.255.0.0",
						"cluster_systemvm_network": "255.255.255.0",
						"cluster_systemvm_gateway": "172.16.2.167"
					},
					"hosts": [
						{
							"host_psnt": "",
							"hostname": "vcluster817-esx01",
							"customer_supplied": {
								"management_ip": "192.168.24.12",
								"current_root_password": "password"
							},
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "172.23.26.101"
								},
								{
									"type": "VSAN",
									"ip": "172.23.26.136"
								},
								{
									"type": "VMOTION",
									"ip": "172.23.26.211"
								}
							],
							"storage": {
								"slot_claims": [
									{
										"usage": "non-vSAN",
										"values": [
											{
												"slots": "3,6,7-8"
											}
										]
									}
								]
							},
							"geo_location": {
								"rack-name": "",
								"position": 1
							}
						},
						{
							"host_psnt": "",
							"hostname": "vcluster817-esx02",
							"customer_supplied": {
								"management_ip": "192.168.24.13",
								"current_root_password": "password"
							},
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "172.23.26.102"
								},
								{
									"type": "VSAN",
									"ip": "172.23.26.137"
								},
								{
									"type": "vmotion",
									"ip": "172.23.26.212"
								}
							],
							"geo_location": {
								"rack_name": "",
								"position": 2
							}
						},
						{
							"host_psnt": "",
							"hostname": "vcluster817-esx03",
							"customer_supplied": {
								"management_ip": "192.168.24.14",
								"current_root_password": "password"
							},
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "172.23.26.103"
								},
								{
									"type": "VSAN",
									"ip": "172.23.26.138"
								},
								{
									"type": "VMOTION",
									"ip": "172.23.26.213"
								}
							],
							"geo_location": {
								"rack_name": "",
								"position": 3
							}
						}
					],
					"vcenter": {
						"customer_supplied": true,
						"customer_supplied_vc_name": "vcsa.vvlarge.local",
						"datacenter_name": "VxRail-Datacenter",
						"cluster_name": "VxRail-Cluster",
						"accounts": {
							"administrator": {
								"username": "administrator@vsphere.local"
							},
							"management": {
								"username": ""
							}
						},
						"auto_accept_vc_cert": true
					},
					"vxrail_manager": {
						"name": "vcluster817-vxm",
						"ip": "172.23.26.200",
						"accounts": {
							"root": {
								"username": "root"
							},
							"service": {
								"username": "mystic"
							},
							"support": {
								"username": "service"
							}
						}
					},
					"network": {
						"nic_profile": "ADVANCED_VXRAIL_SUPPLIED_VDS",
						"systemvm_portgroup_binding_type": "STATIC_BINDING",
						"management_portgroup_binding_type": "STATIC_BINDING",
						"vds": [
							{
								"mtu": 9000,
								"nic_mappings": [
									{
										"uplinks": [
											{
												"name": "uplink1",
												"physical_nic": "vmnic0"
											},
											{
												"name": "uplink2",
												"physical_nic": "vmnic1"
											}
										]
									}
								],
								"portgroups": [
									{
										"type": "VXRAILDISCOVERY",
										"vlan_id": 0,
										"vmk_mtu": 9000,
										"failover_order": {
											"active": [
												"uplink1"
											],
											"standby": [
												"uplink2"
											]
										},
										"load_balance_policy": "LOADBALANCE_SRCID"
									},
									{
										"type": "MANAGEMENT",
										"vlan_id": 0,
										"vmk_mtu": 1500,
										"failover_order": {
											"active": [
												"uplink1"
											],
											"standby": [
												"uplink2"
											]
										},
										"load_balance_policy": "LOADBALANCE_SRCID"
									},
									{
										"type": "VXRAILSYSTEMVM",
										"vlan_id": 10,
										"vmk_mtu": 1500,
										"failover_order": {
											"active": [
												"uplink1"
											],
											"standby": [
												"uplink2"
											]
										},
										"load_balance_policy": "LOADBALANCE_SRCID"
									}
								]
							},
							{
								"mtu": 9000,
								"nic_mappings": [
									{
										"uplinks": [
											{
												"name": "uplink1",
												"physical_nic": "vmnic2"
											},
											{
												"name": "uplink2",
												"physical_nic": "vmnic3"
											}
										]
									}
								],
								"portgroups": [
									{
										"type": "VSAN",
										"vlan_id": 0,
										"vmk_mtu": 9000,
										"failover_order": {
											"active": [
												"uplink1"
											],
											"standby": [
												"uplink2"
											]
										},
										"load_balance_policy": "LOADBALANCE_SRCID"
									},
									{
										"type": "VMOTION",
										"vlan_id": 0,
										"vmk_mtu": 9000,
										"failover_order": {
											"active": [
												"uplink1"
											],
											"standby": [
												"uplink2"
											]
										},
										"load_balance_policy": "LOADBALANCE_SRCID"
									}
								]
							}
						]
					},
					"storage": {
						"disk_group_type": "2404"
					}
				}
			},
			"SystemInitializationCustomerSuppliedHostsV6": {
				"value": {
					"version": "8.0.000",
					"global": {
						"ip_version": "IPV6",
						"ntp_servers": [
							"2001:db8:1ab:16::202",
							"2001:db8:1ab:16::203"
						],
						"dns_servers": [
							"2001:db8:1ab:16::202"
						],
						"syslog_servers": [
							"2001:db8:1ab:16::204"
						],
						"top_level_domain": "vvlarge.local",
						"cluster_type": "STANDARD",
						"cluster_management_prefix_length_ipv6": 64,
						"cluster_management_gateway_ipv6": "2001:db8:1ab:16::1",
						"cluster_vsan_prefix_length_ipv6": 64,
						"cluster_vmotion_prefix_length_ipv6": 64,
						"cluster_systemvm_prefix_length_ipv6": 64,
						"cluster_systemvm_gateway_ipv6": "2001:db8:1ab:20::1"
					},
					"hosts": [
						{
							"host_psnt": "",
							"hostname": "vcluster817-esx01",
							"customer_supplied": {
								"management_ipv6": "2001:db8:1ab:16::101",
								"current_root_password": "password"
							},
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ipv6": "2001:db8:1ab:16::101"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:17::101"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:18::101"
								}
							],
							"storage": {
								"slot_claims": [
									{
										"usage": "non-vSAN",
										"values": [
											{
												"slots": "3,6,7-8"
											}
										]
									}
								]
							},
							"geo_location": {
								"rack-name": "",
								"position": 1
							}
						},
						{
							"host_psnt": "",
							"hostname": "vcluster817-esx02",
							"customer_supplied": {
								"management_ipv6": "2001:db8:1ab:16::102",
								"current_root_password": "password"
							},
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ipv6": "2001:db8:1ab:16::102"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:17::102"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:18::102"
								}
							],
							"geo_location": {
								"rack_name": "",
								"position": 2
							}
						},
						{
							"host_psnt": "",
							"hostname": "vcluster817-esx03",
							"customer_supplied": {
								"management_ipv6": "2001:db8:1ab:16::103",
								"current_root_password": "password"
							},
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ipv6": "2001:db8:1ab:16::103"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:17::103"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:18::103"
								}
							],
							"geo_location": {
								"rack_name": "",
								"position": 3
							}
						}
					],
					"vcenter": {
						"customer_supplied": true,
						"customer_supplied_vc_name": "vcsa.vvlarge.local",
						"datacenter_name": "VxRail-Datacenter",
						"cluster_name": "VxRail-Cluster",
						"accounts": {
							"administrator": {
								"username": "administrator@vsphere.local"
							},
							"management": {
								"username": ""
							}
						},
						"auto_accept_vc_cert": true
					},
					"vxrail_manager": {
						"name": "vcluster817-vxm",
						"ipv6": "2001:db8:1ab:18::200",
						"accounts": {
							"root": {
								"username": "root"
							},
							"service": {
								"username": "mystic"
							},
							"support": {
								"username": "service"
							}
						}
					},
					"network": {
						"nic_profile": "ADVANCED_VXRAIL_SUPPLIED_VDS",
						"systemvm_portgroup_binding_type": "STATIC_BINDING",
						"management_portgroup_binding_type": "STATIC_BINDING",
						"vds": [
							{
								"mtu": 9000,
								"nic_mappings": [
									{
										"uplinks": [
											{
												"name": "uplink1",
												"physical_nic": "vmnic0"
											},
											{
												"name": "uplink2",
												"physical_nic": "vmnic1"
											}
										]
									}
								],
								"portgroups": [
									{
										"type": "VXRAILDISCOVERY",
										"vlan_id": 0,
										"vmk_mtu": 9000,
										"failover_order": {
											"active": [
												"uplink1"
											],
											"standby": [
												"uplink2"
											]
										},
										"load_balance_policy": "LOADBALANCE_SRCID"
									},
									{
										"type": "MANAGEMENT",
										"vlan_id": 0,
										"vmk_mtu": 1500,
										"failover_order": {
											"active": [
												"uplink1"
											],
											"standby": [
												"uplink2"
											]
										},
										"load_balance_policy": "LOADBALANCE_SRCID"
									},
									{
										"type": "VXRAILSYSTEMVM",
										"vlan_id": 10,
										"vmk_mtu": 1500,
										"failover_order": {
											"active": [
												"uplink1"
											],
											"standby": [
												"uplink2"
											]
										},
										"load_balance_policy": "LOADBALANCE_SRCID"
									}
								]
							},
							{
								"mtu": 9000,
								"nic_mappings": [
									{
										"uplinks": [
											{
												"name": "uplink1",
												"physical_nic": "vmnic2"
											},
											{
												"name": "uplink2",
												"physical_nic": "vmnic3"
											}
										]
									}
								],
								"portgroups": [
									{
										"type": "VSAN",
										"vlan_id": 0,
										"vmk_mtu": 9000,
										"failover_order": {
											"active": [
												"uplink1"
											],
											"standby": [
												"uplink2"
											]
										},
										"load_balance_policy": "LOADBALANCE_SRCID"
									},
									{
										"type": "VMOTION",
										"vlan_id": 0,
										"vmk_mtu": 9000,
										"failover_order": {
											"active": [
												"uplink1"
											],
											"standby": [
												"uplink2"
											]
										},
										"load_balance_policy": "LOADBALANCE_SRCID"
									}
								]
							}
						]
					},
					"storage": {
						"disk_group_type": "2404"
					}
				}
			},
			"SystemInitializationDualstack": {
				"value": {
					"version": "8.0.000",
					"global": {
						"ip_version": "DUALSTACK",
						"ntp_servers": [
							"2001:db8:1ab:16::202",
							"20.10.100.7"
						],
						"is_internal_dns": false,
						"dns_servers": [
							"2001:db8:1ab:16::202",
							"20.10.100.7"
						],
						"syslog_servers": [],
						"top_level_domain": "rackE10.local",
						"cluster_vsan_prefix_length_ipv6": 80,
						"cluster_vmotion_prefix_length_ipv6": 80,
						"cluster_management_prefix_length_ipv6": 80,
						"cluster_management_gateway_ipv6": "2001:db8:1ab:16::1",
						"cluster_management_netmask": "255.255.255.0",
						"cluster_management_gateway": "20.13.6.1",
						"cluster_type": "STANDARD"
					},
					"hosts": [
						{
							"host_psnt": "BB4RG030000000",
							"hostname": "c3-esx01",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "management",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "20.13.6.101",
									"ipv6": "2001:db8:1ab:16:101"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:16:101"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:16:101"
								}
							],
							"geo_location": {
								"rack_name": "e10-c3",
								"position": 1
							}
						},
						{
							"host_psnt": "BB3PG030000000",
							"hostname": "c3-esx02",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "management",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "20.13.6.102",
									"ipv6": "2001:db8:1ab:16:102"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:16:102"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:16:102"
								}
							],
							"geo_location": {
								"rack_name": "e10-c3",
								"position": 2
							}
						},
						{
							"host_psnt": "BB1QG030000000",
							"hostname": "c3-esx03",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "management",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "20.13.6.103",
									"ipv6": "2001:db8:1ab:16:103"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:16:103"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:16:103"
								}
							],
							"geo_location": {
								"rack_name": "e10-c3",
								"position": 3
							}
						}
					],
					"vcenter": {
						"customer_supplied": true,
						"auto_accept_vc_cert": true,
						"customer_supplied_vc_name": "vcsa.vvlarge.local",
						"datacenter_name": "VxRail-Datacenter",
						"cluster_name": "VxRail-Cluster",
						"accounts": {
							"administrator": {
								"username": "administrator@vsphere.local",
								"password": "password"
							},
							"management": {
								"username": "management",
								"password": "password"
							}
						}
					},
					"vxrail_manager": {
						"name": "c3-vxm",
						"ip": "20.13.6.200",
						"ipv6": "2001:db8:1ab:16:200",
						"accounts": {
							"root": {
								"username": "root",
								"password": "password"
							},
							"support": {
								"username": "support",
								"password": "password"
							},
							"service": {
								"username": "service",
								"password": "password"
							}
						}
					},
					"network": {
						"nic_profile": "TWO_HIGH_SPEED",
						"systemvm_portgroup_binding_type": "STATIC_BINDING",
						"management_portgroup_binding_type": "EPHEMERAL",
						"vds": [
							{
								"portgroups": [
									{
										"type": "VXRAILDISCOVERY",
										"vlan_id": 0
									},
									{
										"type": "MANAGEMENT",
										"vlan_id": 0
									},
									{
										"type": "VSAN",
										"vlan_id": 0
									},
									{
										"type": "VMOTION",
										"vlan_id": 0
									}
								]
							}
						]
					}
				}
			},
			"SystemInitializationWithSsoDomainDualstack": {
				"value": {
					"version": "8.0.000",
					"global": {
						"ip_version": "DUALSTACK",
						"ntp_servers": [
							"172.16.1.167",
							"2001:db8:1ab:16:202"
						],
						"is_internal_dns": false,
						"dns_servers": [
							"172.16.1.167",
							"2001:db8:1ab:16:202"
						],
						"syslog_servers": [],
						"top_level_domain": "vv009.local",
						"cluster_vsan_prefix_length_ipv6": 96,
						"cluster_vmotion_prefix_length_ipv6": 96,
						"cluster_management_prefix_length_ipv6": 96,
						"cluster_management_gateway_ipv6": "2001:db8:1ab:16:167",
						"cluster_management_netmask": "255.255.0.0",
						"cluster_management_gateway": "172.16.1.167",
						"cluster_type": "STANDARD"
					},
					"hosts": [
						{
							"host_psnt": "V0101010000000",
							"hostname": "vcluster101-esx01",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "management",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "172.16.10.101",
									"ipv6": "2001:db8:1ab:16:101"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:16:101"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:16:101"
								}
							],
							"geo_location": {
								"rack_name": "V0101",
								"position": 1
							}
						},
						{
							"host_psnt": "V0101020000000",
							"hostname": "vcluster101-esx02",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "management",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "172.16.10.102",
									"ipv6": "2001:db8:1ab:16:102"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:16:102"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:16:102"
								}
							],
							"geo_location": {
								"rack_name": "V0101",
								"position": 2
							}
						},
						{
							"host_psnt": "V0101030000000",
							"hostname": "vcluster101-esx03",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "management",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "172.16.10.103",
									"ipv6": "2001:db8:1ab:16:103"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:16:103"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:16:103"
								}
							],
							"geo_location": {
								"rack_name": "V0101",
								"position": 3
							}
						}
					],
					"vcenter": {
						"customer_supplied": false,
						"auto_accept_vc_cert": true,
						"vxrail_supplied_vc_ip": "172.16.10.201",
						"vxrail_supplied_vc_ipv6": "fc00::20:16:10:201",
						"vxrail_supplied_vc_name": "vcluster101-vcsa",
						"accounts": {
							"management": {
								"username": "management",
								"password": "password"
							},
							"root": {
								"username": "root",
								"password": "password"
							}
						},
						"existing_sso_domain": {
							"auto_accept_sso_vc_cert": true,
							"server": "vcluster101-exvc.vv009.local",
							"port": 443,
							"username": "administrator@vsphere.local",
							"password": "password"
						}
					},
					"vxrail_manager": {
						"name": "vcluster101-vxm",
						"ip": "172.16.10.200",
						"ipv6": "2001:db8:1ab:16:200",
						"accounts": {
							"root": {
								"username": "root",
								"password": "password"
							},
							"support": {
								"username": "support",
								"password": "password"
							},
							"service": {
								"username": "service",
								"password": "password"
							}
						}
					},
					"storage": {
						"disk_group_type": "1002"
					},
					"network": {
						"nic_profile": "TWO_HIGH_SPEED",
						"systemvm_portgroup_binding_type": "STATIC_BINDING",
						"management_portgroup_binding_type": "STATIC_BINDING",
						"vds": [
							{
								"portgroups": [
									{
										"type": "VSAN",
										"vlan_id": 0
									},
									{
										"type": "VMOTION",
										"vlan_id": 0
									},
									{
										"type": "MANAGEMENT",
										"vlan_id": 0
									},
									{
										"type": "CUSTOMERVM",
										"name": "VMNet1-201",
										"vlan_id": 0
									},
									{
										"type": "CUSTOMERVM",
										"name": "VMNet2-201",
										"vlan_id": 0
									}
								]
							}
						]
					}
				}
			},
			"SystemInitializationCustomerSuppliedHostsDualstack": {
				"value": {
					"version": "8.0.000",
					"global": {
						"ip_version": "DUALSTACK",
						"ntp_servers": [
							"2001:db8:1ab:16:202",
							"20.10.100.7"
						],
						"is_internal_dns": false,
						"dns_servers": [
							"2001:db8:1ab:16:202",
							"20.10.100.7"
						],
						"syslog_servers": [],
						"top_level_domain": "rackE10.local",
						"cluster_vsan_prefix_length_ipv6": 80,
						"cluster_vmotion_prefix_length_ipv6": 80,
						"cluster_management_prefix_length_ipv6": 80,
						"cluster_management_gateway_ipv6": "2001:db8:1ab:16:202",
						"cluster_management_netmask": "255.255.255.0",
						"cluster_management_gateway": "20.13.6.1",
						"cluster_type": "STANDARD"
					},
					"hosts": [
						{
							"customer_supplied": {
								"current_root_password": "Passw0rd!",
								"management_ip": "2001:db8:1ab:16:101"
							},
							"hostname": "c3-esx01",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "management",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "20.13.6.101",
									"ipv6": "2001:db8:1ab:16:101"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:16:101"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:16:101"
								}
							],
							"geo_location": {
								"rack_name": "e10-c3",
								"position": 1
							}
						},
						{
							"customer_supplied": {
								"current_root_password": "Passw0rd!",
								"management_ip": "2001:db8:1ab:16:102"
							},
							"hostname": "c3-esx02",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "management",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "20.13.6.102",
									"ipv6": "2001:db8:1ab:16:102"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:16:102"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:16:102"
								}
							],
							"geo_location": {
								"rack_name": "e10-c3",
								"position": 2
							}
						},
						{
							"customer_supplied": {
								"current_root_password": "Passw0rd!",
								"management_ip": "2001:db8:1ab:16:103"
							},
							"hostname": "c3-esx03",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "management",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "20.13.6.103",
									"ipv6": "2001:db8:1ab:16:103"
								},
								{
									"type": "VSAN",
									"ipv6": "2001:db8:1ab:16:103"
								},
								{
									"type": "VMOTION",
									"ipv6": "2001:db8:1ab:16:103"
								}
							],
							"geo_location": {
								"rack_name": "e10-c3",
								"position": 3
							}
						}
					],
					"vcenter": {
						"customer_supplied": true,
						"auto_accept_vc_cert": true,
						"customer_supplied_vc_name": "vcsa.vvlarge.local",
						"datacenter_name": "VxRail-Datacenter",
						"cluster_name": "VxRail-Cluster",
						"accounts": {
							"administrator": {
								"username": "administrator@vsphere.local",
								"password": "password"
							},
							"management": {
								"username": "management",
								"password": "password"
							}
						}
					},
					"vxrail_manager": {
						"name": "c3-vxm",
						"ip": "20.13.6.200",
						"ipv6": "2001:db8:1ab:16:200",
						"accounts": {
							"root": {
								"username": "root",
								"password": "password"
							},
							"support": {
								"username": "support",
								"password": "password"
							},
							"service": {
								"username": "service",
								"password": "password"
							}
						}
					},
					"network": {
						"nic_profile": "TWO_HIGH_SPEED",
						"systemvm_portgroup_binding_type": "STATIC_BINDING",
						"management_portgroup_binding_type": "EPHEMERAL",
						"vds": [
							{
								"portgroups": [
									{
										"type": "VXRAILDISCOVERY",
										"vlan_id": 0
									},
									{
										"type": "MANAGEMENT",
										"vlan_id": 0
									},
									{
										"type": "VSAN",
										"vlan_id": 0
									},
									{
										"type": "VMOTION",
										"vlan_id": 0
									}
								]
							}
						]
					}
				}
			},
			"SystemInitializationVsan2NodeWithVxRailManagedWitness": {
				"value": {
					"version": "7.0.420",
					"global": {
						"ntp_servers": [
							"10.0.0.1",
							"10.0.0.2"
						],
						"is_internal_dns": false,
						"dns_servers": [
							"172.23.1.167"
						],
						"syslog_servers": [
							"172.23.1.189"
						],
						"top_level_domain": "vvlarge.local",
						"cluster_type": "VSAN2NODE",
						"cluster_management_netmask": "255.255.0.0",
						"cluster_management_gateway": "172.23.1.167",
						"cluster_vsan_netmask": "255.255.0.0",
						"cluster_vmotion_netmask": "255.255.0.0",
						"cluster_witness_netmask": "255.255.255.0",
						"cluster_witness_gateway": "172.16.2.167"
					},
					"hosts": [
						{
							"host_psnt": "V0817010000000",
							"hostname": "vcluster817-esx01",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "172.23.26.101"
								},
								{
									"type": "VSAN",
									"ip": "172.23.26.136"
								},
								{
									"type": "VMOTION",
									"ip": "172.23.26.211"
								},
								{
									"type": "Witness",
									"ip": "172.23.26.221"
								}
							],
							"geo_location": {
								"rack-name": "",
								"position": 1
							}
						},
						{
							"host_psnt": "V0817020000000",
							"hostname": "vcluster817-esx02",
							"accounts": {
								"root": {
									"username": "root",
									"password": "password"
								},
								"management": {
									"username": "mystic",
									"password": "password"
								}
							},
							"network": [
								{
									"type": "MANAGEMENT",
									"ip": "172.23.26.102"
								},
								{
									"type": "VSAN",
									"ip": "172.23.26.137"
								},
								{
									"type": "vmotion",
									"ip": "172.23.26.212"
								},
								{
									"type": "Witness",
									"ip": "172.23.26.222"
								}
							],
							"geo_location": {
								"rack_name": "",
								"position": 2
							}
						}
					],
					"vcenter": {
						"customer_supplied": true,
						"customer_supplied_vc_name": "vcsa.vvlarge.local",
						"datacenter_name": "VxRail-Datacenter",
						"cluster_name": "VxRail-Cluster",
						"accounts": {
							"administrator": {
								"username": "administrator@vsphere.local"
							},
							"management": {
								"username": ""
							}
						},
						"auto_accept_vc_cert": true
					},
					"vxrail_manager": {
						"name": "vcluster817-vxm",
						"ip": "172.23.26.200",
						"accounts": {
							"root": {
								"username": "root"
							},
							"service": {
								"username": "mystic"
							},
							"support": {
								"username": "service"
							}
						}
					},
					"vxrail_managed_witness_node": {
						"witness_vm": {
							"management_ip": "172.23.26.104",
							"witness_ip": "172.23.27.102",
							"netmask": "255.255.255.0",
							"username": "root",
							"password": "witness123!"
						},
						"witness_sled": {
							"host_psnt": "V010108000000",
							"hostname": "witness101-esx04",
							"management_ip": "172.23.26.105",
							"accounts": {
								"managment": {
									"username": "management",
									"password": "password"
								},
								"root": {
									"username": "root",
									"password": "password"
								}
							}
						}
					},
					"network": {
						"nic_profile": "FOUR_HIGH_SPEED",
						"systemvm_portgroup_binding_type": "STATIC_BINDING",
						"management_portgroup_binding_type": "STATIC_BINDING",
						"vds": [
							{
								"mtu": 9000,
								"portgroups": [
									{
										"type": "VSAN",
										"vlan_id": 0,
										"vmk_mtu": 9000
									},
									{
										"type": "MANAGEMENT",
										"vlan_id": 0,
										"vmk_mtu": 1500
									},
									{
										"type": "VMOTION",
										"vlan_id": 0,
										"vmk_mtu": 9000
									},
									{
										"type": "WITNESS",
										"vlan_id": 0,
										"vmk_mtu": 9000
									},
									{
										"type": "VXRAILDISCOVERY",
										"vlan_id": 3939,
										"vmk_mtu": 1500
									},
									{
										"type": "VXRAILSYSTEMVM",
										"vlan_id": 3939,
										"vmk_mtu": 1500
									}
								]
							}
						]
					}
				}
			},
			"HostDiskSlotMappingReqSamples": {
				"value": {
					"hosts": [
						{
							"host_serial_number": "serial_number_01",
							"diskgroup_type": "1001"
						},
						{
							"customer_supplied": {
								"management_ip": "10.20.201.11",
								"current_root_password": "Password",
								"diskgroup_type": "1001"
							}
						}
					]
				}
			},
			"HostDiskSlotMappingReqSamplesV6": {
				"value": {
					"hosts": [
						{
							"host_serial_number": "serial_number_01",
							"diskgroup_type": "1001"
						},
						{
							"customer_supplied": {
								"management_ip": "2001:db8:1ab:16::101",
								"current_root_password": "Password",
								"diskgroup_type": "1001"
							}
						}
					]
				}
			},
			"HostDiskSlotMappings": {
				"value": [
					{
						"host": "serical_number_01",
						"all_slots": [
							{
								"bay00": {
									"slots": [
										1,
										2,
										3,
										4,
										5
									]
								}
							},
							{
								"bay01": {
									"slots": [
										1,
										2,
										3,
										4,
										5
									]
								}
							}
						],
						"vsan_slots": {
							"capacity": [
								{
									"bay00": {
										"slots": [
											{
												"slot": 1,
												"diskgroup": 1
											},
											{
												"slot": 2,
												"diskgroup": 2
											}
										]
									}
								},
								{
									"bay01": {
										"slots": [
											{
												"slot": 1,
												"diskgroup": 1
											},
											{
												"slot": 2,
												"diskgroup": 2
											}
										]
									}
								}
							],
							"cache": [
								{
									"bay00": {
										"slots": [
											3
										]
									}
								}
							]
						},
						"non_vsan_slots": [
							{
								"bay00": {
									"slots": [
										4
									]
								}
							},
							{
								"bay01": {
									"slots": [
										3,
										4
									]
								}
							}
						],
						"unmanaged_slots": [
							{
								"bay00": {
									"slots": [
										5
									]
								}
							},
							{
								"bay01": {
									"slots": [
										5
									]
								}
							}
						],
						"diskgroup_type": "1001"
					},
					{
						"host": "serical_number_02",
						"all_slots": [
							{
								"bay00": {
									"slots": [
										1,
										2,
										3,
										4,
										5,
										6,
										7,
										8
									]
								}
							},
							{
								"bay01": {
									"slots": [
										1,
										2,
										3,
										4,
										5,
										6,
										7,
										8
									]
								}
							}
						],
						"vsan_slots": {
							"capacity": [
								{
									"bay00": {
										"slots": [
											1,
											2
										]
									}
								},
								{
									"bay01": {
										"slots": [
											1,
											2
										]
									}
								}
							],
							"cache": [
								{
									"bay00": {
										"slots": [
											4,
											8
										]
									}
								},
								{
									"bay01": {
										"slots": [
											5,
											6
										]
									}
								}
							]
						},
						"unmanaged_slots": [
							{
								"bay00": {
									"slots": [
										3,
										5,
										6,
										7
									]
								}
							},
							{
								"bay01": {
									"slots": [
										3,
										4,
										7,
										8
									]
								}
							}
						],
						"diskgroup_type": "1001"
					}
				]
			},
			"HostDiskSlotMappingswitherror": {
				"value": [
					{
						"host": "serical_number_01",
						"all_slots": [
							{
								"bay00": {
									"slots": [
										1,
										2,
										3,
										4,
										5
									]
								}
							},
							{
								"bay01": {
									"slots": [
										1,
										2,
										3,
										4,
										5
									]
								}
							}
						],
						"vsan_slots": {
							"capacity": [
								{
									"bay00": {
										"slots": [
											{
												"slot": 1,
												"diskgroup": 1
											},
											{
												"slot": 2,
												"diskgroup": 2
											}
										]
									}
								},
								{
									"bay01": {
										"slots": [
											{
												"slot": 1,
												"diskgroup": 1
											},
											{
												"slot": 2,
												"diskgroup": 2
											}
										]
									}
								}
							],
							"cache": [
								{
									"bay00": {
										"slots": [
											3
										]
									}
								}
							]
						},
						"non_vsan_slots": [
							{
								"bay00": {
									"slots": [
										4
									]
								}
							},
							{
								"bay01": {
									"slots": [
										3,
										4
									]
								}
							}
						],
						"unmanaged_slots": [
							{
								"bay00": {
									"slots": [
										5
									]
								}
							},
							{
								"bay01": {
									"slots": [
										5
									]
								}
							}
						],
						"diskgroup_type": "1001"
					},
					{
						"host": "serical_number_02",
						"error": "Host(serical_number_03) can not find the matched disk group type 1001. Please help to check the disk group type passed in."
					},
					{
						"host": "serical_number_03",
						"error": "Failed to connect to host: serical_number_04, please check if password or ip or SN is correct."
					}
				]
			},
			"NodesInfo": {
				"value": [
					{
						"esxi_version": "7.0.1-16850804",
						"vxm_system_version": "7.0.200-26924297",
						"evo_uuid": "564dd4b8-e64f-0148-1126-4af44484e134",
						"primary_ip": "",
						"fallback_ip": "",
						"idrac_ip": "20.11.216.13",
						"ip": "20.11.216.15",
						"asset_tag": "4VSLJ23-01-01",
						"serial_number": "4VSLJ23",
						"primary": true,
						"model": "VxRail D560F",
						"id": {
							"appliance_id": "4VSLJ230000000",
							"position": 1,
							"total_supported_nodes": 1
						},
						"uuid": {
							"host": "4c4c4544-0056-5310-804c-b4c04f4a3233"
						},
						"ssl_thumbprint": "EA:F4:32:B0:54:41:35:71:C5:3B:E6:05:E3:D8:A2:2B:7E:43:D8:70",
						"ssh_thumbprint": "bVb1***U/X8",
						"configuration_state": "UNCONFIGURED",
						"disk_group_config": {
							"recommendation": {
								"type": 1002,
								"description": "2 Drive Groups(4 capacity drives and 1 cache drive per group)"
							},
							"options": [
								{
									"type": 1001,
									"description": "1 Drive Group(7 capacity drives and 1 cache drive)"
								},
								{
									"type": 1002,
									"description": "2 Drive Groups(4 capacity drives and 1 cache drive per group)"
								}
							]
						},
						"hardware_profile": {
							"nics": [
								{
									"name": "vmnic0",
									"speed": 1000,
									"port_info": "Slot: 1, Port: 1",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								},
								{
									"name": "vmnic1",
									"speed": 1000,
									"port_info": "Slot: 1, Port: 2",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								},
								{
									"name": "vmnic2",
									"speed": 10000,
									"port_info": "Slot: 1, Port: 3",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								},
								{
									"name": "vmnic3",
									"speed": 10000,
									"port_info": "Slot: 1, Port: 4",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								}
							],
							"disks": [
								{
									"ssd": true,
									"blocks": 1562824368,
									"block_size": 512
								},
								{
									"ssd": true,
									"blocks": 3750748848,
									"block_size": 512
								},
								{
									"ssd": true,
									"blocks": 3750748848,
									"block_size": 512
								},
								{
									"ssd": true,
									"blocks": 3750748848,
									"block_size": 512
								}
							],
							"cpu": {
								"cores": 22,
								"speed": 2095
							},
							"memory": {
								"size": 261758
							}
						}
					},
					{
						"esxi_version": "7.0.1-16850804",
						"vxm_system_version": "7.0.200-26924297",
						"evo_uuid": "564dd4b8-e64f-0148-1126-4af44484e135",
						"primary_ip": "",
						"fallback_ip": "",
						"idrac_ip": "20.11.216.47",
						"ip": "20.11.216.23",
						"asset_tag": "BNHHJ23-01-01",
						"serial_number": "BNHHJ23",
						"primary": false,
						"model": "VxRail D560F",
						"id": {
							"appliance_id": "BNHHJ230000000",
							"position": 1,
							"total_supported_nodes": 1
						},
						"uuid": {
							"host": "4c4c4544-004e-4810-8048-c2c04f4a3233"
						},
						"ssl_thumbprint": "9D:55:62:AC:E6:09:2F:A1:88:C0:85:59:20:BF:D5:41:EB:63:5A:4A",
						"ssh_thumbprint": "bVb1***U/X8",
						"configuration_state": "UNCONFIGURED",
						"disk_group_config": {
							"recommendation": {
								"type": 1002,
								"description": "2 Drive Groups(4 capacity drives and 1 cache drive per group)"
							},
							"options": [
								{
									"type": 1001,
									"description": "1 Drive Group(7 capacity drives and 1 cache drive)"
								},
								{
									"type": 1002,
									"description": "2 Drive Groups(4 capacity drives and 1 cache drive per group)"
								}
							]
						},
						"hardware_profile": {
							"nics": [
								{
									"name": "vmnic0",
									"speed": 1000,
									"port_info": "Slot: 1, Port: 1",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								},
								{
									"name": "vmnic1",
									"speed": 1000,
									"port_info": "Slot: 1, Port: 2",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								},
								{
									"name": "vmnic2",
									"speed": 10000,
									"port_info": "Slot: 1, Port: 3",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								},
								{
									"name": "vmnic3",
									"speed": 10000,
									"port_info": "Slot: 1, Port: 4",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								}
							],
							"disks": [
								{
									"ssd": true,
									"blocks": 1562824368,
									"block_size": 512
								},
								{
									"ssd": true,
									"blocks": 3750748848,
									"block_size": 512
								},
								{
									"ssd": true,
									"blocks": 3750748848,
									"block_size": 512
								},
								{
									"ssd": true,
									"blocks": 3750748848,
									"block_size": 512
								}
							],
							"cpu": {
								"cores": 22,
								"speed": 2095
							},
							"memory": {
								"size": 261758
							}
						}
					},
					{
						"esxi_version": "7.0.1-16850804",
						"vxm_system_version": "7.0.200-26924297",
						"evo_uuid": "564dd4b8-e64f-0148-1126-4af44484e136",
						"primary_ip": "",
						"fallback_ip": "",
						"idrac_ip": "20.11.216.44",
						"ip": "20.11.216.48",
						"asset_tag": "BNGMJ23-01-01",
						"serial_number": "BNGMJ23",
						"primary": false,
						"model": "VxRail D560F",
						"id": {
							"appliance_id": "BNGMJ230000000",
							"position": 1,
							"total_supported_nodes": 1
						},
						"uuid": {
							"host": "4c4c4544-004e-4710-804d-c2c04f4a3233"
						},
						"ssl_thumbprint": "DD:1A:59:53:64:A1:83:CF:F8:9F:EF:43:F0:6E:C7:90:19:69:F3:A1",
						"ssh_thumbprint": "bVb1***U/X8",
						"configuration_state": "UNCONFIGURED",
						"disk_group_config": {
							"recommendation": {
								"type": 1002,
								"description": "2 Drive Groups(4 capacity drives and 1 cache drive per group)"
							},
							"options": [
								{
									"type": 1001,
									"description": "1 Drive Group(7 capacity drives and 1 cache drive)"
								},
								{
									"type": 1002,
									"description": "2 Drive Groups(4 capacity drives and 1 cache drive per group)"
								}
							]
						},
						"hardware_profile": {
							"nics": [
								{
									"name": "vmnic0",
									"speed": 1000,
									"port_info": "Slot: 1, Port: 1",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								},
								{
									"name": "vmnic1",
									"speed": 1000,
									"port_info": "Slot: 1, Port: 2",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								},
								{
									"name": "vmnic2",
									"speed": 10000,
									"port_info": "Slot: 1, Port: 3",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								},
								{
									"name": "vmnic3",
									"speed": 10000,
									"port_info": "Slot: 1, Port: 4",
									"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
								}
							],
							"disks": [
								{
									"ssd": true,
									"blocks": 1562824368,
									"block_size": 512
								},
								{
									"ssd": true,
									"blocks": 3750748848,
									"block_size": 512
								},
								{
									"ssd": true,
									"blocks": 3750748848,
									"block_size": 512
								},
								{
									"ssd": true,
									"blocks": 3750748848,
									"block_size": 512
								}
							],
							"cpu": {
								"cores": 22,
								"speed": 2095
							},
							"memory": {
								"size": 261758
							}
						}
					}
				]
			},
			"DiscoveredNodesInfoExample2": {
				"value": {
					"version": "2.0",
					"nodes": [
						{
							"esxi_version": "7.0.1-16850804",
							"vxm_system_version": "7.0.200-26924297",
							"evo_uuid": "564dd4b8-e64f-0148-1126-4af44484e134",
							"primary_ip": "",
							"idrac_ip": "20.11.216.11",
							"idrac_ipv6": "",
							"ip": "20.11.216.15",
							"ipv6": "",
							"asset_tag": "4VSLJ23-01-01",
							"serial_number": "4VSLJ23",
							"primary": true,
							"model": "VxRail D560F",
							"id": {
								"appliance_id": "4VSLJ230000000",
								"position": 1,
								"total_supported_nodes": 1
							},
							"uuid": {
								"host": "4c4c4544-0056-5310-804c-b4c04f4a3233"
							},
							"ssl_thumbprint": "EA:F4:32:B0:54:41:35:71:C5:3B:E6:05:E3:D8:A2:2B:7E:43:D8:70",
							"ssh_thumbprint": "bVb1***U/X8",
							"configuration_state": "UNCONFIGURED",
							"storage_types": [
								"LOCAL"
							],
							"hardware_profile": {
								"nics": [
									{
										"name": "vmnic0",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 1",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic1",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 2",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic2",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 3",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic3",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 4",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									}
								],
								"disks": [
									{
										"ssd": true,
										"blocks": 1562824368,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									}
								],
								"cpu": {
									"cores": 22,
									"speed": 2095
								},
								"memory": {
									"size": 261758
								}
							}
						},
						{
							"esxi_version": "7.0.1-16850804",
							"vxm_system_version": "7.0.200-26924297",
							"evo_uuid": "564dd4b8-e64f-0148-1126-4af44484e135",
							"idrac_ip": "20.11.216.15",
							"idrac_ipv6": "",
							"ip": "20.11.216.15",
							"ipv6": "",
							"asset_tag": "BNHHJ23-01-01",
							"serial_number": "BNHHJ23",
							"primary": false,
							"model": "VxRail D560F",
							"id": {
								"appliance_id": "BNHHJ230000000",
								"position": 1,
								"total_supported_nodes": 1
							},
							"uuid": {
								"host": "4c4c4544-004e-4810-8048-c2c04f4a3233"
							},
							"ssl_thumbprint": "9D:55:62:AC:E6:09:2F:A1:88:C0:85:59:20:BF:D5:41:EB:63:5A:4A",
							"ssh_thumbprint": "bVb1***U/X8",
							"configuration_state": "UNCONFIGURED",
							"storage_types": [
								"LOCAL"
							],
							"hardware_profile": {
								"nics": [
									{
										"name": "vmnic0",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 1",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic1",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 2",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic2",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 3",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic3",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 4",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									}
								],
								"disks": [
									{
										"ssd": true,
										"blocks": 1562824368,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									}
								],
								"cpu": {
									"cores": 22,
									"speed": 2095
								},
								"memory": {
									"size": 261758
								}
							}
						},
						{
							"esxi_version": "7.0.1-16850804",
							"vxm_system_version": "7.0.200-26924297",
							"evo_uuid": "564dd4b8-e64f-0148-1126-4af44484e136",
							"idrac_ip": "20.11.216.9",
							"idrac_ipv6": "",
							"ip": "20.11.216.15",
							"ipv6": "",
							"asset_tag": "BNGMJ23-01-01",
							"serial_number": "BNGMJ23",
							"primary": false,
							"model": "VxRail D560F",
							"id": {
								"appliance_id": "BNGMJ230000000",
								"position": 1,
								"total_supported_nodes": 1
							},
							"uuid": {
								"host": "4c4c4544-004e-4710-804d-c2c04f4a3233"
							},
							"ssl_thumbprint": "DD:1A:59:53:64:A1:83:CF:F8:9F:EF:43:F0:6E:C7:90:19:69:F3:A1",
							"ssh_thumbprint": "bVb1***U/X8",
							"configuration_state": "UNCONFIGURED",
							"storage_types": [
								"LOCAL"
							],
							"hardware_profile": {
								"nics": [
									{
										"name": "vmnic0",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 1",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic1",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 2",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic2",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 3",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic3",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 4",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									}
								],
								"disks": [
									{
										"ssd": true,
										"blocks": 1562824368,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									}
								],
								"cpu": {
									"cores": 22,
									"speed": 2095
								},
								"memory": {
									"size": 261758
								}
							}
						}
					]
				}
			},
			"DiscoveredNodesInfoExample3": {
				"value": {
					"version": "2.0",
					"nodes": [
						{
							"esxi_version": "7.0.1-16850804",
							"vxm_system_version": "7.0.200-26924297",
							"evo_uuid": "564dd4b8-e64f-0148-1126-4af44484e134",
							"primary_ip": "",
							"idrac_ip": "",
							"idrac_ipv6": "2001:db8:1ab:16::15",
							"ip": "",
							"ipv6": "2001:db8:1ab:16::101",
							"asset_tag": "4VSLJ23-01-01",
							"serial_number": "4VSLJ23",
							"primary": true,
							"model": "VxRail D560F",
							"id": {
								"appliance_id": "4VSLJ230000000",
								"position": 1,
								"total_supported_nodes": 1
							},
							"uuid": {
								"host": "4c4c4544-0056-5310-804c-b4c04f4a3233"
							},
							"ssl_thumbprint": "EA:F4:32:B0:54:41:35:71:C5:3B:E6:05:E3:D8:A2:2B:7E:43:D8:70",
							"ssh_thumbprint": "bVb1***U/X8",
							"configuration_state": "UNCONFIGURED",
							"storage_types": [
								"LOCAL"
							],
							"hardware_profile": {
								"nics": [
									{
										"name": "vmnic0",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 1",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic1",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 2",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic2",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 3",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic3",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 4",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									}
								],
								"disks": [
									{
										"ssd": true,
										"blocks": 1562824368,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									}
								],
								"cpu": {
									"cores": 22,
									"speed": 2095
								},
								"memory": {
									"size": 261758
								}
							}
						},
						{
							"esxi_version": "7.0.1-16850804",
							"vxm_system_version": "7.0.200-26924297",
							"evo_uuid": "564dd4b8-e64f-0148-1126-4af44484e135",
							"idrac_ip": "",
							"idrac_ipv6": "2001:db8:1ab:16::16",
							"ip": "20.11.216.15",
							"ipv6": "2001:db8:1ab:16::102",
							"asset_tag": "BNHHJ23-01-01",
							"serial_number": "BNHHJ23",
							"primary": false,
							"model": "VxRail D560F",
							"id": {
								"appliance_id": "BNHHJ230000000",
								"position": 1,
								"total_supported_nodes": 1
							},
							"uuid": {
								"host": "4c4c4544-004e-4810-8048-c2c04f4a3233"
							},
							"ssl_thumbprint": "9D:55:62:AC:E6:09:2F:A1:88:C0:85:59:20:BF:D5:41:EB:63:5A:4A",
							"ssh_thumbprint": "bVb1***U/X8",
							"configuration_state": "UNCONFIGURED",
							"storage_types": [
								"LOCAL"
							],
							"hardware_profile": {
								"nics": [
									{
										"name": "vmnic0",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 1",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic1",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 2",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic2",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 3",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic3",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 4",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									}
								],
								"disks": [
									{
										"ssd": true,
										"blocks": 1562824368,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									}
								],
								"cpu": {
									"cores": 22,
									"speed": 2095
								},
								"memory": {
									"size": 261758
								}
							}
						},
						{
							"esxi_version": "7.0.1-16850804",
							"vxm_system_version": "7.0.200-26924297",
							"evo_uuid": "564dd4b8-e64f-0148-1126-4af44484e136",
							"idrac_ip": "",
							"idrac_ipv6": "2001:db8:1ab:16::17",
							"ip": "20.11.216.15",
							"ipv6": "2001:db8:1ab:16::103",
							"asset_tag": "BNGMJ23-01-01",
							"serial_number": "BNGMJ23",
							"primary": false,
							"model": "VxRail D560F",
							"id": {
								"appliance_id": "BNGMJ230000000",
								"position": 1,
								"total_supported_nodes": 1
							},
							"uuid": {
								"host": "4c4c4544-004e-4710-804d-c2c04f4a3233"
							},
							"ssl_thumbprint": "DD:1A:59:53:64:A1:83:CF:F8:9F:EF:43:F0:6E:C7:90:19:69:F3:A1",
							"ssh_thumbprint": "bVb1***U/X8",
							"configuration_state": "UNCONFIGURED",
							"storage_types": [
								"LOCAL"
							],
							"hardware_profile": {
								"nics": [
									{
										"name": "vmnic0",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 1",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic1",
										"speed": 1000,
										"port_info": "Slot: 1, Port: 2",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic2",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 3",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									},
									{
										"name": "vmnic3",
										"speed": 10000,
										"port_info": "Slot: 1, Port: 4",
										"product_name": "Intel(R) Ethernet 10G 4P X550 rNDC"
									}
								],
								"disks": [
									{
										"ssd": true,
										"blocks": 1562824368,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									},
									{
										"ssd": true,
										"blocks": 3750748848,
										"block_size": 512
									}
								],
								"cpu": {
									"cores": 22,
									"speed": 2095
								},
								"memory": {
									"size": 261758
								}
							}
						}
					]
				}
			},
			"Day1CompletedErrorExample": {
				"value": {
					"error_code": 20101003,
					"message": "VxRail Cluster has been built, see the VxRail Manager public API doc for Day 2 operations."
				}
			},
			"VlcmBadPackageExample": {
				"value": {
					"error_code": 20101007,
					"message": "No entry was found for vLCM or software-spec.json. Check the structure of the upgrade bundle."
				}
			}
		},
		"securitySchemes": {
			"basicAuth": {
				"type": "http",
				"scheme": "basic"
			}
		}
	}
}