# coding: utf-8

"""
    Unified Access Gateway REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.2
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class RadiusAuthMethodSettings(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "numAttempts",
            "hostName",
            "realmSuffix",
            "enableBasicMSCHAPv2Validation_1",
            "enableBasicMSCHAPv2Validation_2",
            "enabled",
            "serverTimeout",
            "showDomainIfUserInputAvailable",
            "accountingPort_2",
            "numIterations",
            "radiusCustomPassphraseHint",
            "authPort",
            "numAttempts_2",
            "authType",
            "enabledAux",
            "sharedSecret",
            "sharedSecret_2",
            "nameIdSuffix",
            "directAuthChainedUsername",
            "hostName_2",
            "authType_2",
            "radiusDisplayHint",
            "serverTimeout_2",
            "accountingPort",
            "realmPrefix_2",
            "name",
            "authPort_2",
            "realmPrefix",
            "realmSuffix_2",
        }
        
        class properties:
            name = schemas.StrSchema
            enabled = schemas.BoolSchema
            numIterations = schemas.StrSchema
            radiusDisplayHint = schemas.StrSchema
            radiusCustomPassphraseHint = schemas.StrSchema
            directAuthChainedUsername = schemas.BoolSchema
            numAttempts = schemas.StrSchema
            serverTimeout = schemas.StrSchema
            hostName = schemas.StrSchema
            authPort = schemas.StrSchema
            accountingPort = schemas.StrSchema
            
            
            class authType(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def PAP(cls):
                    return cls("PAP")
                
                @schemas.classproperty
                def CHAP(cls):
                    return cls("CHAP")
                
                @schemas.classproperty
                def MSCHAP1(cls):
                    return cls("MSCHAP1")
                
                @schemas.classproperty
                def MSCHAP2(cls):
                    return cls("MSCHAP2")
            sharedSecret = schemas.StrSchema
            realmPrefix = schemas.StrSchema
            realmSuffix = schemas.StrSchema
            enableBasicMSCHAPv2Validation_1 = schemas.BoolSchema
            enabledAux = schemas.BoolSchema
            numAttempts_2 = schemas.StrSchema
            serverTimeout_2 = schemas.StrSchema
            hostName_2 = schemas.StrSchema
            authPort_2 = schemas.StrSchema
            accountingPort_2 = schemas.StrSchema
            
            
            class authType_2(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def PAP(cls):
                    return cls("PAP")
                
                @schemas.classproperty
                def CHAP(cls):
                    return cls("CHAP")
                
                @schemas.classproperty
                def MSCHAP1(cls):
                    return cls("MSCHAP1")
                
                @schemas.classproperty
                def MSCHAP2(cls):
                    return cls("MSCHAP2")
            sharedSecret_2 = schemas.StrSchema
            nameIdSuffix = schemas.DictSchema
            realmPrefix_2 = schemas.StrSchema
            realmSuffix_2 = schemas.StrSchema
            enableBasicMSCHAPv2Validation_2 = schemas.BoolSchema
            showDomainIfUserInputAvailable = schemas.BoolSchema
            className = schemas.StrSchema
            displayName = schemas.StrSchema
            jarFile = schemas.StrSchema
            authMethod = schemas.StrSchema
            versionNum = schemas.StrSchema
            __annotations__ = {
                "name": name,
                "enabled": enabled,
                "numIterations": numIterations,
                "radiusDisplayHint": radiusDisplayHint,
                "radiusCustomPassphraseHint": radiusCustomPassphraseHint,
                "directAuthChainedUsername": directAuthChainedUsername,
                "numAttempts": numAttempts,
                "serverTimeout": serverTimeout,
                "hostName": hostName,
                "authPort": authPort,
                "accountingPort": accountingPort,
                "authType": authType,
                "sharedSecret": sharedSecret,
                "realmPrefix": realmPrefix,
                "realmSuffix": realmSuffix,
                "enableBasicMSCHAPv2Validation_1": enableBasicMSCHAPv2Validation_1,
                "enabledAux": enabledAux,
                "numAttempts_2": numAttempts_2,
                "serverTimeout_2": serverTimeout_2,
                "hostName_2": hostName_2,
                "authPort_2": authPort_2,
                "accountingPort_2": accountingPort_2,
                "authType_2": authType_2,
                "sharedSecret_2": sharedSecret_2,
                "nameIdSuffix": nameIdSuffix,
                "realmPrefix_2": realmPrefix_2,
                "realmSuffix_2": realmSuffix_2,
                "enableBasicMSCHAPv2Validation_2": enableBasicMSCHAPv2Validation_2,
                "showDomainIfUserInputAvailable": showDomainIfUserInputAvailable,
                "className": className,
                "displayName": displayName,
                "jarFile": jarFile,
                "authMethod": authMethod,
                "versionNum": versionNum,
            }
    
    numAttempts: MetaOapg.properties.numAttempts
    hostName: MetaOapg.properties.hostName
    realmSuffix: MetaOapg.properties.realmSuffix
    enableBasicMSCHAPv2Validation_1: MetaOapg.properties.enableBasicMSCHAPv2Validation_1
    enableBasicMSCHAPv2Validation_2: MetaOapg.properties.enableBasicMSCHAPv2Validation_2
    enabled: MetaOapg.properties.enabled
    serverTimeout: MetaOapg.properties.serverTimeout
    showDomainIfUserInputAvailable: MetaOapg.properties.showDomainIfUserInputAvailable
    accountingPort_2: MetaOapg.properties.accountingPort_2
    numIterations: MetaOapg.properties.numIterations
    radiusCustomPassphraseHint: MetaOapg.properties.radiusCustomPassphraseHint
    authPort: MetaOapg.properties.authPort
    numAttempts_2: MetaOapg.properties.numAttempts_2
    authType: MetaOapg.properties.authType
    enabledAux: MetaOapg.properties.enabledAux
    sharedSecret: MetaOapg.properties.sharedSecret
    sharedSecret_2: MetaOapg.properties.sharedSecret_2
    nameIdSuffix: MetaOapg.properties.nameIdSuffix
    directAuthChainedUsername: MetaOapg.properties.directAuthChainedUsername
    hostName_2: MetaOapg.properties.hostName_2
    authType_2: MetaOapg.properties.authType_2
    radiusDisplayHint: MetaOapg.properties.radiusDisplayHint
    serverTimeout_2: MetaOapg.properties.serverTimeout_2
    accountingPort: MetaOapg.properties.accountingPort
    realmPrefix_2: MetaOapg.properties.realmPrefix_2
    name: MetaOapg.properties.name
    authPort_2: MetaOapg.properties.authPort_2
    realmPrefix: MetaOapg.properties.realmPrefix
    realmSuffix_2: MetaOapg.properties.realmSuffix_2
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enabled"]) -> MetaOapg.properties.enabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["numIterations"]) -> MetaOapg.properties.numIterations: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["radiusDisplayHint"]) -> MetaOapg.properties.radiusDisplayHint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["radiusCustomPassphraseHint"]) -> MetaOapg.properties.radiusCustomPassphraseHint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["directAuthChainedUsername"]) -> MetaOapg.properties.directAuthChainedUsername: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["numAttempts"]) -> MetaOapg.properties.numAttempts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["serverTimeout"]) -> MetaOapg.properties.serverTimeout: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hostName"]) -> MetaOapg.properties.hostName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authPort"]) -> MetaOapg.properties.authPort: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accountingPort"]) -> MetaOapg.properties.accountingPort: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authType"]) -> MetaOapg.properties.authType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sharedSecret"]) -> MetaOapg.properties.sharedSecret: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["realmPrefix"]) -> MetaOapg.properties.realmPrefix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["realmSuffix"]) -> MetaOapg.properties.realmSuffix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enableBasicMSCHAPv2Validation_1"]) -> MetaOapg.properties.enableBasicMSCHAPv2Validation_1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enabledAux"]) -> MetaOapg.properties.enabledAux: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["numAttempts_2"]) -> MetaOapg.properties.numAttempts_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["serverTimeout_2"]) -> MetaOapg.properties.serverTimeout_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hostName_2"]) -> MetaOapg.properties.hostName_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authPort_2"]) -> MetaOapg.properties.authPort_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accountingPort_2"]) -> MetaOapg.properties.accountingPort_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authType_2"]) -> MetaOapg.properties.authType_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sharedSecret_2"]) -> MetaOapg.properties.sharedSecret_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nameIdSuffix"]) -> MetaOapg.properties.nameIdSuffix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["realmPrefix_2"]) -> MetaOapg.properties.realmPrefix_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["realmSuffix_2"]) -> MetaOapg.properties.realmSuffix_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enableBasicMSCHAPv2Validation_2"]) -> MetaOapg.properties.enableBasicMSCHAPv2Validation_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["showDomainIfUserInputAvailable"]) -> MetaOapg.properties.showDomainIfUserInputAvailable: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["className"]) -> MetaOapg.properties.className: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayName"]) -> MetaOapg.properties.displayName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jarFile"]) -> MetaOapg.properties.jarFile: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authMethod"]) -> MetaOapg.properties.authMethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["versionNum"]) -> MetaOapg.properties.versionNum: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "enabled", "numIterations", "radiusDisplayHint", "radiusCustomPassphraseHint", "directAuthChainedUsername", "numAttempts", "serverTimeout", "hostName", "authPort", "accountingPort", "authType", "sharedSecret", "realmPrefix", "realmSuffix", "enableBasicMSCHAPv2Validation_1", "enabledAux", "numAttempts_2", "serverTimeout_2", "hostName_2", "authPort_2", "accountingPort_2", "authType_2", "sharedSecret_2", "nameIdSuffix", "realmPrefix_2", "realmSuffix_2", "enableBasicMSCHAPv2Validation_2", "showDomainIfUserInputAvailable", "className", "displayName", "jarFile", "authMethod", "versionNum", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enabled"]) -> MetaOapg.properties.enabled: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["numIterations"]) -> MetaOapg.properties.numIterations: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["radiusDisplayHint"]) -> MetaOapg.properties.radiusDisplayHint: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["radiusCustomPassphraseHint"]) -> MetaOapg.properties.radiusCustomPassphraseHint: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["directAuthChainedUsername"]) -> MetaOapg.properties.directAuthChainedUsername: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["numAttempts"]) -> MetaOapg.properties.numAttempts: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["serverTimeout"]) -> MetaOapg.properties.serverTimeout: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hostName"]) -> MetaOapg.properties.hostName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authPort"]) -> MetaOapg.properties.authPort: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accountingPort"]) -> MetaOapg.properties.accountingPort: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authType"]) -> MetaOapg.properties.authType: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sharedSecret"]) -> MetaOapg.properties.sharedSecret: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["realmPrefix"]) -> MetaOapg.properties.realmPrefix: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["realmSuffix"]) -> MetaOapg.properties.realmSuffix: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enableBasicMSCHAPv2Validation_1"]) -> MetaOapg.properties.enableBasicMSCHAPv2Validation_1: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enabledAux"]) -> MetaOapg.properties.enabledAux: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["numAttempts_2"]) -> MetaOapg.properties.numAttempts_2: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["serverTimeout_2"]) -> MetaOapg.properties.serverTimeout_2: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hostName_2"]) -> MetaOapg.properties.hostName_2: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authPort_2"]) -> MetaOapg.properties.authPort_2: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accountingPort_2"]) -> MetaOapg.properties.accountingPort_2: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authType_2"]) -> MetaOapg.properties.authType_2: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sharedSecret_2"]) -> MetaOapg.properties.sharedSecret_2: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nameIdSuffix"]) -> MetaOapg.properties.nameIdSuffix: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["realmPrefix_2"]) -> MetaOapg.properties.realmPrefix_2: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["realmSuffix_2"]) -> MetaOapg.properties.realmSuffix_2: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enableBasicMSCHAPv2Validation_2"]) -> MetaOapg.properties.enableBasicMSCHAPv2Validation_2: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["showDomainIfUserInputAvailable"]) -> MetaOapg.properties.showDomainIfUserInputAvailable: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["className"]) -> typing.Union[MetaOapg.properties.className, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayName"]) -> typing.Union[MetaOapg.properties.displayName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jarFile"]) -> typing.Union[MetaOapg.properties.jarFile, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authMethod"]) -> typing.Union[MetaOapg.properties.authMethod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["versionNum"]) -> typing.Union[MetaOapg.properties.versionNum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "enabled", "numIterations", "radiusDisplayHint", "radiusCustomPassphraseHint", "directAuthChainedUsername", "numAttempts", "serverTimeout", "hostName", "authPort", "accountingPort", "authType", "sharedSecret", "realmPrefix", "realmSuffix", "enableBasicMSCHAPv2Validation_1", "enabledAux", "numAttempts_2", "serverTimeout_2", "hostName_2", "authPort_2", "accountingPort_2", "authType_2", "sharedSecret_2", "nameIdSuffix", "realmPrefix_2", "realmSuffix_2", "enableBasicMSCHAPv2Validation_2", "showDomainIfUserInputAvailable", "className", "displayName", "jarFile", "authMethod", "versionNum", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        numAttempts: typing.Union[MetaOapg.properties.numAttempts, str, ],
        hostName: typing.Union[MetaOapg.properties.hostName, str, ],
        realmSuffix: typing.Union[MetaOapg.properties.realmSuffix, str, ],
        enableBasicMSCHAPv2Validation_1: typing.Union[MetaOapg.properties.enableBasicMSCHAPv2Validation_1, bool, ],
        enableBasicMSCHAPv2Validation_2: typing.Union[MetaOapg.properties.enableBasicMSCHAPv2Validation_2, bool, ],
        enabled: typing.Union[MetaOapg.properties.enabled, bool, ],
        serverTimeout: typing.Union[MetaOapg.properties.serverTimeout, str, ],
        showDomainIfUserInputAvailable: typing.Union[MetaOapg.properties.showDomainIfUserInputAvailable, bool, ],
        accountingPort_2: typing.Union[MetaOapg.properties.accountingPort_2, str, ],
        numIterations: typing.Union[MetaOapg.properties.numIterations, str, ],
        radiusCustomPassphraseHint: typing.Union[MetaOapg.properties.radiusCustomPassphraseHint, str, ],
        authPort: typing.Union[MetaOapg.properties.authPort, str, ],
        numAttempts_2: typing.Union[MetaOapg.properties.numAttempts_2, str, ],
        authType: typing.Union[MetaOapg.properties.authType, str, ],
        enabledAux: typing.Union[MetaOapg.properties.enabledAux, bool, ],
        sharedSecret: typing.Union[MetaOapg.properties.sharedSecret, str, ],
        sharedSecret_2: typing.Union[MetaOapg.properties.sharedSecret_2, str, ],
        nameIdSuffix: typing.Union[MetaOapg.properties.nameIdSuffix, dict, frozendict.frozendict, ],
        directAuthChainedUsername: typing.Union[MetaOapg.properties.directAuthChainedUsername, bool, ],
        hostName_2: typing.Union[MetaOapg.properties.hostName_2, str, ],
        authType_2: typing.Union[MetaOapg.properties.authType_2, str, ],
        radiusDisplayHint: typing.Union[MetaOapg.properties.radiusDisplayHint, str, ],
        serverTimeout_2: typing.Union[MetaOapg.properties.serverTimeout_2, str, ],
        accountingPort: typing.Union[MetaOapg.properties.accountingPort, str, ],
        realmPrefix_2: typing.Union[MetaOapg.properties.realmPrefix_2, str, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        authPort_2: typing.Union[MetaOapg.properties.authPort_2, str, ],
        realmPrefix: typing.Union[MetaOapg.properties.realmPrefix, str, ],
        realmSuffix_2: typing.Union[MetaOapg.properties.realmSuffix_2, str, ],
        className: typing.Union[MetaOapg.properties.className, str, schemas.Unset] = schemas.unset,
        displayName: typing.Union[MetaOapg.properties.displayName, str, schemas.Unset] = schemas.unset,
        jarFile: typing.Union[MetaOapg.properties.jarFile, str, schemas.Unset] = schemas.unset,
        authMethod: typing.Union[MetaOapg.properties.authMethod, str, schemas.Unset] = schemas.unset,
        versionNum: typing.Union[MetaOapg.properties.versionNum, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'RadiusAuthMethodSettings':
        return super().__new__(
            cls,
            *_args,
            numAttempts=numAttempts,
            hostName=hostName,
            realmSuffix=realmSuffix,
            enableBasicMSCHAPv2Validation_1=enableBasicMSCHAPv2Validation_1,
            enableBasicMSCHAPv2Validation_2=enableBasicMSCHAPv2Validation_2,
            enabled=enabled,
            serverTimeout=serverTimeout,
            showDomainIfUserInputAvailable=showDomainIfUserInputAvailable,
            accountingPort_2=accountingPort_2,
            numIterations=numIterations,
            radiusCustomPassphraseHint=radiusCustomPassphraseHint,
            authPort=authPort,
            numAttempts_2=numAttempts_2,
            authType=authType,
            enabledAux=enabledAux,
            sharedSecret=sharedSecret,
            sharedSecret_2=sharedSecret_2,
            nameIdSuffix=nameIdSuffix,
            directAuthChainedUsername=directAuthChainedUsername,
            hostName_2=hostName_2,
            authType_2=authType_2,
            radiusDisplayHint=radiusDisplayHint,
            serverTimeout_2=serverTimeout_2,
            accountingPort=accountingPort,
            realmPrefix_2=realmPrefix_2,
            name=name,
            authPort_2=authPort_2,
            realmPrefix=realmPrefix,
            realmSuffix_2=realmSuffix_2,
            className=className,
            displayName=displayName,
            jarFile=jarFile,
            authMethod=authMethod,
            versionNum=versionNum,
            _configuration=_configuration,
            **kwargs,
        )
