# coding: utf-8

"""
    Unified Access Gateway REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.2
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class WazuhAgentSettings(
    schemas.ComposedSchema,
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        
        class all_of_1(
            schemas.DictSchema
        ):
        
        
            class MetaOapg:
                required = {
                    "wazuhServerHostAndPort",
                }
                
                class properties:
                    wazuhServerHostAndPort = schemas.StrSchema
                    
                    
                    class wazuhProtocol(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                    
                    
                        class MetaOapg:
                            enum_value_to_name = {
                                "TCP": "TCP",
                                "UDP": "UDP",
                            }
                        
                        @schemas.classproperty
                        def TCP(cls):
                            return cls("TCP")
                        
                        @schemas.classproperty
                        def UDP(cls):
                            return cls("UDP")
                    wazuhRegistrationHostAndPort = schemas.StrSchema
                    wazuhRegistrationPassword = schemas.StrSchema
                    
                    
                    class wazuhEnrollmentDelay(
                        schemas.Int64Schema
                    ):
                    
                    
                        class MetaOapg:
                            format = 'int64'
                            inclusive_minimum = 1
                    
                    
                    class wazuhKeepAliveInterval(
                        schemas.Int64Schema
                    ):
                    
                    
                        class MetaOapg:
                            format = 'int64'
                            inclusive_minimum = 1
                    
                    
                    class wazuhTimeReconnect(
                        schemas.Int64Schema
                    ):
                    
                    
                        class MetaOapg:
                            format = 'int64'
                            inclusive_minimum = 1
                    
                    
                    class wazuhAgentName(
                        schemas.StrSchema
                    ):
                    
                    
                        class MetaOapg:
                            regex=[{
                                'pattern': r'(^[a-zA-Z\d_.-]{2,100}$)?',  # noqa: E501
                            }]
                    
                    
                    class wazuhAgentGroups(
                        schemas.StrSchema
                    ):
                    
                    
                        class MetaOapg:
                            regex=[{
                                'pattern': r'(^[a-zA-Z\d ,._-]{2,100}$)?',  # noqa: E501
                            }]
                    wazuhServerCACertificate = schemas.StrSchema
                    wazuhAgentCertificate = schemas.StrSchema
                    wazuhAgentKey = schemas.StrSchema
                    __annotations__ = {
                        "wazuhServerHostAndPort": wazuhServerHostAndPort,
                        "wazuhProtocol": wazuhProtocol,
                        "wazuhRegistrationHostAndPort": wazuhRegistrationHostAndPort,
                        "wazuhRegistrationPassword": wazuhRegistrationPassword,
                        "wazuhEnrollmentDelay": wazuhEnrollmentDelay,
                        "wazuhKeepAliveInterval": wazuhKeepAliveInterval,
                        "wazuhTimeReconnect": wazuhTimeReconnect,
                        "wazuhAgentName": wazuhAgentName,
                        "wazuhAgentGroups": wazuhAgentGroups,
                        "wazuhServerCACertificate": wazuhServerCACertificate,
                        "wazuhAgentCertificate": wazuhAgentCertificate,
                        "wazuhAgentKey": wazuhAgentKey,
                    }
            
            wazuhServerHostAndPort: MetaOapg.properties.wazuhServerHostAndPort
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhServerHostAndPort"]) -> MetaOapg.properties.wazuhServerHostAndPort: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhProtocol"]) -> MetaOapg.properties.wazuhProtocol: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhRegistrationHostAndPort"]) -> MetaOapg.properties.wazuhRegistrationHostAndPort: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhRegistrationPassword"]) -> MetaOapg.properties.wazuhRegistrationPassword: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhEnrollmentDelay"]) -> MetaOapg.properties.wazuhEnrollmentDelay: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhKeepAliveInterval"]) -> MetaOapg.properties.wazuhKeepAliveInterval: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhTimeReconnect"]) -> MetaOapg.properties.wazuhTimeReconnect: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhAgentName"]) -> MetaOapg.properties.wazuhAgentName: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhAgentGroups"]) -> MetaOapg.properties.wazuhAgentGroups: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhServerCACertificate"]) -> MetaOapg.properties.wazuhServerCACertificate: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhAgentCertificate"]) -> MetaOapg.properties.wazuhAgentCertificate: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["wazuhAgentKey"]) -> MetaOapg.properties.wazuhAgentKey: ...
            
            @typing.overload
            def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
            
            def __getitem__(self, name: typing.Union[typing_extensions.Literal["wazuhServerHostAndPort", "wazuhProtocol", "wazuhRegistrationHostAndPort", "wazuhRegistrationPassword", "wazuhEnrollmentDelay", "wazuhKeepAliveInterval", "wazuhTimeReconnect", "wazuhAgentName", "wazuhAgentGroups", "wazuhServerCACertificate", "wazuhAgentCertificate", "wazuhAgentKey", ], str]):
                # dict_instance[name] accessor
                return super().__getitem__(name)
            
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhServerHostAndPort"]) -> MetaOapg.properties.wazuhServerHostAndPort: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhProtocol"]) -> typing.Union[MetaOapg.properties.wazuhProtocol, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhRegistrationHostAndPort"]) -> typing.Union[MetaOapg.properties.wazuhRegistrationHostAndPort, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhRegistrationPassword"]) -> typing.Union[MetaOapg.properties.wazuhRegistrationPassword, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhEnrollmentDelay"]) -> typing.Union[MetaOapg.properties.wazuhEnrollmentDelay, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhKeepAliveInterval"]) -> typing.Union[MetaOapg.properties.wazuhKeepAliveInterval, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhTimeReconnect"]) -> typing.Union[MetaOapg.properties.wazuhTimeReconnect, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhAgentName"]) -> typing.Union[MetaOapg.properties.wazuhAgentName, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhAgentGroups"]) -> typing.Union[MetaOapg.properties.wazuhAgentGroups, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhServerCACertificate"]) -> typing.Union[MetaOapg.properties.wazuhServerCACertificate, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhAgentCertificate"]) -> typing.Union[MetaOapg.properties.wazuhAgentCertificate, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["wazuhAgentKey"]) -> typing.Union[MetaOapg.properties.wazuhAgentKey, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
            
            def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["wazuhServerHostAndPort", "wazuhProtocol", "wazuhRegistrationHostAndPort", "wazuhRegistrationPassword", "wazuhEnrollmentDelay", "wazuhKeepAliveInterval", "wazuhTimeReconnect", "wazuhAgentName", "wazuhAgentGroups", "wazuhServerCACertificate", "wazuhAgentCertificate", "wazuhAgentKey", ], str]):
                return super().get_item_oapg(name)
            
        
            def __new__(
                cls,
                *_args: typing.Union[dict, frozendict.frozendict, ],
                wazuhServerHostAndPort: typing.Union[MetaOapg.properties.wazuhServerHostAndPort, str, ],
                wazuhProtocol: typing.Union[MetaOapg.properties.wazuhProtocol, str, schemas.Unset] = schemas.unset,
                wazuhRegistrationHostAndPort: typing.Union[MetaOapg.properties.wazuhRegistrationHostAndPort, str, schemas.Unset] = schemas.unset,
                wazuhRegistrationPassword: typing.Union[MetaOapg.properties.wazuhRegistrationPassword, str, schemas.Unset] = schemas.unset,
                wazuhEnrollmentDelay: typing.Union[MetaOapg.properties.wazuhEnrollmentDelay, decimal.Decimal, int, schemas.Unset] = schemas.unset,
                wazuhKeepAliveInterval: typing.Union[MetaOapg.properties.wazuhKeepAliveInterval, decimal.Decimal, int, schemas.Unset] = schemas.unset,
                wazuhTimeReconnect: typing.Union[MetaOapg.properties.wazuhTimeReconnect, decimal.Decimal, int, schemas.Unset] = schemas.unset,
                wazuhAgentName: typing.Union[MetaOapg.properties.wazuhAgentName, str, schemas.Unset] = schemas.unset,
                wazuhAgentGroups: typing.Union[MetaOapg.properties.wazuhAgentGroups, str, schemas.Unset] = schemas.unset,
                wazuhServerCACertificate: typing.Union[MetaOapg.properties.wazuhServerCACertificate, str, schemas.Unset] = schemas.unset,
                wazuhAgentCertificate: typing.Union[MetaOapg.properties.wazuhAgentCertificate, str, schemas.Unset] = schemas.unset,
                wazuhAgentKey: typing.Union[MetaOapg.properties.wazuhAgentKey, str, schemas.Unset] = schemas.unset,
                _configuration: typing.Optional[schemas.Configuration] = None,
                **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
            ) -> 'all_of_1':
                return super().__new__(
                    cls,
                    *_args,
                    wazuhServerHostAndPort=wazuhServerHostAndPort,
                    wazuhProtocol=wazuhProtocol,
                    wazuhRegistrationHostAndPort=wazuhRegistrationHostAndPort,
                    wazuhRegistrationPassword=wazuhRegistrationPassword,
                    wazuhEnrollmentDelay=wazuhEnrollmentDelay,
                    wazuhKeepAliveInterval=wazuhKeepAliveInterval,
                    wazuhTimeReconnect=wazuhTimeReconnect,
                    wazuhAgentName=wazuhAgentName,
                    wazuhAgentGroups=wazuhAgentGroups,
                    wazuhServerCACertificate=wazuhServerCACertificate,
                    wazuhAgentCertificate=wazuhAgentCertificate,
                    wazuhAgentKey=wazuhAgentKey,
                    _configuration=_configuration,
                    **kwargs,
                )
        
        @classmethod
        @functools.lru_cache()
        def all_of(cls):
            # we need this here to make our import statements work
            # we must store _composed_schemas in here so the code is only run
            # when we invoke this method. If we kept this at the class
            # level we would get an error because the class level
            # code would be run when this module is imported, and these composed
            # classes don't exist yet because their module has not finished
            # loading
            return [
                SecurityAgentSettings,
                cls.all_of_1,
            ]


    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'WazuhAgentSettings':
        return super().__new__(
            cls,
            *_args,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.security_agent_settings import SecurityAgentSettings
